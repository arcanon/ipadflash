# Makefile.in generated by automake 1.11.1 from Makefile.am.
# gui/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# 
#   Copyright (C) 2005, 2006, 2007, 2008 Free Software Foundation, Inc.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

# 
# build gtk-gnash, kde-gnash, sdl-gnash, fltk-gnash, aqua-gnash, fb-gnash, riscos-gnash
# and dump-gnash
#

# 
#   Copyright (C) 2007, 2008 Free Software Foundation, Inc.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
# 

# 
#   Copyright (C) 2007, 2008 Free Software Foundation, Inc.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
# 

# 
#   Copyright (C) 2007, 2008 Free Software Foundation, Inc.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
# 

# 
#   Copyright (C) 2007, 2008 Free Software Foundation, Inc.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
# 

# 
#   Copyright (C) 2007, 2008 Free Software Foundation, Inc.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
# 

# 
#   Copyright (C) 2007, 2008 Free Software Foundation, Inc.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
# 

# 
#   Copyright (C) 2007, 2008 Free Software Foundation, Inc.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
# 

# if ALP				# Access Linux Platform
# gtk_gnash_LDFLAGS += "-shared -Xlinker -z -Xlinker defs $(GTK2_LIBS)"
# gtk_gnash_LDADD += $(ALP_LIBS)
# endif
#
# Build the GTK/ALP gui
#

# 
#   Copyright (C) 2007, 2008 Free Software Foundation, Inc.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
# 

# 
#   Copyright (C) 2007, 2008 Free Software Foundation, Inc.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
# 

# 
#   Copyright (C) 2007, 2008 Free Software Foundation, Inc.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
# 

# 
#   Copyright (C) 2007, 2008 Free Software Foundation, Inc.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
# 





pkgdatadir = $(datadir)/gnash
pkgincludedir = $(includedir)/gnash
pkglibdir = $(libdir)/gnash
pkglibexecdir = $(libexecdir)/gnash
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = arm-apple-darwin9
# endif # DYNAMIC_GUI

# AQUA Toolkit
#OS X stuff goes here...
#am__append_1 = -DGUI_AQUA
##am__append_2 = libgnashaqua_ogl.la
am__append_3 = $(FFMPEG_LIBS)
am__append_4 = $(FFMPEG_CFLAGS) 
#am__append_5 = $(MAD_LIBS)
#am__append_6 = $(MAD_CFLAGS)
#am__append_7 = $(GSTREAMER_CFLAGS)
#am__append_8 = $(GSTREAMER_LIBS) 
bin_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3) \
	$(am__EXEEXT_4) $(am__EXEEXT_5) $(am__EXEEXT_6) \
	$(am__EXEEXT_7) $(am__EXEEXT_8) $(am__EXEEXT_9) \
	$(am__EXEEXT_10)
#am__append_9 = bundle
#am__append_10 = Gnash.app am-frag
DIST_COMMON = README $(dist_images_DATA) $(srcdir)/Info.plist.in \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/am-frag/alp.am $(srcdir)/am-frag/aqua.am \
	$(srcdir)/am-frag/dump.am $(srcdir)/am-frag/fb.am \
	$(srcdir)/am-frag/fltk.am $(srcdir)/am-frag/gtk.am \
	$(srcdir)/am-frag/hildon.am $(srcdir)/am-frag/kde.am \
	$(srcdir)/am-frag/qtopia.am $(srcdir)/am-frag/riscos.am \
	$(srcdir)/am-frag/sdl.am

#
# Build the QTOPIA gui
# 
#am__append_11 = qtopia-gnash
##am__append_12 = -DQT_QWS_IPAQ -DQWS
##am__append_13 = $(OPENGL_CFLAGS)
##am__append_14 = $(top_builddir)/backend/libgnashogl.la \
##	$(KDE_LIBS) $(QTOPIA_LIBS) $(QT_LIBS) $(OPENGL_LIBS)

##am__append_15 = kde_glue_opengl.cpp kde_glue_opengl.h kde_glue.h \
##	 	kde.cpp kdesup.h kde_glue.h

#am__append_16 = $(AGG_CFLAGS)
#am__append_17 = $(top_builddir)/backend/libgnashagg.la \
#	$(KDE_LIBS) $(QTOPIA_LIBS) $(QT_LIBS) $(AGG_LIBS)

#am__append_18 = kde_glue_agg.cpp kde_glue_agg.h \
#	 	kde.cpp kdesup.h kde_glue.h


# Build the QTOPIA gui

# Build the KDE gui
#am__append_19 = klash.moc 

#
# Build the KDE gui
# 
#am__append_20 = kde-gnash
##am__append_21 = -DQT3_SUPPORT
##am__append_22 = $(OPENGL_CFLAGS)
##am__append_23 = $(top_builddir)/backend/libgnashogl.la \
##	$(KDE_LIBS) $(QT_LIBS) $(OPENGL_LIBS)

##am__append_24 = kde_glue_opengl.cpp kde_glue_opengl.h kde_glue.h \
##	 	kde.cpp kdesup.h kde_glue.h

#am__append_25 = $(AGG_CFLAGS)
#am__append_26 = $(top_builddir)/backend/libgnashagg.la \
#	$(KDE_LIBS) $(QT_LIBS) $(AGG_LIBS)

#am__append_27 = kde_glue_agg.cpp kde_glue_agg.h \
#	 	kde.cpp kdesup.h kde_glue.h


#
# Build the SDL gui
#
am__append_28 = sdl-gnash
#am__append_29 = $(OPENGL_CFLAGS)
#am__append_30 = $(top_builddir)/backend/libgnashogl.la \
#	$(OPENGL_LIBS)

#am__append_31 = sdl_ogl_glue.cpp sdl_ogl_glue.h 
am__append_32 = $(AGG_CFLAGS)
am__append_33 = $(top_builddir)/backend/libgnashagg.la \
	$(AGG_LIBS)

am__append_34 = sdl_agg_glue.cpp sdl_agg_glue.h 
#am__append_35 = $(CAIRO_CFLAGS)
#am__append_36 = $(top_builddir)/backend/libgnashcairo.la \
#	$(CAIRO_LIBS) 

#am__append_37 = sdl_cairo_glue.cpp sdl_cairo_glue.h 

#
# Build the FLTK gui
#
#am__append_38 = fltk-gnash
# if BUILD_OGL_RENDERER
#	fltk_gnash_CPPFLAGS += $(OPENGL_CFLAGS)
# 	fltk_gnash_LDADD += $(top_builddir)/backend/libgnashogl.la
#	$(SDL_LIBS) $(OPENGL_LIBS)
# 	fltk_gnash_SOURCES += fltk_glue_ogl.cpp fltk_glue_ogl.h \
# 	 	fltk.cpp fltksup.h 
# endif
#am__append_39 = $(AGG_CFLAGS)
#am__append_40 = $(top_builddir)/backend/libgnashagg.la \
#	$(FLTK2_LIBS) $(AGG_LIBS) $(XFT_LIBS) $(X11_LIBS)

#am__append_41 = fltk_glue_agg.cpp fltk_glue_agg.h \
#	 	fltk.cpp fltksup.h 

##am__append_42 = -lgdi32 -lole32 -luuid -lws2_32 -lmsimg32

#
# Build the AQUA gui
#
#am__append_43 = aqua-gnash
##am__append_44 = $(OPENGL_CFLAGS)
##am__append_45 = $(top_builddir)/backend/libgnashogl.la \
##	$(AQUA_LIBS) $(OPENGL_LIBS)

##am__append_46 = aqua_ogl_glue.cpp aqua_ogl_glue.h \
##	aqua.cpp aquasup.h aqua_glue.h


#
# Build the GTK gui
#
#am__append_47 = gtk-gnash
##am__append_48 = -DALP_BUILD=ALP_BUILD_DEBUG
#gtk_gnash_DEPENDENCIES = .configline
##am__append_49 = $(OPENGL_CFLAGS)
##am__append_50 = gtk_glue_gtkglext.cpp gtk_glue_gtkglext.h \
##		gtk.cpp gtksup.h gtk_glue.h

#am__append_51 = $(AGG_CFLAGS)
#am__append_52 = gtk_glue_agg.cpp gtk_glue_agg.h \
#		gtk.cpp gtksup.h gtk_glue.h

##am__append_53 = $(CAIRO_CFLAGS)
##am__append_54 = gtk_glue_cairo.cpp gtk_glue_cairo.h \
##		gtk.cpp gtksup.h gtk_glue.h

##am__append_55 = $(OPENGL_CFLAGS)
##am__append_56 = gtk_glue_gtkglext.cpp gtk_glue_gtkglext.h \
##		gtk.cpp gtksup.h gtk_glue.h

##am__append_57 = $(OPENGL_LIBS)
#am__append_58 = $(AGG_CFLAGS)
#am__append_59 = gtk_glue_agg.cpp gtk_glue_agg.h \
#		gtk.cpp gtksup.h gtk_glue.h

#am__append_60 = $(AGG_LIBS)
##am__append_61 = $(CAIRO_CFLAGS)
##am__append_62 = gtk_glue_cairo.cpp gtk_glue_cairo.h \
##		gtk.cpp gtksup.h gtk_glue.h

##am__append_63 = $(CAIRO_LIBS)

#
# Build the GTK/HILDON gui
#
#am__append_64 = hildon-gnash
#gtk_gnash_DEPENDENCIES = .configline
##am__append_65 = $(OPENGL_CFLAGS)
##am__append_66 = gtk_glue_gtkglext.cpp gtk_glue_gtkglext.h \
##		gtk.cpp gtksup.h gtk_glue.h

#am__append_67 = $(AGG_CFLAGS) $(HILDON_CFLAGS)
#am__append_68 = gtk_glue_agg.cpp gtk_glue_agg.h \
#		gtk.cpp gtksup.h gtk_glue.h

##am__append_69 = $(CAIRO_CFLAGS)
##am__append_70 = gtk_glue_cairo.cpp gtk_glue_cairo.h \
##		gtk.cpp gtksup.h gtk_glue.h


#
# Build the DUMP gui
#
#am__append_71 = dump-gnash

#
# Build the FB gui
#
#am__append_72 = fb-gnash
#fb_gnash_DEPENDENCIES = .configline
#am__append_73 = $(AGG_CFLAGS)
#am__append_74 = 

#
# Build the RISCOS gui
#
#am__append_75 = riscos-gnash
#riscos_gnash_DEPENDENCIES = .configline
#am__append_76 = $(AGG_CFLAGS)
#am__append_77 = riscos_glue_agg.cpp  riscos_glue_agg.h   
subdir = gui
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/macros/agg.m4 \
	$(top_srcdir)/macros/alp.m4 $(top_srcdir)/macros/argz.m4 \
	$(top_srcdir)/macros/boost.m4 $(top_srcdir)/macros/curl.m4 \
	$(top_srcdir)/macros/dbus.m4 $(top_srcdir)/macros/docbook.m4 \
	$(top_srcdir)/macros/ffmpeg.m4 $(top_srcdir)/macros/firefox.m4 \
	$(top_srcdir)/macros/freetype.m4 \
	$(top_srcdir)/macros/gettext.m4 $(top_srcdir)/macros/glib.m4 \
	$(top_srcdir)/macros/gnashpkgtool.m4 \
	$(top_srcdir)/macros/gtk2.m4 $(top_srcdir)/macros/gtkglext.m4 \
	$(top_srcdir)/macros/hildon.m4 $(top_srcdir)/macros/iconv.m4 \
	$(top_srcdir)/macros/kde.m4 $(top_srcdir)/macros/lib-link.m4 \
	$(top_srcdir)/macros/lib-prefix.m4 \
	$(top_srcdir)/macros/libXML.m4 $(top_srcdir)/macros/libexe.m4 \
	$(top_srcdir)/macros/libtool.m4 $(top_srcdir)/macros/ltdl.m4 \
	$(top_srcdir)/macros/ltoptions.m4 \
	$(top_srcdir)/macros/ltsugar.m4 \
	$(top_srcdir)/macros/ltversion.m4 \
	$(top_srcdir)/macros/lt~obsolete.m4 \
	$(top_srcdir)/macros/ming.m4 $(top_srcdir)/macros/mtasc.m4 \
	$(top_srcdir)/macros/mysql.m4 $(top_srcdir)/macros/nls.m4 \
	$(top_srcdir)/macros/opengl.m4 $(top_srcdir)/macros/pango.m4 \
	$(top_srcdir)/macros/pkg.m4 $(top_srcdir)/macros/po.m4 \
	$(top_srcdir)/macros/progtest.m4 \
	$(top_srcdir)/macros/pthreads.m4 $(top_srcdir)/macros/qt.m4 \
	$(top_srcdir)/macros/qtopia.m4 $(top_srcdir)/macros/sdl.m4 \
	$(top_srcdir)/macros/x11.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/gnashconfig.h
CONFIG_CLEAN_FILES = Info.plist
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(pkglibdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(bindir)" "$(DESTDIR)$(imagesdir)"
LTLIBRARIES = $(noinst_LTLIBRARIES) $(pkglib_LTLIBRARIES)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
###am__DEPENDENCIES_3 = $(top_builddir)/backend/libgnashogl.la \
###	$(GNASH_LIBS) \
###	$(am__DEPENDENCIES_2) \
###	$(am__DEPENDENCIES_1)
###am__DEPENDENCIES_3 = $(top_builddir)/backend/libgnashcairo.la \
###	$(GNASH_LIBS) \
###	$(am__DEPENDENCIES_2) \
###	$(am__DEPENDENCIES_1)
#am__DEPENDENCIES_3 = $(top_builddir)/backend/libgnashagg.la \
#	$(GNASH_LIBS) \
#	$(am__DEPENDENCIES_2) \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1)
##am__DEPENDENCIES_4 = $(am__DEPENDENCIES_1)
#am__DEPENDENCIES_5 = $(am__DEPENDENCIES_1)
##am__DEPENDENCIES_6 = $(am__DEPENDENCIES_1)
#libgnashalp_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_3) \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_4) \
#	$(am__DEPENDENCIES_5) \
#	$(am__DEPENDENCIES_6)
am__libgnashalp_la_SOURCES_DIST = gnash.cpp gui.cpp gui.h Player.cpp \
	Player.h NullGui.cpp NullGui.h gui_gtk.cpp \
	gtk_glue_gtkglext.cpp gtk_glue_gtkglext.h gtk.cpp gtksup.h \
	gtk_glue.h gtk_glue_agg.cpp gtk_glue_agg.h gtk_glue_cairo.cpp \
	gtk_glue_cairo.h
am__objects_1 = libgnashalp_la-gnash.lo libgnashalp_la-gui.lo \
	libgnashalp_la-Player.lo libgnashalp_la-NullGui.lo
##am__objects_2 = libgnashalp_la-gtk_glue_gtkglext.lo \
##	libgnashalp_la-gtk.lo
#am__objects_3 = libgnashalp_la-gtk_glue_agg.lo \
#	libgnashalp_la-gtk.lo
##am__objects_4 = libgnashalp_la-gtk_glue_cairo.lo \
##	libgnashalp_la-gtk.lo
#am_libgnashalp_la_OBJECTS = $(am__objects_1) \
#	libgnashalp_la-gui_gtk.lo $(am__objects_2) \
#	$(am__objects_3) $(am__objects_4)
libgnashalp_la_OBJECTS = $(am_libgnashalp_la_OBJECTS)
libgnashalp_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libgnashalp_la_LDFLAGS) $(LDFLAGS) -o $@
#am_libgnashalp_la_rpath = -rpath $(pkglibdir)
##libgnashaqua_ogl_la_DEPENDENCIES = $(top_builddir)/backend/libgnashogl.la
am__libgnashaqua_ogl_la_SOURCES_DIST = aqua_ogl_glue.cpp \
	aqua_ogl_glue.h aqua.cpp aquasup.h aqua_glue.h
##am_libgnashaqua_ogl_la_OBJECTS = libgnashaqua_ogl_la-aqua_ogl_glue.lo \
##	libgnashaqua_ogl_la-aqua.lo
libgnashaqua_ogl_la_OBJECTS = $(am_libgnashaqua_ogl_la_OBJECTS)
libgnashaqua_ogl_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libgnashaqua_ogl_la_LDFLAGS) $(LDFLAGS) -o $@
##am_libgnashaqua_ogl_la_rpath =
#am__EXEEXT_1 = qtopia-gnash$(EXEEXT)
#am__EXEEXT_2 = kde-gnash$(EXEEXT)
am__EXEEXT_3 = sdl-gnash$(EXEEXT)
#am__EXEEXT_4 = fltk-gnash$(EXEEXT)
#am__EXEEXT_5 = aqua-gnash$(EXEEXT)
#am__EXEEXT_6 = gtk-gnash$(EXEEXT)
#am__EXEEXT_7 = hildon-gnash$(EXEEXT)
#am__EXEEXT_8 = dump-gnash$(EXEEXT)
#am__EXEEXT_9 = fb-gnash$(EXEEXT)
#am__EXEEXT_10 = riscos-gnash$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)
am__aqua_gnash_SOURCES_DIST = gnash.cpp gui.cpp gui.h Player.cpp \
	Player.h NullGui.cpp NullGui.h gui_aqua.cpp aqua_ogl_glue.cpp \
	aqua_ogl_glue.h aqua.cpp aquasup.h aqua_glue.h
am__objects_5 = aqua_gnash-gnash.$(OBJEXT) aqua_gnash-gui.$(OBJEXT) \
	aqua_gnash-Player.$(OBJEXT) aqua_gnash-NullGui.$(OBJEXT)
##am__objects_6 = aqua_gnash-aqua_ogl_glue.$(OBJEXT) \
##	aqua_gnash-aqua.$(OBJEXT)
#am_aqua_gnash_OBJECTS = $(am__objects_5) \
#	aqua_gnash-gui_aqua.$(OBJEXT) \
#	$(am__objects_6)
aqua_gnash_OBJECTS = $(am_aqua_gnash_OBJECTS)
am__DEPENDENCIES_7 = $(am__DEPENDENCIES_1)
#am__DEPENDENCIES_8 = $(am__DEPENDENCIES_1)
am__DEPENDENCIES_9 = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_7) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
##am__DEPENDENCIES_10 = $(top_builddir)/backend/libgnashogl.la \
##	$(am__DEPENDENCIES_1)
#aqua_gnash_DEPENDENCIES = $(am__DEPENDENCIES_1) \
#	$(GNASH_LIBS) $(am__DEPENDENCIES_9) \
#	$(am__DEPENDENCIES_10)
aqua_gnash_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(aqua_gnash_LDFLAGS) $(LDFLAGS) -o $@
am__dump_gnash_SOURCES_DIST = gnash.cpp gui.cpp gui.h Player.cpp \
	Player.h NullGui.cpp NullGui.h gui_dump.cpp dump.cpp dump.h
am__objects_7 = dump_gnash-gnash.$(OBJEXT) dump_gnash-gui.$(OBJEXT) \
	dump_gnash-Player.$(OBJEXT) dump_gnash-NullGui.$(OBJEXT)
#am_dump_gnash_OBJECTS = $(am__objects_7) \
#	dump_gnash-gui_dump.$(OBJEXT) \
#	dump_gnash-dump.$(OBJEXT)
dump_gnash_OBJECTS = $(am_dump_gnash_OBJECTS)
dump_gnash_LDADD = $(LDADD)
dump_gnash_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(dump_gnash_LDFLAGS) $(LDFLAGS) -o $@
am__fb_gnash_SOURCES_DIST = gnash.cpp gui.cpp gui.h Player.cpp \
	Player.h NullGui.cpp NullGui.h gui_fb.cpp fb.cpp fbsup.h
am__objects_8 = fb_gnash-gnash.$(OBJEXT) fb_gnash-gui.$(OBJEXT) \
	fb_gnash-Player.$(OBJEXT) fb_gnash-NullGui.$(OBJEXT)
am__objects_9 =
#am_fb_gnash_OBJECTS = $(am__objects_8) \
#	fb_gnash-gui_fb.$(OBJEXT) \
#	fb_gnash-fb.$(OBJEXT) $(am__objects_9)
fb_gnash_OBJECTS = $(am_fb_gnash_OBJECTS)
#fb_gnash_DEPENDENCIES = $(top_builddir)/backend/libgnashagg.la \
#	$(GNASH_LIBS) \
#	$(am__DEPENDENCIES_1)
fb_gnash_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(fb_gnash_LDFLAGS) $(LDFLAGS) -o $@
am__fltk_gnash_SOURCES_DIST = gnash.cpp gui.cpp gui.h Player.cpp \
	Player.h NullGui.cpp NullGui.h gui_fltk.cpp fltk_glue_agg.cpp \
	fltk_glue_agg.h fltk.cpp fltksup.h
am__objects_10 = fltk_gnash-gnash.$(OBJEXT) fltk_gnash-gui.$(OBJEXT) \
	fltk_gnash-Player.$(OBJEXT) fltk_gnash-NullGui.$(OBJEXT)
#am__objects_11 = fltk_gnash-fltk_glue_agg.$(OBJEXT) \
#	fltk_gnash-fltk.$(OBJEXT)
#am_fltk_gnash_OBJECTS = $(am__objects_10) \
#	fltk_gnash-gui_fltk.$(OBJEXT) \
#	$(am__objects_11)
fltk_gnash_OBJECTS = $(am_fltk_gnash_OBJECTS)
#am__DEPENDENCIES_11 = $(top_builddir)/backend/libgnashagg.la \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1)
#fltk_gnash_DEPENDENCIES = $(am__DEPENDENCIES_1) \
#	$(GNASH_LIBS) $(am__DEPENDENCIES_9) \
#	$(am__DEPENDENCIES_11) \
#	$(am__DEPENDENCIES_1)
fltk_gnash_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(fltk_gnash_LDFLAGS) $(LDFLAGS) -o $@
am__gtk_gnash_SOURCES_DIST = gnash.cpp gui.cpp gui.h Player.cpp \
	Player.h NullGui.cpp NullGui.h gui_gtk.cpp \
	gtk_glue_gtkglext.cpp gtk_glue_gtkglext.h gtk.cpp gtksup.h \
	gtk_glue.h gtk_glue_agg.cpp gtk_glue_agg.h gtk_glue_cairo.cpp \
	gtk_glue_cairo.h
am__objects_12 = gtk_gnash-gnash.$(OBJEXT) gtk_gnash-gui.$(OBJEXT) \
	gtk_gnash-Player.$(OBJEXT) gtk_gnash-NullGui.$(OBJEXT)
##am__objects_13 = gtk_gnash-gtk_glue_gtkglext.$(OBJEXT) \
##	gtk_gnash-gtk.$(OBJEXT)
#am__objects_14 = gtk_gnash-gtk_glue_agg.$(OBJEXT) \
#	gtk_gnash-gtk.$(OBJEXT)
##am__objects_15 = gtk_gnash-gtk_glue_cairo.$(OBJEXT) \
##	gtk_gnash-gtk.$(OBJEXT)
#am_gtk_gnash_OBJECTS = $(am__objects_12) \
#	gtk_gnash-gui_gtk.$(OBJEXT) \
#	$(am__objects_13) $(am__objects_14) \
#	$(am__objects_15)
gtk_gnash_OBJECTS = $(am_gtk_gnash_OBJECTS)
###gtk_gnash_DEPENDENCIES = $(top_builddir)/backend/libgnashogl.la \
###	$(GNASH_LIBS) \
###	$(am__DEPENDENCIES_2) \
###	$(am__DEPENDENCIES_1)
###gtk_gnash_DEPENDENCIES = $(top_builddir)/backend/libgnashcairo.la \
###	$(GNASH_LIBS) \
###	$(am__DEPENDENCIES_2) \
###	$(am__DEPENDENCIES_1)
#gtk_gnash_DEPENDENCIES = $(top_builddir)/backend/libgnashagg.la \
#	$(GNASH_LIBS) \
#	$(am__DEPENDENCIES_2) \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1)
gtk_gnash_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(gtk_gnash_LDFLAGS) $(LDFLAGS) -o $@
am__hildon_gnash_SOURCES_DIST = gnash.cpp gui.cpp gui.h Player.cpp \
	Player.h NullGui.cpp NullGui.h gui_gtk.cpp \
	gtk_glue_gtkglext.cpp gtk_glue_gtkglext.h gtk.cpp gtksup.h \
	gtk_glue.h gtk_glue_agg.cpp gtk_glue_agg.h gtk_glue_cairo.cpp \
	gtk_glue_cairo.h
am__objects_16 = hildon_gnash-gnash.$(OBJEXT) \
	hildon_gnash-gui.$(OBJEXT) hildon_gnash-Player.$(OBJEXT) \
	hildon_gnash-NullGui.$(OBJEXT)
##am__objects_17 = hildon_gnash-gtk_glue_gtkglext.$(OBJEXT) \
##	hildon_gnash-gtk.$(OBJEXT)
#am__objects_18 = hildon_gnash-gtk_glue_agg.$(OBJEXT) \
#	hildon_gnash-gtk.$(OBJEXT)
##am__objects_19 = hildon_gnash-gtk_glue_cairo.$(OBJEXT) \
##	hildon_gnash-gtk.$(OBJEXT)
#am_hildon_gnash_OBJECTS = $(am__objects_16) \
#	hildon_gnash-gui_gtk.$(OBJEXT) \
#	$(am__objects_17) $(am__objects_18) \
#	$(am__objects_19)
hildon_gnash_OBJECTS = $(am_hildon_gnash_OBJECTS)
###hildon_gnash_DEPENDENCIES = $(top_builddir)/backend/libgnashogl.la \
###	$(GNASH_LIBS) \
###	$(am__DEPENDENCIES_2) \
###	$(am__DEPENDENCIES_1) \
###	$(am__DEPENDENCIES_1)
###hildon_gnash_DEPENDENCIES = $(top_builddir)/backend/libgnashcairo.la \
###	$(GNASH_LIBS) \
###	$(am__DEPENDENCIES_2) \
###	$(am__DEPENDENCIES_1) \
###	$(am__DEPENDENCIES_1)
#hildon_gnash_DEPENDENCIES = $(top_builddir)/backend/libgnashagg.la \
#	$(GNASH_LIBS) \
#	$(am__DEPENDENCIES_2) \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1)
hildon_gnash_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(hildon_gnash_LDFLAGS) $(LDFLAGS) -o $@
am__kde_gnash_SOURCES_DIST = gnash.cpp gui.cpp gui.h Player.cpp \
	Player.h NullGui.cpp NullGui.h gui_kde.cpp kde_glue_opengl.cpp \
	kde_glue_opengl.h kde_glue.h kde.cpp kdesup.h kde_glue_agg.cpp \
	kde_glue_agg.h
am__objects_20 = kde_gnash-gnash.$(OBJEXT) kde_gnash-gui.$(OBJEXT) \
	kde_gnash-Player.$(OBJEXT) kde_gnash-NullGui.$(OBJEXT)
##am__objects_21 = kde_gnash-kde_glue_opengl.$(OBJEXT) \
##	kde_gnash-kde.$(OBJEXT)
#am__objects_22 = kde_gnash-kde_glue_agg.$(OBJEXT) \
#	kde_gnash-kde.$(OBJEXT)
#am_kde_gnash_OBJECTS = $(am__objects_20) \
#	kde_gnash-gui_kde.$(OBJEXT) \
#	$(am__objects_21) $(am__objects_22)
kde_gnash_OBJECTS = $(am_kde_gnash_OBJECTS)
##am__DEPENDENCIES_12 = $(top_builddir)/backend/libgnashogl.la \
##	$(am__DEPENDENCIES_1) \
##	$(am__DEPENDENCIES_1) \
##	$(am__DEPENDENCIES_1)
#am__DEPENDENCIES_13 = $(top_builddir)/backend/libgnashagg.la \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1)
#kde_gnash_DEPENDENCIES = $(am__DEPENDENCIES_1) \
#	$(GNASH_LIBS) $(am__DEPENDENCIES_9) \
#	$(am__DEPENDENCIES_12) \
#	$(am__DEPENDENCIES_13)
kde_gnash_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(kde_gnash_LDFLAGS) $(LDFLAGS) -o $@
am__qtopia_gnash_SOURCES_DIST = gnash.cpp gui.cpp gui.h Player.cpp \
	Player.h NullGui.cpp NullGui.h gui_kde.cpp kde_glue_opengl.cpp \
	kde_glue_opengl.h kde_glue.h kde.cpp kdesup.h kde_glue_agg.cpp \
	kde_glue_agg.h
am__objects_23 = qtopia_gnash-gnash.$(OBJEXT) \
	qtopia_gnash-gui.$(OBJEXT) qtopia_gnash-Player.$(OBJEXT) \
	qtopia_gnash-NullGui.$(OBJEXT)
##am__objects_24 = qtopia_gnash-kde_glue_opengl.$(OBJEXT) \
##	qtopia_gnash-kde.$(OBJEXT)
#am__objects_25 = qtopia_gnash-kde_glue_agg.$(OBJEXT) \
#	qtopia_gnash-kde.$(OBJEXT)
#am_qtopia_gnash_OBJECTS = $(am__objects_23) \
#	qtopia_gnash-gui_kde.$(OBJEXT) \
#	$(am__objects_24) $(am__objects_25)
qtopia_gnash_OBJECTS = $(am_qtopia_gnash_OBJECTS)
##am__DEPENDENCIES_14 = $(top_builddir)/backend/libgnashogl.la \
##	$(am__DEPENDENCIES_1) \
##	$(am__DEPENDENCIES_1) \
##	$(am__DEPENDENCIES_1) \
##	$(am__DEPENDENCIES_1)
#am__DEPENDENCIES_15 = $(top_builddir)/backend/libgnashagg.la \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1)
#qtopia_gnash_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1) $(GNASH_LIBS) \
#	$(am__DEPENDENCIES_9) \
#	$(am__DEPENDENCIES_14) \
#	$(am__DEPENDENCIES_15)
qtopia_gnash_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(qtopia_gnash_LDFLAGS) $(LDFLAGS) -o $@
am__riscos_gnash_SOURCES_DIST = gnash.cpp gui.cpp gui.h Player.cpp \
	Player.h NullGui.cpp NullGui.h gui_riscos.cpp riscos.cpp \
	riscos_glue.h riscossup.h riscos_glue_agg.cpp \
	riscos_glue_agg.h
am__objects_26 = riscos_gnash-gnash.$(OBJEXT) \
	riscos_gnash-gui.$(OBJEXT) riscos_gnash-Player.$(OBJEXT) \
	riscos_gnash-NullGui.$(OBJEXT)
#am__objects_27 = riscos_gnash-riscos_glue_agg.$(OBJEXT)
#am_riscos_gnash_OBJECTS = $(am__objects_26) \
#	riscos_gnash-gui_riscos.$(OBJEXT) \
#	riscos_gnash-riscos.$(OBJEXT) \
#	$(am__objects_27)
riscos_gnash_OBJECTS = $(am_riscos_gnash_OBJECTS)
#riscos_gnash_DEPENDENCIES = $(top_builddir)/backend/libgnashagg.la \
#	$(GNASH_LIBS) \
#	$(am__DEPENDENCIES_1)
riscos_gnash_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(riscos_gnash_LDFLAGS) $(LDFLAGS) -o $@
am__sdl_gnash_SOURCES_DIST = gnash.cpp gui.cpp gui.h Player.cpp \
	Player.h NullGui.cpp NullGui.h gui_sdl.cpp sdl.cpp sdlsup.h \
	sdl_glue.h sdl_ogl_glue.cpp sdl_ogl_glue.h sdl_agg_glue.cpp \
	sdl_agg_glue.h sdl_cairo_glue.cpp sdl_cairo_glue.h
am__objects_28 = sdl_gnash-gnash.$(OBJEXT) sdl_gnash-gui.$(OBJEXT) \
	sdl_gnash-Player.$(OBJEXT) sdl_gnash-NullGui.$(OBJEXT)
#am__objects_29 = sdl_gnash-sdl_ogl_glue.$(OBJEXT)
am__objects_30 = sdl_gnash-sdl_agg_glue.$(OBJEXT)
#am__objects_31 = sdl_gnash-sdl_cairo_glue.$(OBJEXT)
am_sdl_gnash_OBJECTS = $(am__objects_28) \
	sdl_gnash-gui_sdl.$(OBJEXT) \
	sdl_gnash-sdl.$(OBJEXT) $(am__objects_29) \
	$(am__objects_30) $(am__objects_31)
sdl_gnash_OBJECTS = $(am_sdl_gnash_OBJECTS)
#am__DEPENDENCIES_16 = $(top_builddir)/backend/libgnashogl.la \
#	$(am__DEPENDENCIES_1)
am__DEPENDENCIES_17 = $(top_builddir)/backend/libgnashagg.la \
	$(am__DEPENDENCIES_1)
#am__DEPENDENCIES_18 = $(top_builddir)/backend/libgnashcairo.la \
#	$(am__DEPENDENCIES_1)
sdl_gnash_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(GNASH_LIBS) $(am__DEPENDENCIES_9) \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_16) \
	$(am__DEPENDENCIES_17) \
	$(am__DEPENDENCIES_18)
sdl_gnash_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(sdl_gnash_LDFLAGS) $(LDFLAGS) -o $@
SCRIPTS = $(bin_SCRIPTS)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libgnashalp_la_SOURCES) $(libgnashaqua_ogl_la_SOURCES) \
	$(aqua_gnash_SOURCES) $(dump_gnash_SOURCES) \
	$(fb_gnash_SOURCES) $(fltk_gnash_SOURCES) $(gtk_gnash_SOURCES) \
	$(hildon_gnash_SOURCES) $(kde_gnash_SOURCES) \
	$(qtopia_gnash_SOURCES) $(riscos_gnash_SOURCES) \
	$(sdl_gnash_SOURCES)
DIST_SOURCES = $(am__libgnashalp_la_SOURCES_DIST) \
	$(am__libgnashaqua_ogl_la_SOURCES_DIST) \
	$(am__aqua_gnash_SOURCES_DIST) $(am__dump_gnash_SOURCES_DIST) \
	$(am__fb_gnash_SOURCES_DIST) $(am__fltk_gnash_SOURCES_DIST) \
	$(am__gtk_gnash_SOURCES_DIST) $(am__hildon_gnash_SOURCES_DIST) \
	$(am__kde_gnash_SOURCES_DIST) $(am__qtopia_gnash_SOURCES_DIST) \
	$(am__riscos_gnash_SOURCES_DIST) $(am__sdl_gnash_SOURCES_DIST)
DATA = $(dist_images_DATA)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/ash/ipad-dev/iphonedevonlinux/apps/gnash/missing --run aclocal-1.11
AGG_CFLAGS = -I/home/ash/ipad-dev/iphonedevonlinux/apps/gnash/pre/agg/include/agg2
AGG_LIBS = -L/home/ash/ipad-dev/iphonedevonlinux/apps/gnash/pre/agg/lib -lagg
ALP_CFLAGS = 
ALP_LIBS = 
AMTAR = ${SHELL} /home/ash/ipad-dev/iphonedevonlinux/apps/gnash/missing --run tar
AR = /home/ash/ipad-dev/iphonedevonlinux/toolchain/pre/bin/arm-apple-darwin9-ar
ARGZ_H = argz.h
AS = as
ATK_CFLAGS = 
ATK_CONFIG = 
ATK_LIBS = 
AUTOCONF = ${SHELL} /home/ash/ipad-dev/iphonedevonlinux/apps/gnash/missing --run autoconf
AUTOHEADER = ${SHELL} /home/ash/ipad-dev/iphonedevonlinux/apps/gnash/missing --run autoheader
AUTOMAKE = ${SHELL} /home/ash/ipad-dev/iphonedevonlinux/apps/gnash/missing --run automake-1.11
AUTOTRACE = 
AWK = gawk
BARTENDER = 
BOOST_CFLAGS = -I/home/ash/ipad-dev/iphonedevonlinux/apps/gnash/pre/boost/include/boost-1_44
BOOST_EXTRA_LIBS =  -lboost_serialization-xgcc42-mt-1_44
BOOST_LIBS = -L/home/ash/ipad-dev/iphonedevonlinux/apps/gnash/pre/boost/lib -lboost_thread-xgcc42-mt-1_44 -lboost_date_time-xgcc42-mt-1_44
CAIRO_CFLAGS = 
CAIRO_CONFIG = 
CAIRO_LIBS = 
CC = /home/ash/ipad-dev/iphonedevonlinux/toolchain/pre/bin/arm-apple-darwin9-gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -isysroot /home/ash/ipad-dev/iphonedevonlinux/toolchain/sys -I/home/ash/ipad-dev/iphonedevonlinux/toolchain/sys/usr/include -I/home/ash/ipad-dev/iphonedevonlinux/toolchain/sys/usr/include/OpenGLES/ES2 -I/home/ash/ipad-dev/iphonedevonlinux/toolchain/sys/usr/include/OpenGL -g     -W     -Wall     -Wcast-align     -Wcast-qual     -Wpointer-arith     -Wreturn-type     -Wmissing-declarations     -Wmissing-prototypes     -Wstrict-prototypes     
CONFIG_RPATH = config.rpath
CPP = /home/ash/ipad-dev/iphonedevonlinux/toolchain/pre/bin/arm-apple-darwin9-gcc -E
CPPFLAGS = -isysroot /home/ash/ipad-dev/iphonedevonlinux/toolchain/sys -I/home/ash/ipad-dev/iphonedevonlinux/toolchain/sys/usr/include -g
CURL_CFLAGS = /home/ash/ipad-dev/iphonedevonlinux/apps/gnash/pre/curl/include
CURL_LIBS = -L/home/ash/ipad-dev/iphonedevonlinux/apps/gnash/pre/curl/lib
CXX = /home/ash/ipad-dev/iphonedevonlinux/toolchain/pre/bin/arm-apple-darwin9-g++
CXXCPP = /home/ash/ipad-dev/iphonedevonlinux/toolchain/pre/bin/arm-apple-darwin9-g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -D_THREAD_SAFE      -W     -Wall     -Wcast-align     -Wcast-qual     -Wpointer-arith     -Wreturn-type     -Wnon-virtual-dtor     -Wunused     -Wextra     -ansi     
CYGPATH_W = echo
DB2X_MAN = 
DB2X_MANXML = 
DB2X_PDF = 
DB2X_TEXI = 
DB2X_TEXIXML = 
DB2X_VERSION = 
DB2X_XSLTPROC = 
DBUS_CFLAGS = 
DBUS_LIBS = 
DEFAULT_FLASH_MAJOR_VERSION = 9
DEFAULT_FLASH_MINOR_VERSION = 0
DEFAULT_FLASH_PLATFORM_ID = MAC
DEFAULT_FLASH_REV_NUMBER = 999
DEFAULT_FLASH_SYSTEM_OS = MacOS
DEFAULT_STREAMS_TIMEOUT = 10
DEFS = -DHAVE_CONFIG_H
DEJAGNU = 
DEJAGNU_CFLAGS = 
DEJAGNU_CONFIG = 
DEPDIR = .deps
DLLTOOL = dlltool
DLOPEN = -dlopen
DLPREOPEN = -dlpreopen
DOXYGEN = 
DSYMUTIL = :
DUMPBIN = link -dump -symbols
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
EXPAT_CFLAGS = -I/home/ash/ipad-dev/iphonedevonlinux/apps/gnash/pre/libexpat/include
EXPAT_CONFIG = 
EXPAT_LIBS = -L/home/ash/ipad-dev/iphonedevonlinux/apps/gnash/pre/libexpat/lib -lexpat
EXTENSIONS_LIST = 
FC_MATCH = 
FFMPEG_CFLAGS = -I/home/ash/ipad-dev/iphonedevonlinux/apps/gnash/pre/ffmpeg/include
FFMPEG_LIBS = -L/home/ash/ipad-dev/iphonedevonlinux/apps/gnash/pre/ffmpeg/lib
FGREP = /bin/grep -F
FIREFOX_PLUGINS = 
FLTK2_CFLAGS = 
FLTK2_CONFIG = 
FLTK2_LIBS = 
FONTCONFIG_CFLAGS = -I/home/ash/ipad-dev/iphonedevonlinux/apps/gnash/pre/fontconfig/include
FONTCONFIG_CONFIG = 
FONTCONFIG_LIBS = -L/home/ash/ipad-dev/iphonedevonlinux/apps/gnash/pre/fontconfig/lib -lfontconfig
FOP = 
FREETYPE2_CFLAGS = -I/home/ash/ipad-dev/iphonedevonlinux/apps/gnash/pre/freetype2/include/freetype2
FREETYPE2_LIBS = -L/home/ash/ipad-dev/iphonedevonlinux/apps/gnash/pre/freetype2/lib -lfreetype
GLEXT_CFLAGS = 
GLEXT_LIBS = 
GLIB_CFLAGS = 
GLIB_LIBS = 
GMSGFMT = /usr/bin/msgfmt
GREP = /bin/grep
GSTREAMER_CFLAGS = 
GSTREAMER_CONFIG = 
GSTREAMER_LIBS = 
GST_INSPECT = 
GTK2_CFLAGS = 
GTK2_LIBS = 
HILDON_CFLAGS = 
HILDON_LIBS = 
INCLTDL = -I${top_srcdir}/libltdl
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_INFO = 
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTLLIBS = 
INTL_MACOSX_LIBS = 
JAVA = 
JPEG_CFLAGS = -I/home/ash/ipad-dev/iphonedevonlinux/apps/gnash/pre/jpeglib/include
JPEG_CONFIG = 
JPEG_LIBS = -L/home/ash/ipad-dev/iphonedevonlinux/apps/gnash/pre/jpeglib/lib -ljpeg
KDE_APPSDATADIR = 
KDE_CFLAGS = 
KDE_CONFIG = 
KDE_CONFIGDIR = 
KDE_LIBS = 
KDE_PLUGINDIR = 
KDE_SERVICESDIR = 
KLASH_PLUGIN = 
LC_KEY = 0xcbc384f8
LD = /home/ash/ipad-dev/iphonedevonlinux/toolchain/pre/bin/arm-apple-darwin9-gcc
LDFLAGS = -bind_at_load -lSDLmain -lavdevice -lavformat -lswscale -lavutil -framework Foundation -framework UIKit -framework AudioToolbox -framework OpenGLES -framework QuartzCore -framework CoreFoundation -lcurl -lavcodec -L/home/ash/ipad-dev/iphonedevonlinux/toolchain/sys/lib -L/home/ash/ipad-dev/iphonedevonlinux/toolchain/sys/usr/lib -L/home/ash/ipad-dev/iphonedevonlinux/toolchain/sys/usr/lib/gcc/arm-apple-darwin10/4.2.1 -lstdc++ -lobjc -lpthread /home/ash/ipad-dev/iphonedevonlinux/apps/gnash/pre/SDL/lib/libSDL.a
LIBADD_DL =  
LIBADD_DLD_LINK = 
LIBADD_DLOPEN = 
LIBADD_SHL_LOAD = 
LIBEXT = a
LIBICONV = -liconv
LIBINTL = 
LIBLTDL = ${top_build_prefix}libltdl/libltdlc.la
LIBOBJS = 
LIBPRE = lib
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_DEPS = ./ltmain.sh
LIBXML_CFLAGS = -I/home/ash/ipad-dev/iphonedevonlinux/apps/gnash/pre/libxml2/include/libxml2
LIBXML_LIBS = -L/home/ash/ipad-dev/iphonedevonlinux/apps/gnash/pre/libxml2/lib -lxml2
LIPO = :
LN_S = ln -s
LTDLDEPS = ${top_build_prefix}libltdl/libltdlc.la
LTDLINCL = -I${top_srcdir}/libltdl
LTDLOPEN = libltdl
LTLIBICONV = -L/home/ash/ipad-dev/iphonedevonlinux/toolchain/sys/usr/lib -liconv -R/home/ash/ipad-dev/iphonedevonlinux/toolchain/sys/usr/lib
LTLIBINTL = 
LTLIBOBJS = 
LT_CONFIG_H = gnashconfig.h
LT_DLLOADERS =  libltdl/dlopen.la
LT_DLPREOPEN = -dlpreopen libltdl/dlopen.la 
MAINT = #
MAKEINFO = ${SHELL} /home/ash/ipad-dev/iphonedevonlinux/apps/gnash/missing --run makeinfo
MAKESWF = 
MEDIA_CONFIG = ffmpeg
MING_CFLAGS = 
MING_CONFIG = 
MING_LIBS = 
MING_VERSION = 
MING_VERSION_CODE = 
MKDIR_P = /bin/mkdir -p
MKINSTALLDIRS = $(top_srcdir)/mkinstalldirs
MOC = 
MSGFMT = /usr/bin/msgfmt
MSGMERGE = /usr/bin/msgmerge
MTASC = 
MTASC_CLASSPATH = 
MYSQL_CFLAGS = 
MYSQL_LIBS = 
NETCAT = /bin/netcat
NM = link -dump -symbols
NMEDIT = :
NSPR_CFLAGS = 
NSPR_CONFIG = 
NSPR_LIBS = 
OBJDUMP = objdump
OBJEXT = o
OPENGL_CFLAGS = 
OPENGL_LIBS = 
OTOOL = :
OTOOL64 = :
PACKAGE = gnash
PACKAGE_BUGREPORT = 
PACKAGE_NAME = gnash
PACKAGE_STRING = gnash cvs
PACKAGE_TARNAME = gnash
PACKAGE_URL = 
PACKAGE_VERSION = cvs
PANGO_CFLAGS = 
PANGO_LIBS = 
PATH_SEPARATOR = :
PDFXMLTEX = 
PKG_CONFIG = 
PNG_CFLAGS = -I/home/ash/ipad-dev/iphonedevonlinux/apps/gnash/pre/libpng/include
PNG_CONFIG = 
PNG_LIBS = -L/home/ash/ipad-dev/iphonedevonlinux/apps/gnash/pre/libpng/lib -lpng
POSUB = 
PTHREAD_CC = /home/ash/ipad-dev/iphonedevonlinux/toolchain/pre/bin/arm-apple-darwin9-gcc
PTHREAD_CFLAGS = -D_THREAD_SAFE 
PTHREAD_CXX = /home/ash/ipad-dev/iphonedevonlinux/toolchain/pre/bin/arm-apple-darwin9-g++
PTHREAD_LIBS = -L/home/ash/ipad-dev/iphonedevonlinux/toolchain/sys/usr/lib -lpthread
PYTHON = 
QTOPIA_CFLAGS = 
QTOPIA_LIBS = 
QT_CFLAGS =  $(am__append_12) $(am__append_21)
QT_LIBS = 
RANLIB = /home/ash/ipad-dev/iphonedevonlinux/toolchain/pre/bin/arm-apple-darwin9-ranlib
RENDERER_CONFIG = agg
RENDERER_LIBS =  $(top_builddir)/backend/libgnashagg.la
SCROLLINSTALL = 
SCROLLKEEPER = 
SCROLLUPDATE = 
SDL_CFLAGS = -I/home/ash/ipad-dev/iphonedevonlinux/apps/gnash/pre/SDL/include/SDL
SDL_CONFIG = 
SDL_LIBS = -L/home/ash/ipad-dev/iphonedevonlinux/apps/gnash/pre/SDL/lib -lSDL
SECURITY_LIST =  localconnection
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SOLDIR = /tmp
STATISTICS_LIST = 
STRIP = strip
SUPPORTED_GUIS = sdl
SWFC = 
SWFDEC_TESTSUITE = 
SWFMILL = 
USE_NLS = no
VERSION = cvs
WINDRES = 
X11_CFLAGS = 
X11_LIBS = 
XFT_CFLAGS = 
XFT_CONFIG = 
XFT_LIBS = 
XGETTEXT = /usr/bin/xgettext
XML2_CONFIG = 
XSLTPROC = 
Z_CFLAGS = -I/home/ash/ipad-dev/iphonedevonlinux/toolchain/sys/usr/include
Z_CONFIG = 
Z_LIBS = -L/home/ash/ipad-dev/iphonedevonlinux/toolchain/sys/usr/lib -lz
abs_builddir = /home/ash/ipad-dev/iphonedevonlinux/apps/gnash/gui
abs_srcdir = /home/ash/ipad-dev/iphonedevonlinux/apps/gnash/gui
abs_top_builddir = /home/ash/ipad-dev/iphonedevonlinux/apps/gnash
abs_top_srcdir = /home/ash/ipad-dev/iphonedevonlinux/apps/gnash
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_DUMPBIN = link -dump -symbols
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
curlconfig = 
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docbook_styles = 
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = arm-apple-darwin9
host_alias = arm-apple-darwin9
host_cpu = arm
host_os = darwin9
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/ash/ipad-dev/iphonedevonlinux/apps/gnash/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = $(datadir)/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
ltdl_LIBOBJS =  argz.o
ltdl_LTLIBOBJS =  argz.lo
mandir = ${datarootdir}/man
mconfig = 
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/ash/ipad-dev/iphonedevonlinux/apps/gnash/pre/gnash
program_transform_name = s,x,x,
psdir = ${docdir}
pth_config = 
pthread_config = 
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  libltdl
sys_symbol_underscore = no
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
AUTOMAKE_OPTIONS = -Wno-portability

# this is where Gnash plugins get installed
pluginsdir = $(libdir)/gnash/plugins

# noinst_LTLIBRARIES = libgnashgui.la
BUILT_SOURCES = .configline $(am__append_9) $(am__append_19)
EXTRA_DIST = gnash.in klash.moc.in $(am__append_10)
noinst_LTLIBRARIES = $(am__append_2)

# if USE_GUI_FLTK
#  FLTK_SRCS = fltk.cpp fltksup.h $(FLTK_AGG_SRCS) $(FLTK_CAIRO_SRCS)
#  AM_CPPFLAGS += $(FLTK2_CFLAGS) $(X11_CFLAGS)
#  AM_LDFLAGS += $(FLTK2_LIBS) $(XFT_LIBS) $(X11_LIBS)
# else
#  FLTK_SRCS = 
# endif
AM_CPPFLAGS = -I$(top_srcdir)/libamf -I$(top_srcdir)/libnet \
	-I$(top_srcdir)/server -I$(top_srcdir)/server/parser \
	-I$(top_srcdir)/server/vm -I$(top_srcdir)/libltdl \
	-I$(top_srcdir)/libbase -I$(top_srcdir)/backend \
	-I$(top_srcdir)/libgeometry -I$(top_srcdir)/libmedia \
	-I$(top_srcdir)/libmedia/ffmpeg -I$(top_srcdir)/libmedia/gst \
	-DLOCALEDIR=\"$(localedir)\" -DPLUGINSDIR=\"$(pluginsdir)\" \
	$(LIBXML_CFLAGS) $(DMALLOC_CFLAGS) $(LIRC_CFLAGS) \
	$(BOOST_CFLAGS) $(PTHREAD_CFLAGS) $(NULL) $(am__append_4) \
	$(am__append_6) $(am__append_7) -DPKGDATADIR=\"$(pkgdatadir)\" \
	-DRENDERER_CONFIG=\"$(RENDERER_CONFIG)\" \
	-DMEDIA_CONFIG=\"$(MEDIA_CONFIG)\" \
	-DTARGET_CONFIG=\"$(target)\" -DCONFIG_CONFIG="\"$(shell cat \
	.configline)\"" -DCXXFLAGS="\"$(CXXFLAGS)\""
GTK_CFLAGS = $(GTK2_CFLAGS) $(GLEXT_CFLAGS) $(GLIB_CFLAGS) \
	$(PANGO_CFLAGS) $(ATK_CFLAGS) $(CAIRO_CFLAGS) $(am__append_48)
GTK_LIBS = \
	$(GTK2_LIBS) \
	$(GLEXT_LIBS) \
	$(CAIRO_LIBS) \
	$(PANGO_LIBS) \
	$(ATK_LIBS) \
	$(GLIB_LIBS) \
	$(EXPAT_LIBS)

DUMP_CFLAGS = 
DUMP_LIBS = 

# The following will be filled up later
GUI_CPPFLAGS = $(am__append_1)
AM_LDFLAGS = $(GLIB_LIBS) $(LIBLTDL) $(CURL_LIBS) $(LIBXML_LIBS) \
	$(INCLTDL) $(LIRC_LIBS) $(MYSQL_LIBS) $(BOOST_LIBS) \
	$(PTHREAD_LIBS) $(NULL) $(am__append_3) $(am__append_5) \
	$(am__append_8)
GNASH_LIBS = \
	$(top_builddir)/libamf/libgnashamf.la \
	$(top_builddir)/libnet/libgnashnet.la \
	$(top_builddir)/libmedia/libgnashmedia.la \
	$(top_builddir)/server/libgnashserver.la \
	$(top_builddir)/libbase/libgnashbase.la


# Only build loadable modules unless statically linking
# if DYNAMIC_GUI # make shared libraries suitable for dlopen().
# if  ENABLE_SHARED
#      LIB_FLAGS = -module -avoid-version -no-undefined
# else
#      LIB_FLAGS = -release $(VERSION)
# endif # ENABLE_SHARED
# else # make shared libraries suitable for linking.
LIB_FLAGS = -release $(VERSION)
#bundle_name = Gnash.app
##libgnashaqua_ogl_la_CPPFLAGS = $(AM_CPPFLAGS) \
##	$(OPENGL_CFLAGS)

##libgnashaqua_ogl_la_SOURCES = \
##	aqua_ogl_glue.cpp aqua_ogl_glue.h \
##	aqua.cpp aquasup.h aqua_glue.h

##libgnashaqua_ogl_la_LDFLAGS = $(LIB_FLAGS)
##libgnashaqua_ogl_la_LIBADD = \
##	$(top_builddir)/backend/libgnashogl.la 

dist_images_DATA = images/gnash_128_96.ico images/GnashG.png
#dist_images_DATA = images/gnash_G_v3.ico
imagesdir = $(pkgdatadir)
bin_SCRIPTS = gnash
GUI_SRCS = gnash.cpp \
	gui.cpp gui.h \
	Player.cpp Player.h \
	NullGui.cpp NullGui.h

#qtopia_gnash_CPPFLAGS = -DGUI_QTOPIA \
#	-DGUI_CONFIG=\"QTOPIA\" $(AM_CPPFLAGS) \
#	$(KDE_CFLAGS) $(QT_CFLAGS) \
#	$(am__append_13) $(am__append_16)
#qtopia_gnash_SOURCES = $(GUI_SRCS) gui_kde.cpp \
#	$(am__append_15) $(am__append_18)
#qtopia_gnash_LDFLAGS = $(LIBLTDL) -export-dynamic 
#qtopia_gnash_DEPENDENCIES = .configline
#qtopia_gnash_LDADD = $(MYSQL_LIBS) \
#	$(GNASH_LIBS) $(AM_LDFLAGS) \
#	$(am__append_14) $(am__append_17)
#kde_gnash_CPPFLAGS = -DGUI_KDE \
#	-DGUI_CONFIG=\"KDE\" $(AM_CPPFLAGS) \
#	$(KDE_CFLAGS) $(QT_CFLAGS) \
#	$(am__append_22) $(am__append_25)
#kde_gnash_SOURCES = $(GUI_SRCS) gui_kde.cpp \
#	$(am__append_24) $(am__append_27)
#kde_gnash_LDFLAGS = $(LIBLTDL) -export-dynamic 
#kde_gnash_DEPENDENCIES = .configline
#kde_gnash_LDADD = $(MYSQL_LIBS) $(GNASH_LIBS) \
#	$(AM_LDFLAGS) $(am__append_23) \
#	$(am__append_26)
sdl_gnash_CPPFLAGS = -DGUI_SDL \
	-DGUI_CONFIG=\"SDL\" $(AM_CPPFLAGS) \
	$(SDL_CFLAGS) $(am__append_29) \
	$(am__append_32) $(am__append_35)
sdl_gnash_SOURCES = $(GUI_SRCS) gui_sdl.cpp \
	sdl.cpp sdlsup.h sdl_glue.h \
	$(am__append_31) $(am__append_34) \
	$(am__append_37)
sdl_gnash_LDFLAGS = $(LIBLTDL) -export-dynamic 
#sdl_gnash_DEPENDENCIES = .configline
sdl_gnash_LDADD = $(MYSQL_LIBS) $(GNASH_LIBS) \
	$(AM_LDFLAGS) $(SDL_LIBS) $(am__append_30) \
	$(am__append_33) $(am__append_36)
#fltk_gnash_CPPFLAGS = -DGUI_FLTK \
#	-DGUI_CONFIG=\"FLTK\" $(AM_CPPFLAGS) \
#	$(FLTK2_CFLAGS) $(am__append_39)
#fltk_gnash_SOURCES = $(GUI_SRCS) gui_fltk.cpp \
#	$(am__append_41)
#fltk_gnash_LDFLAGS = $(LIBLTDL) -export-dynamic 
#fltk_gnash_DEPENDENCIES = .configline
#fltk_gnash_LDADD = $(MYSQL_LIBS) $(GNASH_LIBS) \
#	$(AM_LDFLAGS) $(am__append_40) \
#	$(am__append_42)
#aqua_gnash_CPPFLAGS = -DGUI_AQUA $(AM_CPPFLAGS) \
#	-DGUI_CONFIG=\"AQUA\" $(am__append_44)
#aqua_gnash_SOURCES = $(GUI_SRCS) gui_aqua.cpp \
#	$(am__append_46)
#aqua_gnash_LDFLAGS = $(LIBLTDL) -export-dynamic 
#aqua_gnash_DEPENDENCIES = .configline
#aqua_gnash_LDADD = $(MYSQL_LIBS) $(GNASH_LIBS) \
#	$(AM_LDFLAGS) $(am__append_45)
#gtk_gnash_SOURCES = $(GUI_SRCS) gui_gtk.cpp \
#	$(am__append_50) $(am__append_52) \
#	$(am__append_54)
#gtk_gnash_CPPFLAGS = -DGUI_GTK \
#	-DGUI_CONFIG=\"GTK\" $(AM_CPPFLAGS) \
#	$(GTK_CFLAGS) $(X11_CFLAGS) \
#	$(am__append_49) $(am__append_51) \
#	$(am__append_53)
#gtk_gnash_LDFLAGS = $(LIBLTDL) -export-dynamic $(AM_LDFLAGS)
#gtk_gnash_LDADD = $(top_builddir)/backend/libgnashagg.la \
#		$(GNASH_LIBS) $(GTK_LIBS) $(AGG_LIBS) $(CAIRO_LIBS)

##gtk_gnash_LDADD = $(top_builddir)/backend/libgnashcairo.la \
##		$(GNASH_LIBS) $(GTK_LIBS) $(CAIRO_LIBS)

##gtk_gnash_LDADD = $(top_builddir)/backend/libgnashogl.la \
##		$(GNASH_LIBS) $(GTK_LIBS) $(OPENGL_LIBS)

#pkglib_LTLIBRARIES = libgnashalp.la
#libgnashalp_la_SOURCES = $(GUI_SRCS) gui_gtk.cpp \
#	$(am__append_56) $(am__append_59) \
#	$(am__append_62)
#libgnashalp_la_CPPFLAGS = $(gtk_gnash_CPPFLAGS) \
#	$(ALP_CFLAGS) -DGUI_ALP \
#	-DGUI_CONFIG=\"ALP\" \
#	-DALP_BUILD=ALP_BUILD_DEBUG \
#	$(am__append_55) $(am__append_58) \
#	$(am__append_61)
#libgnashalp_la_LDFLAGS = -module -avoid-version
#libgnashalp_la_LIBADD = $(gtk_gnash_LDADD) \
#	$(ALP_LIBS) $(am__append_57) \
#	$(am__append_60) $(am__append_63)

# networking related info
# NETCAT_REMOTE   = netcat -q 10 `cat /tmp/alp.ip` 5038
# NETCAT_REMOTE_Q = netcat -q 8 `cat /tmp/alp.ip` 5038
# UML_IP          = 192.168.3.101
# REMOTE_IP	= 192.168.1.101
# ALP_NAMESPACE   = org.gnu.gnash
# ALP_BUNDLE_DIR  = /opt/alp/bundles/

# ALP_SECURITY  - For building signed bundles you need to set this
# 	variable to 1. The default is set to 0 
#ALP_SECURITY = 0 

# CERTIFICATE and KEY - Specify the certificate and key files for signing. 
# The default is to look for files 'certificate' and 'key' in
# the local dir then search up through the parent dirs
#CERTIFICATE = certificate
#KEY = key
#PASS = accesstest

# where does built stuff go?
#BUILD_DIR := build/$(SBOX)
# Bundle names
# where to construct bundle hierarchy (e.g. obj/sbox/com.foo.apps.name)
#SRC_BND_DIR := $(BUILD_DIR)/$(BND_NAME)
# Extract the bundle name directly from the Manifest file.
#BND_NAMES := gnash
#BND_NAME := $(word 1, $(BND_NAMES))
#TARGET_NAME := $(word 2, $(BND_NAMES))

# install location for bundle hierarchy (for install/install-files targets)
# Check to see if there is a "bundles" directory. If there is,
# use it. Otherwise, revert to using the "packages" directory.
#DEST_BND_ROOT := /opt/alp/bundles
#DEST_BND_DIR := $(DEST_BND_ROOT)/$(BND_NAME)

# Bar files
# (if BAR_DIR not defined, assume bar files go in build/sbox)
# (BAR_DIR may need to be created so we can't rely solely on BAR_TARGET)
# (may be defined by build-all Makefile to collect .bar files in one place)
#BAR_NAME = $(BND_NAME).bar
#BAR_TARGET = $(BUILD_DIR)/$(BAR_NAME)
#BAR_DIR = $(BAR_DIR)/$(SBOX)
#hildon_gnash_SOURCES = $(GUI_SRCS) gui_gtk.cpp \
#	$(am__append_66) $(am__append_68) \
#	$(am__append_70)
#hildon_gnash_CPPFLAGS = -DGUI_GTK -DGUI_HILDON \
#	-DGUI_CONFIG=\"HILDON\" $(AM_CPPFLAGS) \
#	$(GTK_CFLAGS) $(HILDON_CFLAGS) \
#	$(am__append_65) $(am__append_67) \
#	$(am__append_69)
#hildon_gnash_LDFLAGS = $(LIBLTDL) -export-dynamic $(AM_LDFLAGS)
#hildon_gnash_LDADD = $(top_builddir)/backend/libgnashagg.la \
#		$(GNASH_LIBS) $(GTK_LIBS) $(AGG_LIBS) $(HILDON_LIBS)

##hildon_gnash_LDADD = $(top_builddir)/backend/libgnashcairo.la \
##		$(GNASH_LIBS) $(GTK_LIBS) $(CAIRO_LIBS) $(HILDON_LIBS)

##hildon_gnash_LDADD = $(top_builddir)/backend/libgnashogl.la \
##		$(GNASH_LIBS) $(GTK_LIBS) $(OPENGL_LIBS) $(HILDON_LIBS)

#dump_gnash_SOURCES = $(GUI_SRCS) gui_dump.cpp dump.cpp dump.h
#dump_gnash_CPPFLAGS = -DGUI_DUMP -DGUI_CONFIG=\"DUMP\" \
#	$(AM_CPPFLAGS) $(DUMP_CFLAGS) $(AGG_CFLAGS)

#dump_gnash_LDFLAGS = $(LIBLTDL) -export-dynamic $(AM_LDFLAGS) \
#	$(top_builddir)/backend/libgnashagg.la \
#	$(GNASH_LIBS) $(DUMP_LIBS) $(AGG_LIBS) $(CAIRO_LIBS)

#fb_gnash_SOURCES = $(GUI_SRCS) gui_fb.cpp fb.cpp \
#	fbsup.h $(am__append_74)
#fb_gnash_CPPFLAGS = -DGUI_FB -DGUI_CONFIG=\"FB\" \
#	$(AM_CPPFLAGS) $(am__append_73)
#fb_gnash_LDFLAGS = $(LIBLTDL) -export-dynamic $(AM_LDFLAGS)
#fb_gnash_LDADD = $(top_builddir)/backend/libgnashagg.la \
#		$(GNASH_LIBS) $(AGG_LIBS)

#riscos_gnash_SOURCES = $(GUI_SRCS) \
#	gui_riscos.cpp riscos.cpp riscos_glue.h \
#	riscossup.h $(am__append_77)
#riscos_gnash_CPPFLAGS = -DGUI_FB \
#	-DGUI_CONFIG=\"FB\" $(AM_CPPFLAGS) \
#	$(am__append_76)
#riscos_gnash_LDFLAGS = $(LIBLTDL) -export-dynamic $(AM_LDFLAGS)
#riscos_gnash_LDADD = $(top_builddir)/backend/libgnashagg.la \
#		$(GNASH_LIBS) $(AGG_LIBS)


# Build the SDL gui

# Build the FLTK gui

# Build the AQUA gui

# Build the GTK gui

# if ALP				# Access Linux Platform
# gtk_gnash_LDFLAGS += "-shared -Xlinker -z -Xlinker defs $(GTK2_LIBS)"
# gtk_gnash_LDADD += $(ALP_LIBS)
# endif
#
# Build the GTK/ALP gui

# Build the GTK/HILDON gui

# Build the DUMP gui

# Build the FB gui

# Build the RISCOS gui
CLEANFILES = klash.moc .configline gnash
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(srcdir)/am-frag/qtopia.am $(srcdir)/am-frag/kde.am $(srcdir)/am-frag/sdl.am $(srcdir)/am-frag/fltk.am $(srcdir)/am-frag/aqua.am $(srcdir)/am-frag/gtk.am $(srcdir)/am-frag/alp.am $(srcdir)/am-frag/hildon.am $(srcdir)/am-frag/dump.am $(srcdir)/am-frag/fb.am $(srcdir)/am-frag/riscos.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu gui/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu gui/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
Info.plist: $(top_builddir)/config.status $(srcdir)/Info.plist.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
install-pkglibLTLIBRARIES: $(pkglib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(pkglibdir)" || $(MKDIR_P) "$(DESTDIR)$(pkglibdir)"
	@list='$(pkglib_LTLIBRARIES)'; test -n "$(pkglibdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(pkglibdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(pkglibdir)"; \
	}

uninstall-pkglibLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(pkglib_LTLIBRARIES)'; test -n "$(pkglibdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(pkglibdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(pkglibdir)/$$f"; \
	done

clean-pkglibLTLIBRARIES:
	-test -z "$(pkglib_LTLIBRARIES)" || rm -f $(pkglib_LTLIBRARIES)
	@list='$(pkglib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libgnashalp.la: $(libgnashalp_la_OBJECTS) $(libgnashalp_la_DEPENDENCIES) 
	$(libgnashalp_la_LINK) $(am_libgnashalp_la_rpath) $(libgnashalp_la_OBJECTS) $(libgnashalp_la_LIBADD) $(LIBS)
libgnashaqua_ogl.la: $(libgnashaqua_ogl_la_OBJECTS) $(libgnashaqua_ogl_la_DEPENDENCIES) 
	$(libgnashaqua_ogl_la_LINK) $(am_libgnashaqua_ogl_la_rpath) $(libgnashaqua_ogl_la_OBJECTS) $(libgnashaqua_ogl_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
aqua-gnash$(EXEEXT): $(aqua_gnash_OBJECTS) $(aqua_gnash_DEPENDENCIES) 
	@rm -f aqua-gnash$(EXEEXT)
	$(aqua_gnash_LINK) $(aqua_gnash_OBJECTS) $(aqua_gnash_LDADD) $(LIBS)
dump-gnash$(EXEEXT): $(dump_gnash_OBJECTS) $(dump_gnash_DEPENDENCIES) 
	@rm -f dump-gnash$(EXEEXT)
	$(dump_gnash_LINK) $(dump_gnash_OBJECTS) $(dump_gnash_LDADD) $(LIBS)
fb-gnash$(EXEEXT): $(fb_gnash_OBJECTS) $(fb_gnash_DEPENDENCIES) 
	@rm -f fb-gnash$(EXEEXT)
	$(fb_gnash_LINK) $(fb_gnash_OBJECTS) $(fb_gnash_LDADD) $(LIBS)
fltk-gnash$(EXEEXT): $(fltk_gnash_OBJECTS) $(fltk_gnash_DEPENDENCIES) 
	@rm -f fltk-gnash$(EXEEXT)
	$(fltk_gnash_LINK) $(fltk_gnash_OBJECTS) $(fltk_gnash_LDADD) $(LIBS)
gtk-gnash$(EXEEXT): $(gtk_gnash_OBJECTS) $(gtk_gnash_DEPENDENCIES) 
	@rm -f gtk-gnash$(EXEEXT)
	$(gtk_gnash_LINK) $(gtk_gnash_OBJECTS) $(gtk_gnash_LDADD) $(LIBS)
hildon-gnash$(EXEEXT): $(hildon_gnash_OBJECTS) $(hildon_gnash_DEPENDENCIES) 
	@rm -f hildon-gnash$(EXEEXT)
	$(hildon_gnash_LINK) $(hildon_gnash_OBJECTS) $(hildon_gnash_LDADD) $(LIBS)
kde-gnash$(EXEEXT): $(kde_gnash_OBJECTS) $(kde_gnash_DEPENDENCIES) 
	@rm -f kde-gnash$(EXEEXT)
	$(kde_gnash_LINK) $(kde_gnash_OBJECTS) $(kde_gnash_LDADD) $(LIBS)
qtopia-gnash$(EXEEXT): $(qtopia_gnash_OBJECTS) $(qtopia_gnash_DEPENDENCIES) 
	@rm -f qtopia-gnash$(EXEEXT)
	$(qtopia_gnash_LINK) $(qtopia_gnash_OBJECTS) $(qtopia_gnash_LDADD) $(LIBS)
riscos-gnash$(EXEEXT): $(riscos_gnash_OBJECTS) $(riscos_gnash_DEPENDENCIES) 
	@rm -f riscos-gnash$(EXEEXT)
	$(riscos_gnash_LINK) $(riscos_gnash_OBJECTS) $(riscos_gnash_LDADD) $(LIBS)
sdl-gnash$(EXEEXT): $(sdl_gnash_OBJECTS) $(sdl_gnash_DEPENDENCIES) 
	@rm -f sdl-gnash$(EXEEXT)
	$(sdl_gnash_LINK) $(sdl_gnash_OBJECTS) $(sdl_gnash_LDADD) $(LIBS)
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/aqua_gnash-NullGui.Po
include ./$(DEPDIR)/aqua_gnash-Player.Po
include ./$(DEPDIR)/aqua_gnash-aqua.Po
include ./$(DEPDIR)/aqua_gnash-aqua_ogl_glue.Po
include ./$(DEPDIR)/aqua_gnash-gnash.Po
include ./$(DEPDIR)/aqua_gnash-gui.Po
include ./$(DEPDIR)/aqua_gnash-gui_aqua.Po
include ./$(DEPDIR)/dump_gnash-NullGui.Po
include ./$(DEPDIR)/dump_gnash-Player.Po
include ./$(DEPDIR)/dump_gnash-dump.Po
include ./$(DEPDIR)/dump_gnash-gnash.Po
include ./$(DEPDIR)/dump_gnash-gui.Po
include ./$(DEPDIR)/dump_gnash-gui_dump.Po
include ./$(DEPDIR)/fb_gnash-NullGui.Po
include ./$(DEPDIR)/fb_gnash-Player.Po
include ./$(DEPDIR)/fb_gnash-fb.Po
include ./$(DEPDIR)/fb_gnash-gnash.Po
include ./$(DEPDIR)/fb_gnash-gui.Po
include ./$(DEPDIR)/fb_gnash-gui_fb.Po
include ./$(DEPDIR)/fltk_gnash-NullGui.Po
include ./$(DEPDIR)/fltk_gnash-Player.Po
include ./$(DEPDIR)/fltk_gnash-fltk.Po
include ./$(DEPDIR)/fltk_gnash-fltk_glue_agg.Po
include ./$(DEPDIR)/fltk_gnash-gnash.Po
include ./$(DEPDIR)/fltk_gnash-gui.Po
include ./$(DEPDIR)/fltk_gnash-gui_fltk.Po
include ./$(DEPDIR)/gtk_gnash-NullGui.Po
include ./$(DEPDIR)/gtk_gnash-Player.Po
include ./$(DEPDIR)/gtk_gnash-gnash.Po
include ./$(DEPDIR)/gtk_gnash-gtk.Po
include ./$(DEPDIR)/gtk_gnash-gtk_glue_agg.Po
include ./$(DEPDIR)/gtk_gnash-gtk_glue_cairo.Po
include ./$(DEPDIR)/gtk_gnash-gtk_glue_gtkglext.Po
include ./$(DEPDIR)/gtk_gnash-gui.Po
include ./$(DEPDIR)/gtk_gnash-gui_gtk.Po
include ./$(DEPDIR)/hildon_gnash-NullGui.Po
include ./$(DEPDIR)/hildon_gnash-Player.Po
include ./$(DEPDIR)/hildon_gnash-gnash.Po
include ./$(DEPDIR)/hildon_gnash-gtk.Po
include ./$(DEPDIR)/hildon_gnash-gtk_glue_agg.Po
include ./$(DEPDIR)/hildon_gnash-gtk_glue_cairo.Po
include ./$(DEPDIR)/hildon_gnash-gtk_glue_gtkglext.Po
include ./$(DEPDIR)/hildon_gnash-gui.Po
include ./$(DEPDIR)/hildon_gnash-gui_gtk.Po
include ./$(DEPDIR)/kde_gnash-NullGui.Po
include ./$(DEPDIR)/kde_gnash-Player.Po
include ./$(DEPDIR)/kde_gnash-gnash.Po
include ./$(DEPDIR)/kde_gnash-gui.Po
include ./$(DEPDIR)/kde_gnash-gui_kde.Po
include ./$(DEPDIR)/kde_gnash-kde.Po
include ./$(DEPDIR)/kde_gnash-kde_glue_agg.Po
include ./$(DEPDIR)/kde_gnash-kde_glue_opengl.Po
include ./$(DEPDIR)/libgnashalp_la-NullGui.Plo
include ./$(DEPDIR)/libgnashalp_la-Player.Plo
include ./$(DEPDIR)/libgnashalp_la-gnash.Plo
include ./$(DEPDIR)/libgnashalp_la-gtk.Plo
include ./$(DEPDIR)/libgnashalp_la-gtk_glue_agg.Plo
include ./$(DEPDIR)/libgnashalp_la-gtk_glue_cairo.Plo
include ./$(DEPDIR)/libgnashalp_la-gtk_glue_gtkglext.Plo
include ./$(DEPDIR)/libgnashalp_la-gui.Plo
include ./$(DEPDIR)/libgnashalp_la-gui_gtk.Plo
include ./$(DEPDIR)/libgnashaqua_ogl_la-aqua.Plo
include ./$(DEPDIR)/libgnashaqua_ogl_la-aqua_ogl_glue.Plo
include ./$(DEPDIR)/qtopia_gnash-NullGui.Po
include ./$(DEPDIR)/qtopia_gnash-Player.Po
include ./$(DEPDIR)/qtopia_gnash-gnash.Po
include ./$(DEPDIR)/qtopia_gnash-gui.Po
include ./$(DEPDIR)/qtopia_gnash-gui_kde.Po
include ./$(DEPDIR)/qtopia_gnash-kde.Po
include ./$(DEPDIR)/qtopia_gnash-kde_glue_agg.Po
include ./$(DEPDIR)/qtopia_gnash-kde_glue_opengl.Po
include ./$(DEPDIR)/riscos_gnash-NullGui.Po
include ./$(DEPDIR)/riscos_gnash-Player.Po
include ./$(DEPDIR)/riscos_gnash-gnash.Po
include ./$(DEPDIR)/riscos_gnash-gui.Po
include ./$(DEPDIR)/riscos_gnash-gui_riscos.Po
include ./$(DEPDIR)/riscos_gnash-riscos.Po
include ./$(DEPDIR)/riscos_gnash-riscos_glue_agg.Po
include ./$(DEPDIR)/sdl_gnash-NullGui.Po
include ./$(DEPDIR)/sdl_gnash-Player.Po
include ./$(DEPDIR)/sdl_gnash-gnash.Po
include ./$(DEPDIR)/sdl_gnash-gui.Po
include ./$(DEPDIR)/sdl_gnash-gui_sdl.Po
include ./$(DEPDIR)/sdl_gnash-sdl.Po
include ./$(DEPDIR)/sdl_gnash-sdl_agg_glue.Po
include ./$(DEPDIR)/sdl_gnash-sdl_cairo_glue.Po
include ./$(DEPDIR)/sdl_gnash-sdl_ogl_glue.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

libgnashalp_la-gnash.lo: gnash.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashalp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libgnashalp_la-gnash.lo -MD -MP -MF $(DEPDIR)/libgnashalp_la-gnash.Tpo -c -o libgnashalp_la-gnash.lo `test -f 'gnash.cpp' || echo '$(srcdir)/'`gnash.cpp
	$(am__mv) $(DEPDIR)/libgnashalp_la-gnash.Tpo $(DEPDIR)/libgnashalp_la-gnash.Plo
#	source='gnash.cpp' object='libgnashalp_la-gnash.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashalp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libgnashalp_la-gnash.lo `test -f 'gnash.cpp' || echo '$(srcdir)/'`gnash.cpp

libgnashalp_la-gui.lo: gui.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashalp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libgnashalp_la-gui.lo -MD -MP -MF $(DEPDIR)/libgnashalp_la-gui.Tpo -c -o libgnashalp_la-gui.lo `test -f 'gui.cpp' || echo '$(srcdir)/'`gui.cpp
	$(am__mv) $(DEPDIR)/libgnashalp_la-gui.Tpo $(DEPDIR)/libgnashalp_la-gui.Plo
#	source='gui.cpp' object='libgnashalp_la-gui.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashalp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libgnashalp_la-gui.lo `test -f 'gui.cpp' || echo '$(srcdir)/'`gui.cpp

libgnashalp_la-Player.lo: Player.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashalp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libgnashalp_la-Player.lo -MD -MP -MF $(DEPDIR)/libgnashalp_la-Player.Tpo -c -o libgnashalp_la-Player.lo `test -f 'Player.cpp' || echo '$(srcdir)/'`Player.cpp
	$(am__mv) $(DEPDIR)/libgnashalp_la-Player.Tpo $(DEPDIR)/libgnashalp_la-Player.Plo
#	source='Player.cpp' object='libgnashalp_la-Player.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashalp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libgnashalp_la-Player.lo `test -f 'Player.cpp' || echo '$(srcdir)/'`Player.cpp

libgnashalp_la-NullGui.lo: NullGui.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashalp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libgnashalp_la-NullGui.lo -MD -MP -MF $(DEPDIR)/libgnashalp_la-NullGui.Tpo -c -o libgnashalp_la-NullGui.lo `test -f 'NullGui.cpp' || echo '$(srcdir)/'`NullGui.cpp
	$(am__mv) $(DEPDIR)/libgnashalp_la-NullGui.Tpo $(DEPDIR)/libgnashalp_la-NullGui.Plo
#	source='NullGui.cpp' object='libgnashalp_la-NullGui.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashalp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libgnashalp_la-NullGui.lo `test -f 'NullGui.cpp' || echo '$(srcdir)/'`NullGui.cpp

libgnashalp_la-gui_gtk.lo: gui_gtk.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashalp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libgnashalp_la-gui_gtk.lo -MD -MP -MF $(DEPDIR)/libgnashalp_la-gui_gtk.Tpo -c -o libgnashalp_la-gui_gtk.lo `test -f 'gui_gtk.cpp' || echo '$(srcdir)/'`gui_gtk.cpp
	$(am__mv) $(DEPDIR)/libgnashalp_la-gui_gtk.Tpo $(DEPDIR)/libgnashalp_la-gui_gtk.Plo
#	source='gui_gtk.cpp' object='libgnashalp_la-gui_gtk.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashalp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libgnashalp_la-gui_gtk.lo `test -f 'gui_gtk.cpp' || echo '$(srcdir)/'`gui_gtk.cpp

libgnashalp_la-gtk_glue_gtkglext.lo: gtk_glue_gtkglext.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashalp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libgnashalp_la-gtk_glue_gtkglext.lo -MD -MP -MF $(DEPDIR)/libgnashalp_la-gtk_glue_gtkglext.Tpo -c -o libgnashalp_la-gtk_glue_gtkglext.lo `test -f 'gtk_glue_gtkglext.cpp' || echo '$(srcdir)/'`gtk_glue_gtkglext.cpp
	$(am__mv) $(DEPDIR)/libgnashalp_la-gtk_glue_gtkglext.Tpo $(DEPDIR)/libgnashalp_la-gtk_glue_gtkglext.Plo
#	source='gtk_glue_gtkglext.cpp' object='libgnashalp_la-gtk_glue_gtkglext.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashalp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libgnashalp_la-gtk_glue_gtkglext.lo `test -f 'gtk_glue_gtkglext.cpp' || echo '$(srcdir)/'`gtk_glue_gtkglext.cpp

libgnashalp_la-gtk.lo: gtk.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashalp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libgnashalp_la-gtk.lo -MD -MP -MF $(DEPDIR)/libgnashalp_la-gtk.Tpo -c -o libgnashalp_la-gtk.lo `test -f 'gtk.cpp' || echo '$(srcdir)/'`gtk.cpp
	$(am__mv) $(DEPDIR)/libgnashalp_la-gtk.Tpo $(DEPDIR)/libgnashalp_la-gtk.Plo
#	source='gtk.cpp' object='libgnashalp_la-gtk.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashalp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libgnashalp_la-gtk.lo `test -f 'gtk.cpp' || echo '$(srcdir)/'`gtk.cpp

libgnashalp_la-gtk_glue_agg.lo: gtk_glue_agg.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashalp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libgnashalp_la-gtk_glue_agg.lo -MD -MP -MF $(DEPDIR)/libgnashalp_la-gtk_glue_agg.Tpo -c -o libgnashalp_la-gtk_glue_agg.lo `test -f 'gtk_glue_agg.cpp' || echo '$(srcdir)/'`gtk_glue_agg.cpp
	$(am__mv) $(DEPDIR)/libgnashalp_la-gtk_glue_agg.Tpo $(DEPDIR)/libgnashalp_la-gtk_glue_agg.Plo
#	source='gtk_glue_agg.cpp' object='libgnashalp_la-gtk_glue_agg.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashalp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libgnashalp_la-gtk_glue_agg.lo `test -f 'gtk_glue_agg.cpp' || echo '$(srcdir)/'`gtk_glue_agg.cpp

libgnashalp_la-gtk_glue_cairo.lo: gtk_glue_cairo.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashalp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libgnashalp_la-gtk_glue_cairo.lo -MD -MP -MF $(DEPDIR)/libgnashalp_la-gtk_glue_cairo.Tpo -c -o libgnashalp_la-gtk_glue_cairo.lo `test -f 'gtk_glue_cairo.cpp' || echo '$(srcdir)/'`gtk_glue_cairo.cpp
	$(am__mv) $(DEPDIR)/libgnashalp_la-gtk_glue_cairo.Tpo $(DEPDIR)/libgnashalp_la-gtk_glue_cairo.Plo
#	source='gtk_glue_cairo.cpp' object='libgnashalp_la-gtk_glue_cairo.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashalp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libgnashalp_la-gtk_glue_cairo.lo `test -f 'gtk_glue_cairo.cpp' || echo '$(srcdir)/'`gtk_glue_cairo.cpp

libgnashaqua_ogl_la-aqua_ogl_glue.lo: aqua_ogl_glue.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashaqua_ogl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libgnashaqua_ogl_la-aqua_ogl_glue.lo -MD -MP -MF $(DEPDIR)/libgnashaqua_ogl_la-aqua_ogl_glue.Tpo -c -o libgnashaqua_ogl_la-aqua_ogl_glue.lo `test -f 'aqua_ogl_glue.cpp' || echo '$(srcdir)/'`aqua_ogl_glue.cpp
	$(am__mv) $(DEPDIR)/libgnashaqua_ogl_la-aqua_ogl_glue.Tpo $(DEPDIR)/libgnashaqua_ogl_la-aqua_ogl_glue.Plo
#	source='aqua_ogl_glue.cpp' object='libgnashaqua_ogl_la-aqua_ogl_glue.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashaqua_ogl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libgnashaqua_ogl_la-aqua_ogl_glue.lo `test -f 'aqua_ogl_glue.cpp' || echo '$(srcdir)/'`aqua_ogl_glue.cpp

libgnashaqua_ogl_la-aqua.lo: aqua.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashaqua_ogl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libgnashaqua_ogl_la-aqua.lo -MD -MP -MF $(DEPDIR)/libgnashaqua_ogl_la-aqua.Tpo -c -o libgnashaqua_ogl_la-aqua.lo `test -f 'aqua.cpp' || echo '$(srcdir)/'`aqua.cpp
	$(am__mv) $(DEPDIR)/libgnashaqua_ogl_la-aqua.Tpo $(DEPDIR)/libgnashaqua_ogl_la-aqua.Plo
#	source='aqua.cpp' object='libgnashaqua_ogl_la-aqua.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgnashaqua_ogl_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libgnashaqua_ogl_la-aqua.lo `test -f 'aqua.cpp' || echo '$(srcdir)/'`aqua.cpp

aqua_gnash-gnash.o: gnash.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aqua_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT aqua_gnash-gnash.o -MD -MP -MF $(DEPDIR)/aqua_gnash-gnash.Tpo -c -o aqua_gnash-gnash.o `test -f 'gnash.cpp' || echo '$(srcdir)/'`gnash.cpp
	$(am__mv) $(DEPDIR)/aqua_gnash-gnash.Tpo $(DEPDIR)/aqua_gnash-gnash.Po
#	source='gnash.cpp' object='aqua_gnash-gnash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aqua_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o aqua_gnash-gnash.o `test -f 'gnash.cpp' || echo '$(srcdir)/'`gnash.cpp

aqua_gnash-gnash.obj: gnash.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aqua_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT aqua_gnash-gnash.obj -MD -MP -MF $(DEPDIR)/aqua_gnash-gnash.Tpo -c -o aqua_gnash-gnash.obj `if test -f 'gnash.cpp'; then $(CYGPATH_W) 'gnash.cpp'; else $(CYGPATH_W) '$(srcdir)/gnash.cpp'; fi`
	$(am__mv) $(DEPDIR)/aqua_gnash-gnash.Tpo $(DEPDIR)/aqua_gnash-gnash.Po
#	source='gnash.cpp' object='aqua_gnash-gnash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aqua_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o aqua_gnash-gnash.obj `if test -f 'gnash.cpp'; then $(CYGPATH_W) 'gnash.cpp'; else $(CYGPATH_W) '$(srcdir)/gnash.cpp'; fi`

aqua_gnash-gui.o: gui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aqua_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT aqua_gnash-gui.o -MD -MP -MF $(DEPDIR)/aqua_gnash-gui.Tpo -c -o aqua_gnash-gui.o `test -f 'gui.cpp' || echo '$(srcdir)/'`gui.cpp
	$(am__mv) $(DEPDIR)/aqua_gnash-gui.Tpo $(DEPDIR)/aqua_gnash-gui.Po
#	source='gui.cpp' object='aqua_gnash-gui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aqua_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o aqua_gnash-gui.o `test -f 'gui.cpp' || echo '$(srcdir)/'`gui.cpp

aqua_gnash-gui.obj: gui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aqua_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT aqua_gnash-gui.obj -MD -MP -MF $(DEPDIR)/aqua_gnash-gui.Tpo -c -o aqua_gnash-gui.obj `if test -f 'gui.cpp'; then $(CYGPATH_W) 'gui.cpp'; else $(CYGPATH_W) '$(srcdir)/gui.cpp'; fi`
	$(am__mv) $(DEPDIR)/aqua_gnash-gui.Tpo $(DEPDIR)/aqua_gnash-gui.Po
#	source='gui.cpp' object='aqua_gnash-gui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aqua_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o aqua_gnash-gui.obj `if test -f 'gui.cpp'; then $(CYGPATH_W) 'gui.cpp'; else $(CYGPATH_W) '$(srcdir)/gui.cpp'; fi`

aqua_gnash-Player.o: Player.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aqua_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT aqua_gnash-Player.o -MD -MP -MF $(DEPDIR)/aqua_gnash-Player.Tpo -c -o aqua_gnash-Player.o `test -f 'Player.cpp' || echo '$(srcdir)/'`Player.cpp
	$(am__mv) $(DEPDIR)/aqua_gnash-Player.Tpo $(DEPDIR)/aqua_gnash-Player.Po
#	source='Player.cpp' object='aqua_gnash-Player.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aqua_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o aqua_gnash-Player.o `test -f 'Player.cpp' || echo '$(srcdir)/'`Player.cpp

aqua_gnash-Player.obj: Player.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aqua_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT aqua_gnash-Player.obj -MD -MP -MF $(DEPDIR)/aqua_gnash-Player.Tpo -c -o aqua_gnash-Player.obj `if test -f 'Player.cpp'; then $(CYGPATH_W) 'Player.cpp'; else $(CYGPATH_W) '$(srcdir)/Player.cpp'; fi`
	$(am__mv) $(DEPDIR)/aqua_gnash-Player.Tpo $(DEPDIR)/aqua_gnash-Player.Po
#	source='Player.cpp' object='aqua_gnash-Player.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aqua_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o aqua_gnash-Player.obj `if test -f 'Player.cpp'; then $(CYGPATH_W) 'Player.cpp'; else $(CYGPATH_W) '$(srcdir)/Player.cpp'; fi`

aqua_gnash-NullGui.o: NullGui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aqua_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT aqua_gnash-NullGui.o -MD -MP -MF $(DEPDIR)/aqua_gnash-NullGui.Tpo -c -o aqua_gnash-NullGui.o `test -f 'NullGui.cpp' || echo '$(srcdir)/'`NullGui.cpp
	$(am__mv) $(DEPDIR)/aqua_gnash-NullGui.Tpo $(DEPDIR)/aqua_gnash-NullGui.Po
#	source='NullGui.cpp' object='aqua_gnash-NullGui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aqua_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o aqua_gnash-NullGui.o `test -f 'NullGui.cpp' || echo '$(srcdir)/'`NullGui.cpp

aqua_gnash-NullGui.obj: NullGui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aqua_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT aqua_gnash-NullGui.obj -MD -MP -MF $(DEPDIR)/aqua_gnash-NullGui.Tpo -c -o aqua_gnash-NullGui.obj `if test -f 'NullGui.cpp'; then $(CYGPATH_W) 'NullGui.cpp'; else $(CYGPATH_W) '$(srcdir)/NullGui.cpp'; fi`
	$(am__mv) $(DEPDIR)/aqua_gnash-NullGui.Tpo $(DEPDIR)/aqua_gnash-NullGui.Po
#	source='NullGui.cpp' object='aqua_gnash-NullGui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aqua_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o aqua_gnash-NullGui.obj `if test -f 'NullGui.cpp'; then $(CYGPATH_W) 'NullGui.cpp'; else $(CYGPATH_W) '$(srcdir)/NullGui.cpp'; fi`

aqua_gnash-gui_aqua.o: gui_aqua.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aqua_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT aqua_gnash-gui_aqua.o -MD -MP -MF $(DEPDIR)/aqua_gnash-gui_aqua.Tpo -c -o aqua_gnash-gui_aqua.o `test -f 'gui_aqua.cpp' || echo '$(srcdir)/'`gui_aqua.cpp
	$(am__mv) $(DEPDIR)/aqua_gnash-gui_aqua.Tpo $(DEPDIR)/aqua_gnash-gui_aqua.Po
#	source='gui_aqua.cpp' object='aqua_gnash-gui_aqua.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aqua_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o aqua_gnash-gui_aqua.o `test -f 'gui_aqua.cpp' || echo '$(srcdir)/'`gui_aqua.cpp

aqua_gnash-gui_aqua.obj: gui_aqua.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aqua_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT aqua_gnash-gui_aqua.obj -MD -MP -MF $(DEPDIR)/aqua_gnash-gui_aqua.Tpo -c -o aqua_gnash-gui_aqua.obj `if test -f 'gui_aqua.cpp'; then $(CYGPATH_W) 'gui_aqua.cpp'; else $(CYGPATH_W) '$(srcdir)/gui_aqua.cpp'; fi`
	$(am__mv) $(DEPDIR)/aqua_gnash-gui_aqua.Tpo $(DEPDIR)/aqua_gnash-gui_aqua.Po
#	source='gui_aqua.cpp' object='aqua_gnash-gui_aqua.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aqua_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o aqua_gnash-gui_aqua.obj `if test -f 'gui_aqua.cpp'; then $(CYGPATH_W) 'gui_aqua.cpp'; else $(CYGPATH_W) '$(srcdir)/gui_aqua.cpp'; fi`

aqua_gnash-aqua_ogl_glue.o: aqua_ogl_glue.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aqua_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT aqua_gnash-aqua_ogl_glue.o -MD -MP -MF $(DEPDIR)/aqua_gnash-aqua_ogl_glue.Tpo -c -o aqua_gnash-aqua_ogl_glue.o `test -f 'aqua_ogl_glue.cpp' || echo '$(srcdir)/'`aqua_ogl_glue.cpp
	$(am__mv) $(DEPDIR)/aqua_gnash-aqua_ogl_glue.Tpo $(DEPDIR)/aqua_gnash-aqua_ogl_glue.Po
#	source='aqua_ogl_glue.cpp' object='aqua_gnash-aqua_ogl_glue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aqua_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o aqua_gnash-aqua_ogl_glue.o `test -f 'aqua_ogl_glue.cpp' || echo '$(srcdir)/'`aqua_ogl_glue.cpp

aqua_gnash-aqua_ogl_glue.obj: aqua_ogl_glue.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aqua_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT aqua_gnash-aqua_ogl_glue.obj -MD -MP -MF $(DEPDIR)/aqua_gnash-aqua_ogl_glue.Tpo -c -o aqua_gnash-aqua_ogl_glue.obj `if test -f 'aqua_ogl_glue.cpp'; then $(CYGPATH_W) 'aqua_ogl_glue.cpp'; else $(CYGPATH_W) '$(srcdir)/aqua_ogl_glue.cpp'; fi`
	$(am__mv) $(DEPDIR)/aqua_gnash-aqua_ogl_glue.Tpo $(DEPDIR)/aqua_gnash-aqua_ogl_glue.Po
#	source='aqua_ogl_glue.cpp' object='aqua_gnash-aqua_ogl_glue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aqua_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o aqua_gnash-aqua_ogl_glue.obj `if test -f 'aqua_ogl_glue.cpp'; then $(CYGPATH_W) 'aqua_ogl_glue.cpp'; else $(CYGPATH_W) '$(srcdir)/aqua_ogl_glue.cpp'; fi`

aqua_gnash-aqua.o: aqua.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aqua_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT aqua_gnash-aqua.o -MD -MP -MF $(DEPDIR)/aqua_gnash-aqua.Tpo -c -o aqua_gnash-aqua.o `test -f 'aqua.cpp' || echo '$(srcdir)/'`aqua.cpp
	$(am__mv) $(DEPDIR)/aqua_gnash-aqua.Tpo $(DEPDIR)/aqua_gnash-aqua.Po
#	source='aqua.cpp' object='aqua_gnash-aqua.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aqua_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o aqua_gnash-aqua.o `test -f 'aqua.cpp' || echo '$(srcdir)/'`aqua.cpp

aqua_gnash-aqua.obj: aqua.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aqua_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT aqua_gnash-aqua.obj -MD -MP -MF $(DEPDIR)/aqua_gnash-aqua.Tpo -c -o aqua_gnash-aqua.obj `if test -f 'aqua.cpp'; then $(CYGPATH_W) 'aqua.cpp'; else $(CYGPATH_W) '$(srcdir)/aqua.cpp'; fi`
	$(am__mv) $(DEPDIR)/aqua_gnash-aqua.Tpo $(DEPDIR)/aqua_gnash-aqua.Po
#	source='aqua.cpp' object='aqua_gnash-aqua.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(aqua_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o aqua_gnash-aqua.obj `if test -f 'aqua.cpp'; then $(CYGPATH_W) 'aqua.cpp'; else $(CYGPATH_W) '$(srcdir)/aqua.cpp'; fi`

dump_gnash-gnash.o: gnash.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dump_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dump_gnash-gnash.o -MD -MP -MF $(DEPDIR)/dump_gnash-gnash.Tpo -c -o dump_gnash-gnash.o `test -f 'gnash.cpp' || echo '$(srcdir)/'`gnash.cpp
	$(am__mv) $(DEPDIR)/dump_gnash-gnash.Tpo $(DEPDIR)/dump_gnash-gnash.Po
#	source='gnash.cpp' object='dump_gnash-gnash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dump_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dump_gnash-gnash.o `test -f 'gnash.cpp' || echo '$(srcdir)/'`gnash.cpp

dump_gnash-gnash.obj: gnash.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dump_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dump_gnash-gnash.obj -MD -MP -MF $(DEPDIR)/dump_gnash-gnash.Tpo -c -o dump_gnash-gnash.obj `if test -f 'gnash.cpp'; then $(CYGPATH_W) 'gnash.cpp'; else $(CYGPATH_W) '$(srcdir)/gnash.cpp'; fi`
	$(am__mv) $(DEPDIR)/dump_gnash-gnash.Tpo $(DEPDIR)/dump_gnash-gnash.Po
#	source='gnash.cpp' object='dump_gnash-gnash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dump_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dump_gnash-gnash.obj `if test -f 'gnash.cpp'; then $(CYGPATH_W) 'gnash.cpp'; else $(CYGPATH_W) '$(srcdir)/gnash.cpp'; fi`

dump_gnash-gui.o: gui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dump_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dump_gnash-gui.o -MD -MP -MF $(DEPDIR)/dump_gnash-gui.Tpo -c -o dump_gnash-gui.o `test -f 'gui.cpp' || echo '$(srcdir)/'`gui.cpp
	$(am__mv) $(DEPDIR)/dump_gnash-gui.Tpo $(DEPDIR)/dump_gnash-gui.Po
#	source='gui.cpp' object='dump_gnash-gui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dump_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dump_gnash-gui.o `test -f 'gui.cpp' || echo '$(srcdir)/'`gui.cpp

dump_gnash-gui.obj: gui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dump_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dump_gnash-gui.obj -MD -MP -MF $(DEPDIR)/dump_gnash-gui.Tpo -c -o dump_gnash-gui.obj `if test -f 'gui.cpp'; then $(CYGPATH_W) 'gui.cpp'; else $(CYGPATH_W) '$(srcdir)/gui.cpp'; fi`
	$(am__mv) $(DEPDIR)/dump_gnash-gui.Tpo $(DEPDIR)/dump_gnash-gui.Po
#	source='gui.cpp' object='dump_gnash-gui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dump_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dump_gnash-gui.obj `if test -f 'gui.cpp'; then $(CYGPATH_W) 'gui.cpp'; else $(CYGPATH_W) '$(srcdir)/gui.cpp'; fi`

dump_gnash-Player.o: Player.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dump_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dump_gnash-Player.o -MD -MP -MF $(DEPDIR)/dump_gnash-Player.Tpo -c -o dump_gnash-Player.o `test -f 'Player.cpp' || echo '$(srcdir)/'`Player.cpp
	$(am__mv) $(DEPDIR)/dump_gnash-Player.Tpo $(DEPDIR)/dump_gnash-Player.Po
#	source='Player.cpp' object='dump_gnash-Player.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dump_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dump_gnash-Player.o `test -f 'Player.cpp' || echo '$(srcdir)/'`Player.cpp

dump_gnash-Player.obj: Player.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dump_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dump_gnash-Player.obj -MD -MP -MF $(DEPDIR)/dump_gnash-Player.Tpo -c -o dump_gnash-Player.obj `if test -f 'Player.cpp'; then $(CYGPATH_W) 'Player.cpp'; else $(CYGPATH_W) '$(srcdir)/Player.cpp'; fi`
	$(am__mv) $(DEPDIR)/dump_gnash-Player.Tpo $(DEPDIR)/dump_gnash-Player.Po
#	source='Player.cpp' object='dump_gnash-Player.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dump_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dump_gnash-Player.obj `if test -f 'Player.cpp'; then $(CYGPATH_W) 'Player.cpp'; else $(CYGPATH_W) '$(srcdir)/Player.cpp'; fi`

dump_gnash-NullGui.o: NullGui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dump_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dump_gnash-NullGui.o -MD -MP -MF $(DEPDIR)/dump_gnash-NullGui.Tpo -c -o dump_gnash-NullGui.o `test -f 'NullGui.cpp' || echo '$(srcdir)/'`NullGui.cpp
	$(am__mv) $(DEPDIR)/dump_gnash-NullGui.Tpo $(DEPDIR)/dump_gnash-NullGui.Po
#	source='NullGui.cpp' object='dump_gnash-NullGui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dump_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dump_gnash-NullGui.o `test -f 'NullGui.cpp' || echo '$(srcdir)/'`NullGui.cpp

dump_gnash-NullGui.obj: NullGui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dump_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dump_gnash-NullGui.obj -MD -MP -MF $(DEPDIR)/dump_gnash-NullGui.Tpo -c -o dump_gnash-NullGui.obj `if test -f 'NullGui.cpp'; then $(CYGPATH_W) 'NullGui.cpp'; else $(CYGPATH_W) '$(srcdir)/NullGui.cpp'; fi`
	$(am__mv) $(DEPDIR)/dump_gnash-NullGui.Tpo $(DEPDIR)/dump_gnash-NullGui.Po
#	source='NullGui.cpp' object='dump_gnash-NullGui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dump_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dump_gnash-NullGui.obj `if test -f 'NullGui.cpp'; then $(CYGPATH_W) 'NullGui.cpp'; else $(CYGPATH_W) '$(srcdir)/NullGui.cpp'; fi`

dump_gnash-gui_dump.o: gui_dump.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dump_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dump_gnash-gui_dump.o -MD -MP -MF $(DEPDIR)/dump_gnash-gui_dump.Tpo -c -o dump_gnash-gui_dump.o `test -f 'gui_dump.cpp' || echo '$(srcdir)/'`gui_dump.cpp
	$(am__mv) $(DEPDIR)/dump_gnash-gui_dump.Tpo $(DEPDIR)/dump_gnash-gui_dump.Po
#	source='gui_dump.cpp' object='dump_gnash-gui_dump.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dump_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dump_gnash-gui_dump.o `test -f 'gui_dump.cpp' || echo '$(srcdir)/'`gui_dump.cpp

dump_gnash-gui_dump.obj: gui_dump.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dump_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dump_gnash-gui_dump.obj -MD -MP -MF $(DEPDIR)/dump_gnash-gui_dump.Tpo -c -o dump_gnash-gui_dump.obj `if test -f 'gui_dump.cpp'; then $(CYGPATH_W) 'gui_dump.cpp'; else $(CYGPATH_W) '$(srcdir)/gui_dump.cpp'; fi`
	$(am__mv) $(DEPDIR)/dump_gnash-gui_dump.Tpo $(DEPDIR)/dump_gnash-gui_dump.Po
#	source='gui_dump.cpp' object='dump_gnash-gui_dump.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dump_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dump_gnash-gui_dump.obj `if test -f 'gui_dump.cpp'; then $(CYGPATH_W) 'gui_dump.cpp'; else $(CYGPATH_W) '$(srcdir)/gui_dump.cpp'; fi`

dump_gnash-dump.o: dump.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dump_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dump_gnash-dump.o -MD -MP -MF $(DEPDIR)/dump_gnash-dump.Tpo -c -o dump_gnash-dump.o `test -f 'dump.cpp' || echo '$(srcdir)/'`dump.cpp
	$(am__mv) $(DEPDIR)/dump_gnash-dump.Tpo $(DEPDIR)/dump_gnash-dump.Po
#	source='dump.cpp' object='dump_gnash-dump.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dump_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dump_gnash-dump.o `test -f 'dump.cpp' || echo '$(srcdir)/'`dump.cpp

dump_gnash-dump.obj: dump.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dump_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dump_gnash-dump.obj -MD -MP -MF $(DEPDIR)/dump_gnash-dump.Tpo -c -o dump_gnash-dump.obj `if test -f 'dump.cpp'; then $(CYGPATH_W) 'dump.cpp'; else $(CYGPATH_W) '$(srcdir)/dump.cpp'; fi`
	$(am__mv) $(DEPDIR)/dump_gnash-dump.Tpo $(DEPDIR)/dump_gnash-dump.Po
#	source='dump.cpp' object='dump_gnash-dump.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dump_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dump_gnash-dump.obj `if test -f 'dump.cpp'; then $(CYGPATH_W) 'dump.cpp'; else $(CYGPATH_W) '$(srcdir)/dump.cpp'; fi`

fb_gnash-gnash.o: gnash.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fb_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fb_gnash-gnash.o -MD -MP -MF $(DEPDIR)/fb_gnash-gnash.Tpo -c -o fb_gnash-gnash.o `test -f 'gnash.cpp' || echo '$(srcdir)/'`gnash.cpp
	$(am__mv) $(DEPDIR)/fb_gnash-gnash.Tpo $(DEPDIR)/fb_gnash-gnash.Po
#	source='gnash.cpp' object='fb_gnash-gnash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fb_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fb_gnash-gnash.o `test -f 'gnash.cpp' || echo '$(srcdir)/'`gnash.cpp

fb_gnash-gnash.obj: gnash.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fb_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fb_gnash-gnash.obj -MD -MP -MF $(DEPDIR)/fb_gnash-gnash.Tpo -c -o fb_gnash-gnash.obj `if test -f 'gnash.cpp'; then $(CYGPATH_W) 'gnash.cpp'; else $(CYGPATH_W) '$(srcdir)/gnash.cpp'; fi`
	$(am__mv) $(DEPDIR)/fb_gnash-gnash.Tpo $(DEPDIR)/fb_gnash-gnash.Po
#	source='gnash.cpp' object='fb_gnash-gnash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fb_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fb_gnash-gnash.obj `if test -f 'gnash.cpp'; then $(CYGPATH_W) 'gnash.cpp'; else $(CYGPATH_W) '$(srcdir)/gnash.cpp'; fi`

fb_gnash-gui.o: gui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fb_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fb_gnash-gui.o -MD -MP -MF $(DEPDIR)/fb_gnash-gui.Tpo -c -o fb_gnash-gui.o `test -f 'gui.cpp' || echo '$(srcdir)/'`gui.cpp
	$(am__mv) $(DEPDIR)/fb_gnash-gui.Tpo $(DEPDIR)/fb_gnash-gui.Po
#	source='gui.cpp' object='fb_gnash-gui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fb_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fb_gnash-gui.o `test -f 'gui.cpp' || echo '$(srcdir)/'`gui.cpp

fb_gnash-gui.obj: gui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fb_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fb_gnash-gui.obj -MD -MP -MF $(DEPDIR)/fb_gnash-gui.Tpo -c -o fb_gnash-gui.obj `if test -f 'gui.cpp'; then $(CYGPATH_W) 'gui.cpp'; else $(CYGPATH_W) '$(srcdir)/gui.cpp'; fi`
	$(am__mv) $(DEPDIR)/fb_gnash-gui.Tpo $(DEPDIR)/fb_gnash-gui.Po
#	source='gui.cpp' object='fb_gnash-gui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fb_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fb_gnash-gui.obj `if test -f 'gui.cpp'; then $(CYGPATH_W) 'gui.cpp'; else $(CYGPATH_W) '$(srcdir)/gui.cpp'; fi`

fb_gnash-Player.o: Player.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fb_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fb_gnash-Player.o -MD -MP -MF $(DEPDIR)/fb_gnash-Player.Tpo -c -o fb_gnash-Player.o `test -f 'Player.cpp' || echo '$(srcdir)/'`Player.cpp
	$(am__mv) $(DEPDIR)/fb_gnash-Player.Tpo $(DEPDIR)/fb_gnash-Player.Po
#	source='Player.cpp' object='fb_gnash-Player.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fb_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fb_gnash-Player.o `test -f 'Player.cpp' || echo '$(srcdir)/'`Player.cpp

fb_gnash-Player.obj: Player.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fb_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fb_gnash-Player.obj -MD -MP -MF $(DEPDIR)/fb_gnash-Player.Tpo -c -o fb_gnash-Player.obj `if test -f 'Player.cpp'; then $(CYGPATH_W) 'Player.cpp'; else $(CYGPATH_W) '$(srcdir)/Player.cpp'; fi`
	$(am__mv) $(DEPDIR)/fb_gnash-Player.Tpo $(DEPDIR)/fb_gnash-Player.Po
#	source='Player.cpp' object='fb_gnash-Player.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fb_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fb_gnash-Player.obj `if test -f 'Player.cpp'; then $(CYGPATH_W) 'Player.cpp'; else $(CYGPATH_W) '$(srcdir)/Player.cpp'; fi`

fb_gnash-NullGui.o: NullGui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fb_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fb_gnash-NullGui.o -MD -MP -MF $(DEPDIR)/fb_gnash-NullGui.Tpo -c -o fb_gnash-NullGui.o `test -f 'NullGui.cpp' || echo '$(srcdir)/'`NullGui.cpp
	$(am__mv) $(DEPDIR)/fb_gnash-NullGui.Tpo $(DEPDIR)/fb_gnash-NullGui.Po
#	source='NullGui.cpp' object='fb_gnash-NullGui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fb_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fb_gnash-NullGui.o `test -f 'NullGui.cpp' || echo '$(srcdir)/'`NullGui.cpp

fb_gnash-NullGui.obj: NullGui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fb_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fb_gnash-NullGui.obj -MD -MP -MF $(DEPDIR)/fb_gnash-NullGui.Tpo -c -o fb_gnash-NullGui.obj `if test -f 'NullGui.cpp'; then $(CYGPATH_W) 'NullGui.cpp'; else $(CYGPATH_W) '$(srcdir)/NullGui.cpp'; fi`
	$(am__mv) $(DEPDIR)/fb_gnash-NullGui.Tpo $(DEPDIR)/fb_gnash-NullGui.Po
#	source='NullGui.cpp' object='fb_gnash-NullGui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fb_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fb_gnash-NullGui.obj `if test -f 'NullGui.cpp'; then $(CYGPATH_W) 'NullGui.cpp'; else $(CYGPATH_W) '$(srcdir)/NullGui.cpp'; fi`

fb_gnash-gui_fb.o: gui_fb.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fb_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fb_gnash-gui_fb.o -MD -MP -MF $(DEPDIR)/fb_gnash-gui_fb.Tpo -c -o fb_gnash-gui_fb.o `test -f 'gui_fb.cpp' || echo '$(srcdir)/'`gui_fb.cpp
	$(am__mv) $(DEPDIR)/fb_gnash-gui_fb.Tpo $(DEPDIR)/fb_gnash-gui_fb.Po
#	source='gui_fb.cpp' object='fb_gnash-gui_fb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fb_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fb_gnash-gui_fb.o `test -f 'gui_fb.cpp' || echo '$(srcdir)/'`gui_fb.cpp

fb_gnash-gui_fb.obj: gui_fb.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fb_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fb_gnash-gui_fb.obj -MD -MP -MF $(DEPDIR)/fb_gnash-gui_fb.Tpo -c -o fb_gnash-gui_fb.obj `if test -f 'gui_fb.cpp'; then $(CYGPATH_W) 'gui_fb.cpp'; else $(CYGPATH_W) '$(srcdir)/gui_fb.cpp'; fi`
	$(am__mv) $(DEPDIR)/fb_gnash-gui_fb.Tpo $(DEPDIR)/fb_gnash-gui_fb.Po
#	source='gui_fb.cpp' object='fb_gnash-gui_fb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fb_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fb_gnash-gui_fb.obj `if test -f 'gui_fb.cpp'; then $(CYGPATH_W) 'gui_fb.cpp'; else $(CYGPATH_W) '$(srcdir)/gui_fb.cpp'; fi`

fb_gnash-fb.o: fb.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fb_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fb_gnash-fb.o -MD -MP -MF $(DEPDIR)/fb_gnash-fb.Tpo -c -o fb_gnash-fb.o `test -f 'fb.cpp' || echo '$(srcdir)/'`fb.cpp
	$(am__mv) $(DEPDIR)/fb_gnash-fb.Tpo $(DEPDIR)/fb_gnash-fb.Po
#	source='fb.cpp' object='fb_gnash-fb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fb_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fb_gnash-fb.o `test -f 'fb.cpp' || echo '$(srcdir)/'`fb.cpp

fb_gnash-fb.obj: fb.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fb_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fb_gnash-fb.obj -MD -MP -MF $(DEPDIR)/fb_gnash-fb.Tpo -c -o fb_gnash-fb.obj `if test -f 'fb.cpp'; then $(CYGPATH_W) 'fb.cpp'; else $(CYGPATH_W) '$(srcdir)/fb.cpp'; fi`
	$(am__mv) $(DEPDIR)/fb_gnash-fb.Tpo $(DEPDIR)/fb_gnash-fb.Po
#	source='fb.cpp' object='fb_gnash-fb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fb_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fb_gnash-fb.obj `if test -f 'fb.cpp'; then $(CYGPATH_W) 'fb.cpp'; else $(CYGPATH_W) '$(srcdir)/fb.cpp'; fi`

fltk_gnash-gnash.o: gnash.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fltk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fltk_gnash-gnash.o -MD -MP -MF $(DEPDIR)/fltk_gnash-gnash.Tpo -c -o fltk_gnash-gnash.o `test -f 'gnash.cpp' || echo '$(srcdir)/'`gnash.cpp
	$(am__mv) $(DEPDIR)/fltk_gnash-gnash.Tpo $(DEPDIR)/fltk_gnash-gnash.Po
#	source='gnash.cpp' object='fltk_gnash-gnash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fltk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fltk_gnash-gnash.o `test -f 'gnash.cpp' || echo '$(srcdir)/'`gnash.cpp

fltk_gnash-gnash.obj: gnash.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fltk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fltk_gnash-gnash.obj -MD -MP -MF $(DEPDIR)/fltk_gnash-gnash.Tpo -c -o fltk_gnash-gnash.obj `if test -f 'gnash.cpp'; then $(CYGPATH_W) 'gnash.cpp'; else $(CYGPATH_W) '$(srcdir)/gnash.cpp'; fi`
	$(am__mv) $(DEPDIR)/fltk_gnash-gnash.Tpo $(DEPDIR)/fltk_gnash-gnash.Po
#	source='gnash.cpp' object='fltk_gnash-gnash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fltk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fltk_gnash-gnash.obj `if test -f 'gnash.cpp'; then $(CYGPATH_W) 'gnash.cpp'; else $(CYGPATH_W) '$(srcdir)/gnash.cpp'; fi`

fltk_gnash-gui.o: gui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fltk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fltk_gnash-gui.o -MD -MP -MF $(DEPDIR)/fltk_gnash-gui.Tpo -c -o fltk_gnash-gui.o `test -f 'gui.cpp' || echo '$(srcdir)/'`gui.cpp
	$(am__mv) $(DEPDIR)/fltk_gnash-gui.Tpo $(DEPDIR)/fltk_gnash-gui.Po
#	source='gui.cpp' object='fltk_gnash-gui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fltk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fltk_gnash-gui.o `test -f 'gui.cpp' || echo '$(srcdir)/'`gui.cpp

fltk_gnash-gui.obj: gui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fltk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fltk_gnash-gui.obj -MD -MP -MF $(DEPDIR)/fltk_gnash-gui.Tpo -c -o fltk_gnash-gui.obj `if test -f 'gui.cpp'; then $(CYGPATH_W) 'gui.cpp'; else $(CYGPATH_W) '$(srcdir)/gui.cpp'; fi`
	$(am__mv) $(DEPDIR)/fltk_gnash-gui.Tpo $(DEPDIR)/fltk_gnash-gui.Po
#	source='gui.cpp' object='fltk_gnash-gui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fltk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fltk_gnash-gui.obj `if test -f 'gui.cpp'; then $(CYGPATH_W) 'gui.cpp'; else $(CYGPATH_W) '$(srcdir)/gui.cpp'; fi`

fltk_gnash-Player.o: Player.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fltk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fltk_gnash-Player.o -MD -MP -MF $(DEPDIR)/fltk_gnash-Player.Tpo -c -o fltk_gnash-Player.o `test -f 'Player.cpp' || echo '$(srcdir)/'`Player.cpp
	$(am__mv) $(DEPDIR)/fltk_gnash-Player.Tpo $(DEPDIR)/fltk_gnash-Player.Po
#	source='Player.cpp' object='fltk_gnash-Player.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fltk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fltk_gnash-Player.o `test -f 'Player.cpp' || echo '$(srcdir)/'`Player.cpp

fltk_gnash-Player.obj: Player.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fltk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fltk_gnash-Player.obj -MD -MP -MF $(DEPDIR)/fltk_gnash-Player.Tpo -c -o fltk_gnash-Player.obj `if test -f 'Player.cpp'; then $(CYGPATH_W) 'Player.cpp'; else $(CYGPATH_W) '$(srcdir)/Player.cpp'; fi`
	$(am__mv) $(DEPDIR)/fltk_gnash-Player.Tpo $(DEPDIR)/fltk_gnash-Player.Po
#	source='Player.cpp' object='fltk_gnash-Player.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fltk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fltk_gnash-Player.obj `if test -f 'Player.cpp'; then $(CYGPATH_W) 'Player.cpp'; else $(CYGPATH_W) '$(srcdir)/Player.cpp'; fi`

fltk_gnash-NullGui.o: NullGui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fltk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fltk_gnash-NullGui.o -MD -MP -MF $(DEPDIR)/fltk_gnash-NullGui.Tpo -c -o fltk_gnash-NullGui.o `test -f 'NullGui.cpp' || echo '$(srcdir)/'`NullGui.cpp
	$(am__mv) $(DEPDIR)/fltk_gnash-NullGui.Tpo $(DEPDIR)/fltk_gnash-NullGui.Po
#	source='NullGui.cpp' object='fltk_gnash-NullGui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fltk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fltk_gnash-NullGui.o `test -f 'NullGui.cpp' || echo '$(srcdir)/'`NullGui.cpp

fltk_gnash-NullGui.obj: NullGui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fltk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fltk_gnash-NullGui.obj -MD -MP -MF $(DEPDIR)/fltk_gnash-NullGui.Tpo -c -o fltk_gnash-NullGui.obj `if test -f 'NullGui.cpp'; then $(CYGPATH_W) 'NullGui.cpp'; else $(CYGPATH_W) '$(srcdir)/NullGui.cpp'; fi`
	$(am__mv) $(DEPDIR)/fltk_gnash-NullGui.Tpo $(DEPDIR)/fltk_gnash-NullGui.Po
#	source='NullGui.cpp' object='fltk_gnash-NullGui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fltk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fltk_gnash-NullGui.obj `if test -f 'NullGui.cpp'; then $(CYGPATH_W) 'NullGui.cpp'; else $(CYGPATH_W) '$(srcdir)/NullGui.cpp'; fi`

fltk_gnash-gui_fltk.o: gui_fltk.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fltk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fltk_gnash-gui_fltk.o -MD -MP -MF $(DEPDIR)/fltk_gnash-gui_fltk.Tpo -c -o fltk_gnash-gui_fltk.o `test -f 'gui_fltk.cpp' || echo '$(srcdir)/'`gui_fltk.cpp
	$(am__mv) $(DEPDIR)/fltk_gnash-gui_fltk.Tpo $(DEPDIR)/fltk_gnash-gui_fltk.Po
#	source='gui_fltk.cpp' object='fltk_gnash-gui_fltk.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fltk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fltk_gnash-gui_fltk.o `test -f 'gui_fltk.cpp' || echo '$(srcdir)/'`gui_fltk.cpp

fltk_gnash-gui_fltk.obj: gui_fltk.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fltk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fltk_gnash-gui_fltk.obj -MD -MP -MF $(DEPDIR)/fltk_gnash-gui_fltk.Tpo -c -o fltk_gnash-gui_fltk.obj `if test -f 'gui_fltk.cpp'; then $(CYGPATH_W) 'gui_fltk.cpp'; else $(CYGPATH_W) '$(srcdir)/gui_fltk.cpp'; fi`
	$(am__mv) $(DEPDIR)/fltk_gnash-gui_fltk.Tpo $(DEPDIR)/fltk_gnash-gui_fltk.Po
#	source='gui_fltk.cpp' object='fltk_gnash-gui_fltk.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fltk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fltk_gnash-gui_fltk.obj `if test -f 'gui_fltk.cpp'; then $(CYGPATH_W) 'gui_fltk.cpp'; else $(CYGPATH_W) '$(srcdir)/gui_fltk.cpp'; fi`

fltk_gnash-fltk_glue_agg.o: fltk_glue_agg.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fltk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fltk_gnash-fltk_glue_agg.o -MD -MP -MF $(DEPDIR)/fltk_gnash-fltk_glue_agg.Tpo -c -o fltk_gnash-fltk_glue_agg.o `test -f 'fltk_glue_agg.cpp' || echo '$(srcdir)/'`fltk_glue_agg.cpp
	$(am__mv) $(DEPDIR)/fltk_gnash-fltk_glue_agg.Tpo $(DEPDIR)/fltk_gnash-fltk_glue_agg.Po
#	source='fltk_glue_agg.cpp' object='fltk_gnash-fltk_glue_agg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fltk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fltk_gnash-fltk_glue_agg.o `test -f 'fltk_glue_agg.cpp' || echo '$(srcdir)/'`fltk_glue_agg.cpp

fltk_gnash-fltk_glue_agg.obj: fltk_glue_agg.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fltk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fltk_gnash-fltk_glue_agg.obj -MD -MP -MF $(DEPDIR)/fltk_gnash-fltk_glue_agg.Tpo -c -o fltk_gnash-fltk_glue_agg.obj `if test -f 'fltk_glue_agg.cpp'; then $(CYGPATH_W) 'fltk_glue_agg.cpp'; else $(CYGPATH_W) '$(srcdir)/fltk_glue_agg.cpp'; fi`
	$(am__mv) $(DEPDIR)/fltk_gnash-fltk_glue_agg.Tpo $(DEPDIR)/fltk_gnash-fltk_glue_agg.Po
#	source='fltk_glue_agg.cpp' object='fltk_gnash-fltk_glue_agg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fltk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fltk_gnash-fltk_glue_agg.obj `if test -f 'fltk_glue_agg.cpp'; then $(CYGPATH_W) 'fltk_glue_agg.cpp'; else $(CYGPATH_W) '$(srcdir)/fltk_glue_agg.cpp'; fi`

fltk_gnash-fltk.o: fltk.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fltk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fltk_gnash-fltk.o -MD -MP -MF $(DEPDIR)/fltk_gnash-fltk.Tpo -c -o fltk_gnash-fltk.o `test -f 'fltk.cpp' || echo '$(srcdir)/'`fltk.cpp
	$(am__mv) $(DEPDIR)/fltk_gnash-fltk.Tpo $(DEPDIR)/fltk_gnash-fltk.Po
#	source='fltk.cpp' object='fltk_gnash-fltk.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fltk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fltk_gnash-fltk.o `test -f 'fltk.cpp' || echo '$(srcdir)/'`fltk.cpp

fltk_gnash-fltk.obj: fltk.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fltk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fltk_gnash-fltk.obj -MD -MP -MF $(DEPDIR)/fltk_gnash-fltk.Tpo -c -o fltk_gnash-fltk.obj `if test -f 'fltk.cpp'; then $(CYGPATH_W) 'fltk.cpp'; else $(CYGPATH_W) '$(srcdir)/fltk.cpp'; fi`
	$(am__mv) $(DEPDIR)/fltk_gnash-fltk.Tpo $(DEPDIR)/fltk_gnash-fltk.Po
#	source='fltk.cpp' object='fltk_gnash-fltk.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fltk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fltk_gnash-fltk.obj `if test -f 'fltk.cpp'; then $(CYGPATH_W) 'fltk.cpp'; else $(CYGPATH_W) '$(srcdir)/fltk.cpp'; fi`

gtk_gnash-gnash.o: gnash.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gtk_gnash-gnash.o -MD -MP -MF $(DEPDIR)/gtk_gnash-gnash.Tpo -c -o gtk_gnash-gnash.o `test -f 'gnash.cpp' || echo '$(srcdir)/'`gnash.cpp
	$(am__mv) $(DEPDIR)/gtk_gnash-gnash.Tpo $(DEPDIR)/gtk_gnash-gnash.Po
#	source='gnash.cpp' object='gtk_gnash-gnash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gtk_gnash-gnash.o `test -f 'gnash.cpp' || echo '$(srcdir)/'`gnash.cpp

gtk_gnash-gnash.obj: gnash.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gtk_gnash-gnash.obj -MD -MP -MF $(DEPDIR)/gtk_gnash-gnash.Tpo -c -o gtk_gnash-gnash.obj `if test -f 'gnash.cpp'; then $(CYGPATH_W) 'gnash.cpp'; else $(CYGPATH_W) '$(srcdir)/gnash.cpp'; fi`
	$(am__mv) $(DEPDIR)/gtk_gnash-gnash.Tpo $(DEPDIR)/gtk_gnash-gnash.Po
#	source='gnash.cpp' object='gtk_gnash-gnash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gtk_gnash-gnash.obj `if test -f 'gnash.cpp'; then $(CYGPATH_W) 'gnash.cpp'; else $(CYGPATH_W) '$(srcdir)/gnash.cpp'; fi`

gtk_gnash-gui.o: gui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gtk_gnash-gui.o -MD -MP -MF $(DEPDIR)/gtk_gnash-gui.Tpo -c -o gtk_gnash-gui.o `test -f 'gui.cpp' || echo '$(srcdir)/'`gui.cpp
	$(am__mv) $(DEPDIR)/gtk_gnash-gui.Tpo $(DEPDIR)/gtk_gnash-gui.Po
#	source='gui.cpp' object='gtk_gnash-gui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gtk_gnash-gui.o `test -f 'gui.cpp' || echo '$(srcdir)/'`gui.cpp

gtk_gnash-gui.obj: gui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gtk_gnash-gui.obj -MD -MP -MF $(DEPDIR)/gtk_gnash-gui.Tpo -c -o gtk_gnash-gui.obj `if test -f 'gui.cpp'; then $(CYGPATH_W) 'gui.cpp'; else $(CYGPATH_W) '$(srcdir)/gui.cpp'; fi`
	$(am__mv) $(DEPDIR)/gtk_gnash-gui.Tpo $(DEPDIR)/gtk_gnash-gui.Po
#	source='gui.cpp' object='gtk_gnash-gui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gtk_gnash-gui.obj `if test -f 'gui.cpp'; then $(CYGPATH_W) 'gui.cpp'; else $(CYGPATH_W) '$(srcdir)/gui.cpp'; fi`

gtk_gnash-Player.o: Player.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gtk_gnash-Player.o -MD -MP -MF $(DEPDIR)/gtk_gnash-Player.Tpo -c -o gtk_gnash-Player.o `test -f 'Player.cpp' || echo '$(srcdir)/'`Player.cpp
	$(am__mv) $(DEPDIR)/gtk_gnash-Player.Tpo $(DEPDIR)/gtk_gnash-Player.Po
#	source='Player.cpp' object='gtk_gnash-Player.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gtk_gnash-Player.o `test -f 'Player.cpp' || echo '$(srcdir)/'`Player.cpp

gtk_gnash-Player.obj: Player.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gtk_gnash-Player.obj -MD -MP -MF $(DEPDIR)/gtk_gnash-Player.Tpo -c -o gtk_gnash-Player.obj `if test -f 'Player.cpp'; then $(CYGPATH_W) 'Player.cpp'; else $(CYGPATH_W) '$(srcdir)/Player.cpp'; fi`
	$(am__mv) $(DEPDIR)/gtk_gnash-Player.Tpo $(DEPDIR)/gtk_gnash-Player.Po
#	source='Player.cpp' object='gtk_gnash-Player.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gtk_gnash-Player.obj `if test -f 'Player.cpp'; then $(CYGPATH_W) 'Player.cpp'; else $(CYGPATH_W) '$(srcdir)/Player.cpp'; fi`

gtk_gnash-NullGui.o: NullGui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gtk_gnash-NullGui.o -MD -MP -MF $(DEPDIR)/gtk_gnash-NullGui.Tpo -c -o gtk_gnash-NullGui.o `test -f 'NullGui.cpp' || echo '$(srcdir)/'`NullGui.cpp
	$(am__mv) $(DEPDIR)/gtk_gnash-NullGui.Tpo $(DEPDIR)/gtk_gnash-NullGui.Po
#	source='NullGui.cpp' object='gtk_gnash-NullGui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gtk_gnash-NullGui.o `test -f 'NullGui.cpp' || echo '$(srcdir)/'`NullGui.cpp

gtk_gnash-NullGui.obj: NullGui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gtk_gnash-NullGui.obj -MD -MP -MF $(DEPDIR)/gtk_gnash-NullGui.Tpo -c -o gtk_gnash-NullGui.obj `if test -f 'NullGui.cpp'; then $(CYGPATH_W) 'NullGui.cpp'; else $(CYGPATH_W) '$(srcdir)/NullGui.cpp'; fi`
	$(am__mv) $(DEPDIR)/gtk_gnash-NullGui.Tpo $(DEPDIR)/gtk_gnash-NullGui.Po
#	source='NullGui.cpp' object='gtk_gnash-NullGui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gtk_gnash-NullGui.obj `if test -f 'NullGui.cpp'; then $(CYGPATH_W) 'NullGui.cpp'; else $(CYGPATH_W) '$(srcdir)/NullGui.cpp'; fi`

gtk_gnash-gui_gtk.o: gui_gtk.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gtk_gnash-gui_gtk.o -MD -MP -MF $(DEPDIR)/gtk_gnash-gui_gtk.Tpo -c -o gtk_gnash-gui_gtk.o `test -f 'gui_gtk.cpp' || echo '$(srcdir)/'`gui_gtk.cpp
	$(am__mv) $(DEPDIR)/gtk_gnash-gui_gtk.Tpo $(DEPDIR)/gtk_gnash-gui_gtk.Po
#	source='gui_gtk.cpp' object='gtk_gnash-gui_gtk.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gtk_gnash-gui_gtk.o `test -f 'gui_gtk.cpp' || echo '$(srcdir)/'`gui_gtk.cpp

gtk_gnash-gui_gtk.obj: gui_gtk.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gtk_gnash-gui_gtk.obj -MD -MP -MF $(DEPDIR)/gtk_gnash-gui_gtk.Tpo -c -o gtk_gnash-gui_gtk.obj `if test -f 'gui_gtk.cpp'; then $(CYGPATH_W) 'gui_gtk.cpp'; else $(CYGPATH_W) '$(srcdir)/gui_gtk.cpp'; fi`
	$(am__mv) $(DEPDIR)/gtk_gnash-gui_gtk.Tpo $(DEPDIR)/gtk_gnash-gui_gtk.Po
#	source='gui_gtk.cpp' object='gtk_gnash-gui_gtk.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gtk_gnash-gui_gtk.obj `if test -f 'gui_gtk.cpp'; then $(CYGPATH_W) 'gui_gtk.cpp'; else $(CYGPATH_W) '$(srcdir)/gui_gtk.cpp'; fi`

gtk_gnash-gtk_glue_gtkglext.o: gtk_glue_gtkglext.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gtk_gnash-gtk_glue_gtkglext.o -MD -MP -MF $(DEPDIR)/gtk_gnash-gtk_glue_gtkglext.Tpo -c -o gtk_gnash-gtk_glue_gtkglext.o `test -f 'gtk_glue_gtkglext.cpp' || echo '$(srcdir)/'`gtk_glue_gtkglext.cpp
	$(am__mv) $(DEPDIR)/gtk_gnash-gtk_glue_gtkglext.Tpo $(DEPDIR)/gtk_gnash-gtk_glue_gtkglext.Po
#	source='gtk_glue_gtkglext.cpp' object='gtk_gnash-gtk_glue_gtkglext.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gtk_gnash-gtk_glue_gtkglext.o `test -f 'gtk_glue_gtkglext.cpp' || echo '$(srcdir)/'`gtk_glue_gtkglext.cpp

gtk_gnash-gtk_glue_gtkglext.obj: gtk_glue_gtkglext.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gtk_gnash-gtk_glue_gtkglext.obj -MD -MP -MF $(DEPDIR)/gtk_gnash-gtk_glue_gtkglext.Tpo -c -o gtk_gnash-gtk_glue_gtkglext.obj `if test -f 'gtk_glue_gtkglext.cpp'; then $(CYGPATH_W) 'gtk_glue_gtkglext.cpp'; else $(CYGPATH_W) '$(srcdir)/gtk_glue_gtkglext.cpp'; fi`
	$(am__mv) $(DEPDIR)/gtk_gnash-gtk_glue_gtkglext.Tpo $(DEPDIR)/gtk_gnash-gtk_glue_gtkglext.Po
#	source='gtk_glue_gtkglext.cpp' object='gtk_gnash-gtk_glue_gtkglext.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gtk_gnash-gtk_glue_gtkglext.obj `if test -f 'gtk_glue_gtkglext.cpp'; then $(CYGPATH_W) 'gtk_glue_gtkglext.cpp'; else $(CYGPATH_W) '$(srcdir)/gtk_glue_gtkglext.cpp'; fi`

gtk_gnash-gtk.o: gtk.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gtk_gnash-gtk.o -MD -MP -MF $(DEPDIR)/gtk_gnash-gtk.Tpo -c -o gtk_gnash-gtk.o `test -f 'gtk.cpp' || echo '$(srcdir)/'`gtk.cpp
	$(am__mv) $(DEPDIR)/gtk_gnash-gtk.Tpo $(DEPDIR)/gtk_gnash-gtk.Po
#	source='gtk.cpp' object='gtk_gnash-gtk.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gtk_gnash-gtk.o `test -f 'gtk.cpp' || echo '$(srcdir)/'`gtk.cpp

gtk_gnash-gtk.obj: gtk.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gtk_gnash-gtk.obj -MD -MP -MF $(DEPDIR)/gtk_gnash-gtk.Tpo -c -o gtk_gnash-gtk.obj `if test -f 'gtk.cpp'; then $(CYGPATH_W) 'gtk.cpp'; else $(CYGPATH_W) '$(srcdir)/gtk.cpp'; fi`
	$(am__mv) $(DEPDIR)/gtk_gnash-gtk.Tpo $(DEPDIR)/gtk_gnash-gtk.Po
#	source='gtk.cpp' object='gtk_gnash-gtk.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gtk_gnash-gtk.obj `if test -f 'gtk.cpp'; then $(CYGPATH_W) 'gtk.cpp'; else $(CYGPATH_W) '$(srcdir)/gtk.cpp'; fi`

gtk_gnash-gtk_glue_agg.o: gtk_glue_agg.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gtk_gnash-gtk_glue_agg.o -MD -MP -MF $(DEPDIR)/gtk_gnash-gtk_glue_agg.Tpo -c -o gtk_gnash-gtk_glue_agg.o `test -f 'gtk_glue_agg.cpp' || echo '$(srcdir)/'`gtk_glue_agg.cpp
	$(am__mv) $(DEPDIR)/gtk_gnash-gtk_glue_agg.Tpo $(DEPDIR)/gtk_gnash-gtk_glue_agg.Po
#	source='gtk_glue_agg.cpp' object='gtk_gnash-gtk_glue_agg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gtk_gnash-gtk_glue_agg.o `test -f 'gtk_glue_agg.cpp' || echo '$(srcdir)/'`gtk_glue_agg.cpp

gtk_gnash-gtk_glue_agg.obj: gtk_glue_agg.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gtk_gnash-gtk_glue_agg.obj -MD -MP -MF $(DEPDIR)/gtk_gnash-gtk_glue_agg.Tpo -c -o gtk_gnash-gtk_glue_agg.obj `if test -f 'gtk_glue_agg.cpp'; then $(CYGPATH_W) 'gtk_glue_agg.cpp'; else $(CYGPATH_W) '$(srcdir)/gtk_glue_agg.cpp'; fi`
	$(am__mv) $(DEPDIR)/gtk_gnash-gtk_glue_agg.Tpo $(DEPDIR)/gtk_gnash-gtk_glue_agg.Po
#	source='gtk_glue_agg.cpp' object='gtk_gnash-gtk_glue_agg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gtk_gnash-gtk_glue_agg.obj `if test -f 'gtk_glue_agg.cpp'; then $(CYGPATH_W) 'gtk_glue_agg.cpp'; else $(CYGPATH_W) '$(srcdir)/gtk_glue_agg.cpp'; fi`

gtk_gnash-gtk_glue_cairo.o: gtk_glue_cairo.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gtk_gnash-gtk_glue_cairo.o -MD -MP -MF $(DEPDIR)/gtk_gnash-gtk_glue_cairo.Tpo -c -o gtk_gnash-gtk_glue_cairo.o `test -f 'gtk_glue_cairo.cpp' || echo '$(srcdir)/'`gtk_glue_cairo.cpp
	$(am__mv) $(DEPDIR)/gtk_gnash-gtk_glue_cairo.Tpo $(DEPDIR)/gtk_gnash-gtk_glue_cairo.Po
#	source='gtk_glue_cairo.cpp' object='gtk_gnash-gtk_glue_cairo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gtk_gnash-gtk_glue_cairo.o `test -f 'gtk_glue_cairo.cpp' || echo '$(srcdir)/'`gtk_glue_cairo.cpp

gtk_gnash-gtk_glue_cairo.obj: gtk_glue_cairo.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gtk_gnash-gtk_glue_cairo.obj -MD -MP -MF $(DEPDIR)/gtk_gnash-gtk_glue_cairo.Tpo -c -o gtk_gnash-gtk_glue_cairo.obj `if test -f 'gtk_glue_cairo.cpp'; then $(CYGPATH_W) 'gtk_glue_cairo.cpp'; else $(CYGPATH_W) '$(srcdir)/gtk_glue_cairo.cpp'; fi`
	$(am__mv) $(DEPDIR)/gtk_gnash-gtk_glue_cairo.Tpo $(DEPDIR)/gtk_gnash-gtk_glue_cairo.Po
#	source='gtk_glue_cairo.cpp' object='gtk_gnash-gtk_glue_cairo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtk_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gtk_gnash-gtk_glue_cairo.obj `if test -f 'gtk_glue_cairo.cpp'; then $(CYGPATH_W) 'gtk_glue_cairo.cpp'; else $(CYGPATH_W) '$(srcdir)/gtk_glue_cairo.cpp'; fi`

hildon_gnash-gnash.o: gnash.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hildon_gnash-gnash.o -MD -MP -MF $(DEPDIR)/hildon_gnash-gnash.Tpo -c -o hildon_gnash-gnash.o `test -f 'gnash.cpp' || echo '$(srcdir)/'`gnash.cpp
	$(am__mv) $(DEPDIR)/hildon_gnash-gnash.Tpo $(DEPDIR)/hildon_gnash-gnash.Po
#	source='gnash.cpp' object='hildon_gnash-gnash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hildon_gnash-gnash.o `test -f 'gnash.cpp' || echo '$(srcdir)/'`gnash.cpp

hildon_gnash-gnash.obj: gnash.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hildon_gnash-gnash.obj -MD -MP -MF $(DEPDIR)/hildon_gnash-gnash.Tpo -c -o hildon_gnash-gnash.obj `if test -f 'gnash.cpp'; then $(CYGPATH_W) 'gnash.cpp'; else $(CYGPATH_W) '$(srcdir)/gnash.cpp'; fi`
	$(am__mv) $(DEPDIR)/hildon_gnash-gnash.Tpo $(DEPDIR)/hildon_gnash-gnash.Po
#	source='gnash.cpp' object='hildon_gnash-gnash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hildon_gnash-gnash.obj `if test -f 'gnash.cpp'; then $(CYGPATH_W) 'gnash.cpp'; else $(CYGPATH_W) '$(srcdir)/gnash.cpp'; fi`

hildon_gnash-gui.o: gui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hildon_gnash-gui.o -MD -MP -MF $(DEPDIR)/hildon_gnash-gui.Tpo -c -o hildon_gnash-gui.o `test -f 'gui.cpp' || echo '$(srcdir)/'`gui.cpp
	$(am__mv) $(DEPDIR)/hildon_gnash-gui.Tpo $(DEPDIR)/hildon_gnash-gui.Po
#	source='gui.cpp' object='hildon_gnash-gui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hildon_gnash-gui.o `test -f 'gui.cpp' || echo '$(srcdir)/'`gui.cpp

hildon_gnash-gui.obj: gui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hildon_gnash-gui.obj -MD -MP -MF $(DEPDIR)/hildon_gnash-gui.Tpo -c -o hildon_gnash-gui.obj `if test -f 'gui.cpp'; then $(CYGPATH_W) 'gui.cpp'; else $(CYGPATH_W) '$(srcdir)/gui.cpp'; fi`
	$(am__mv) $(DEPDIR)/hildon_gnash-gui.Tpo $(DEPDIR)/hildon_gnash-gui.Po
#	source='gui.cpp' object='hildon_gnash-gui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hildon_gnash-gui.obj `if test -f 'gui.cpp'; then $(CYGPATH_W) 'gui.cpp'; else $(CYGPATH_W) '$(srcdir)/gui.cpp'; fi`

hildon_gnash-Player.o: Player.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hildon_gnash-Player.o -MD -MP -MF $(DEPDIR)/hildon_gnash-Player.Tpo -c -o hildon_gnash-Player.o `test -f 'Player.cpp' || echo '$(srcdir)/'`Player.cpp
	$(am__mv) $(DEPDIR)/hildon_gnash-Player.Tpo $(DEPDIR)/hildon_gnash-Player.Po
#	source='Player.cpp' object='hildon_gnash-Player.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hildon_gnash-Player.o `test -f 'Player.cpp' || echo '$(srcdir)/'`Player.cpp

hildon_gnash-Player.obj: Player.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hildon_gnash-Player.obj -MD -MP -MF $(DEPDIR)/hildon_gnash-Player.Tpo -c -o hildon_gnash-Player.obj `if test -f 'Player.cpp'; then $(CYGPATH_W) 'Player.cpp'; else $(CYGPATH_W) '$(srcdir)/Player.cpp'; fi`
	$(am__mv) $(DEPDIR)/hildon_gnash-Player.Tpo $(DEPDIR)/hildon_gnash-Player.Po
#	source='Player.cpp' object='hildon_gnash-Player.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hildon_gnash-Player.obj `if test -f 'Player.cpp'; then $(CYGPATH_W) 'Player.cpp'; else $(CYGPATH_W) '$(srcdir)/Player.cpp'; fi`

hildon_gnash-NullGui.o: NullGui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hildon_gnash-NullGui.o -MD -MP -MF $(DEPDIR)/hildon_gnash-NullGui.Tpo -c -o hildon_gnash-NullGui.o `test -f 'NullGui.cpp' || echo '$(srcdir)/'`NullGui.cpp
	$(am__mv) $(DEPDIR)/hildon_gnash-NullGui.Tpo $(DEPDIR)/hildon_gnash-NullGui.Po
#	source='NullGui.cpp' object='hildon_gnash-NullGui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hildon_gnash-NullGui.o `test -f 'NullGui.cpp' || echo '$(srcdir)/'`NullGui.cpp

hildon_gnash-NullGui.obj: NullGui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hildon_gnash-NullGui.obj -MD -MP -MF $(DEPDIR)/hildon_gnash-NullGui.Tpo -c -o hildon_gnash-NullGui.obj `if test -f 'NullGui.cpp'; then $(CYGPATH_W) 'NullGui.cpp'; else $(CYGPATH_W) '$(srcdir)/NullGui.cpp'; fi`
	$(am__mv) $(DEPDIR)/hildon_gnash-NullGui.Tpo $(DEPDIR)/hildon_gnash-NullGui.Po
#	source='NullGui.cpp' object='hildon_gnash-NullGui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hildon_gnash-NullGui.obj `if test -f 'NullGui.cpp'; then $(CYGPATH_W) 'NullGui.cpp'; else $(CYGPATH_W) '$(srcdir)/NullGui.cpp'; fi`

hildon_gnash-gui_gtk.o: gui_gtk.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hildon_gnash-gui_gtk.o -MD -MP -MF $(DEPDIR)/hildon_gnash-gui_gtk.Tpo -c -o hildon_gnash-gui_gtk.o `test -f 'gui_gtk.cpp' || echo '$(srcdir)/'`gui_gtk.cpp
	$(am__mv) $(DEPDIR)/hildon_gnash-gui_gtk.Tpo $(DEPDIR)/hildon_gnash-gui_gtk.Po
#	source='gui_gtk.cpp' object='hildon_gnash-gui_gtk.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hildon_gnash-gui_gtk.o `test -f 'gui_gtk.cpp' || echo '$(srcdir)/'`gui_gtk.cpp

hildon_gnash-gui_gtk.obj: gui_gtk.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hildon_gnash-gui_gtk.obj -MD -MP -MF $(DEPDIR)/hildon_gnash-gui_gtk.Tpo -c -o hildon_gnash-gui_gtk.obj `if test -f 'gui_gtk.cpp'; then $(CYGPATH_W) 'gui_gtk.cpp'; else $(CYGPATH_W) '$(srcdir)/gui_gtk.cpp'; fi`
	$(am__mv) $(DEPDIR)/hildon_gnash-gui_gtk.Tpo $(DEPDIR)/hildon_gnash-gui_gtk.Po
#	source='gui_gtk.cpp' object='hildon_gnash-gui_gtk.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hildon_gnash-gui_gtk.obj `if test -f 'gui_gtk.cpp'; then $(CYGPATH_W) 'gui_gtk.cpp'; else $(CYGPATH_W) '$(srcdir)/gui_gtk.cpp'; fi`

hildon_gnash-gtk_glue_gtkglext.o: gtk_glue_gtkglext.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hildon_gnash-gtk_glue_gtkglext.o -MD -MP -MF $(DEPDIR)/hildon_gnash-gtk_glue_gtkglext.Tpo -c -o hildon_gnash-gtk_glue_gtkglext.o `test -f 'gtk_glue_gtkglext.cpp' || echo '$(srcdir)/'`gtk_glue_gtkglext.cpp
	$(am__mv) $(DEPDIR)/hildon_gnash-gtk_glue_gtkglext.Tpo $(DEPDIR)/hildon_gnash-gtk_glue_gtkglext.Po
#	source='gtk_glue_gtkglext.cpp' object='hildon_gnash-gtk_glue_gtkglext.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hildon_gnash-gtk_glue_gtkglext.o `test -f 'gtk_glue_gtkglext.cpp' || echo '$(srcdir)/'`gtk_glue_gtkglext.cpp

hildon_gnash-gtk_glue_gtkglext.obj: gtk_glue_gtkglext.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hildon_gnash-gtk_glue_gtkglext.obj -MD -MP -MF $(DEPDIR)/hildon_gnash-gtk_glue_gtkglext.Tpo -c -o hildon_gnash-gtk_glue_gtkglext.obj `if test -f 'gtk_glue_gtkglext.cpp'; then $(CYGPATH_W) 'gtk_glue_gtkglext.cpp'; else $(CYGPATH_W) '$(srcdir)/gtk_glue_gtkglext.cpp'; fi`
	$(am__mv) $(DEPDIR)/hildon_gnash-gtk_glue_gtkglext.Tpo $(DEPDIR)/hildon_gnash-gtk_glue_gtkglext.Po
#	source='gtk_glue_gtkglext.cpp' object='hildon_gnash-gtk_glue_gtkglext.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hildon_gnash-gtk_glue_gtkglext.obj `if test -f 'gtk_glue_gtkglext.cpp'; then $(CYGPATH_W) 'gtk_glue_gtkglext.cpp'; else $(CYGPATH_W) '$(srcdir)/gtk_glue_gtkglext.cpp'; fi`

hildon_gnash-gtk.o: gtk.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hildon_gnash-gtk.o -MD -MP -MF $(DEPDIR)/hildon_gnash-gtk.Tpo -c -o hildon_gnash-gtk.o `test -f 'gtk.cpp' || echo '$(srcdir)/'`gtk.cpp
	$(am__mv) $(DEPDIR)/hildon_gnash-gtk.Tpo $(DEPDIR)/hildon_gnash-gtk.Po
#	source='gtk.cpp' object='hildon_gnash-gtk.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hildon_gnash-gtk.o `test -f 'gtk.cpp' || echo '$(srcdir)/'`gtk.cpp

hildon_gnash-gtk.obj: gtk.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hildon_gnash-gtk.obj -MD -MP -MF $(DEPDIR)/hildon_gnash-gtk.Tpo -c -o hildon_gnash-gtk.obj `if test -f 'gtk.cpp'; then $(CYGPATH_W) 'gtk.cpp'; else $(CYGPATH_W) '$(srcdir)/gtk.cpp'; fi`
	$(am__mv) $(DEPDIR)/hildon_gnash-gtk.Tpo $(DEPDIR)/hildon_gnash-gtk.Po
#	source='gtk.cpp' object='hildon_gnash-gtk.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hildon_gnash-gtk.obj `if test -f 'gtk.cpp'; then $(CYGPATH_W) 'gtk.cpp'; else $(CYGPATH_W) '$(srcdir)/gtk.cpp'; fi`

hildon_gnash-gtk_glue_agg.o: gtk_glue_agg.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hildon_gnash-gtk_glue_agg.o -MD -MP -MF $(DEPDIR)/hildon_gnash-gtk_glue_agg.Tpo -c -o hildon_gnash-gtk_glue_agg.o `test -f 'gtk_glue_agg.cpp' || echo '$(srcdir)/'`gtk_glue_agg.cpp
	$(am__mv) $(DEPDIR)/hildon_gnash-gtk_glue_agg.Tpo $(DEPDIR)/hildon_gnash-gtk_glue_agg.Po
#	source='gtk_glue_agg.cpp' object='hildon_gnash-gtk_glue_agg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hildon_gnash-gtk_glue_agg.o `test -f 'gtk_glue_agg.cpp' || echo '$(srcdir)/'`gtk_glue_agg.cpp

hildon_gnash-gtk_glue_agg.obj: gtk_glue_agg.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hildon_gnash-gtk_glue_agg.obj -MD -MP -MF $(DEPDIR)/hildon_gnash-gtk_glue_agg.Tpo -c -o hildon_gnash-gtk_glue_agg.obj `if test -f 'gtk_glue_agg.cpp'; then $(CYGPATH_W) 'gtk_glue_agg.cpp'; else $(CYGPATH_W) '$(srcdir)/gtk_glue_agg.cpp'; fi`
	$(am__mv) $(DEPDIR)/hildon_gnash-gtk_glue_agg.Tpo $(DEPDIR)/hildon_gnash-gtk_glue_agg.Po
#	source='gtk_glue_agg.cpp' object='hildon_gnash-gtk_glue_agg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hildon_gnash-gtk_glue_agg.obj `if test -f 'gtk_glue_agg.cpp'; then $(CYGPATH_W) 'gtk_glue_agg.cpp'; else $(CYGPATH_W) '$(srcdir)/gtk_glue_agg.cpp'; fi`

hildon_gnash-gtk_glue_cairo.o: gtk_glue_cairo.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hildon_gnash-gtk_glue_cairo.o -MD -MP -MF $(DEPDIR)/hildon_gnash-gtk_glue_cairo.Tpo -c -o hildon_gnash-gtk_glue_cairo.o `test -f 'gtk_glue_cairo.cpp' || echo '$(srcdir)/'`gtk_glue_cairo.cpp
	$(am__mv) $(DEPDIR)/hildon_gnash-gtk_glue_cairo.Tpo $(DEPDIR)/hildon_gnash-gtk_glue_cairo.Po
#	source='gtk_glue_cairo.cpp' object='hildon_gnash-gtk_glue_cairo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hildon_gnash-gtk_glue_cairo.o `test -f 'gtk_glue_cairo.cpp' || echo '$(srcdir)/'`gtk_glue_cairo.cpp

hildon_gnash-gtk_glue_cairo.obj: gtk_glue_cairo.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hildon_gnash-gtk_glue_cairo.obj -MD -MP -MF $(DEPDIR)/hildon_gnash-gtk_glue_cairo.Tpo -c -o hildon_gnash-gtk_glue_cairo.obj `if test -f 'gtk_glue_cairo.cpp'; then $(CYGPATH_W) 'gtk_glue_cairo.cpp'; else $(CYGPATH_W) '$(srcdir)/gtk_glue_cairo.cpp'; fi`
	$(am__mv) $(DEPDIR)/hildon_gnash-gtk_glue_cairo.Tpo $(DEPDIR)/hildon_gnash-gtk_glue_cairo.Po
#	source='gtk_glue_cairo.cpp' object='hildon_gnash-gtk_glue_cairo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hildon_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hildon_gnash-gtk_glue_cairo.obj `if test -f 'gtk_glue_cairo.cpp'; then $(CYGPATH_W) 'gtk_glue_cairo.cpp'; else $(CYGPATH_W) '$(srcdir)/gtk_glue_cairo.cpp'; fi`

kde_gnash-gnash.o: gnash.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kde_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kde_gnash-gnash.o -MD -MP -MF $(DEPDIR)/kde_gnash-gnash.Tpo -c -o kde_gnash-gnash.o `test -f 'gnash.cpp' || echo '$(srcdir)/'`gnash.cpp
	$(am__mv) $(DEPDIR)/kde_gnash-gnash.Tpo $(DEPDIR)/kde_gnash-gnash.Po
#	source='gnash.cpp' object='kde_gnash-gnash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kde_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kde_gnash-gnash.o `test -f 'gnash.cpp' || echo '$(srcdir)/'`gnash.cpp

kde_gnash-gnash.obj: gnash.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kde_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kde_gnash-gnash.obj -MD -MP -MF $(DEPDIR)/kde_gnash-gnash.Tpo -c -o kde_gnash-gnash.obj `if test -f 'gnash.cpp'; then $(CYGPATH_W) 'gnash.cpp'; else $(CYGPATH_W) '$(srcdir)/gnash.cpp'; fi`
	$(am__mv) $(DEPDIR)/kde_gnash-gnash.Tpo $(DEPDIR)/kde_gnash-gnash.Po
#	source='gnash.cpp' object='kde_gnash-gnash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kde_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kde_gnash-gnash.obj `if test -f 'gnash.cpp'; then $(CYGPATH_W) 'gnash.cpp'; else $(CYGPATH_W) '$(srcdir)/gnash.cpp'; fi`

kde_gnash-gui.o: gui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kde_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kde_gnash-gui.o -MD -MP -MF $(DEPDIR)/kde_gnash-gui.Tpo -c -o kde_gnash-gui.o `test -f 'gui.cpp' || echo '$(srcdir)/'`gui.cpp
	$(am__mv) $(DEPDIR)/kde_gnash-gui.Tpo $(DEPDIR)/kde_gnash-gui.Po
#	source='gui.cpp' object='kde_gnash-gui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kde_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kde_gnash-gui.o `test -f 'gui.cpp' || echo '$(srcdir)/'`gui.cpp

kde_gnash-gui.obj: gui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kde_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kde_gnash-gui.obj -MD -MP -MF $(DEPDIR)/kde_gnash-gui.Tpo -c -o kde_gnash-gui.obj `if test -f 'gui.cpp'; then $(CYGPATH_W) 'gui.cpp'; else $(CYGPATH_W) '$(srcdir)/gui.cpp'; fi`
	$(am__mv) $(DEPDIR)/kde_gnash-gui.Tpo $(DEPDIR)/kde_gnash-gui.Po
#	source='gui.cpp' object='kde_gnash-gui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kde_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kde_gnash-gui.obj `if test -f 'gui.cpp'; then $(CYGPATH_W) 'gui.cpp'; else $(CYGPATH_W) '$(srcdir)/gui.cpp'; fi`

kde_gnash-Player.o: Player.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kde_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kde_gnash-Player.o -MD -MP -MF $(DEPDIR)/kde_gnash-Player.Tpo -c -o kde_gnash-Player.o `test -f 'Player.cpp' || echo '$(srcdir)/'`Player.cpp
	$(am__mv) $(DEPDIR)/kde_gnash-Player.Tpo $(DEPDIR)/kde_gnash-Player.Po
#	source='Player.cpp' object='kde_gnash-Player.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kde_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kde_gnash-Player.o `test -f 'Player.cpp' || echo '$(srcdir)/'`Player.cpp

kde_gnash-Player.obj: Player.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kde_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kde_gnash-Player.obj -MD -MP -MF $(DEPDIR)/kde_gnash-Player.Tpo -c -o kde_gnash-Player.obj `if test -f 'Player.cpp'; then $(CYGPATH_W) 'Player.cpp'; else $(CYGPATH_W) '$(srcdir)/Player.cpp'; fi`
	$(am__mv) $(DEPDIR)/kde_gnash-Player.Tpo $(DEPDIR)/kde_gnash-Player.Po
#	source='Player.cpp' object='kde_gnash-Player.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kde_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kde_gnash-Player.obj `if test -f 'Player.cpp'; then $(CYGPATH_W) 'Player.cpp'; else $(CYGPATH_W) '$(srcdir)/Player.cpp'; fi`

kde_gnash-NullGui.o: NullGui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kde_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kde_gnash-NullGui.o -MD -MP -MF $(DEPDIR)/kde_gnash-NullGui.Tpo -c -o kde_gnash-NullGui.o `test -f 'NullGui.cpp' || echo '$(srcdir)/'`NullGui.cpp
	$(am__mv) $(DEPDIR)/kde_gnash-NullGui.Tpo $(DEPDIR)/kde_gnash-NullGui.Po
#	source='NullGui.cpp' object='kde_gnash-NullGui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kde_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kde_gnash-NullGui.o `test -f 'NullGui.cpp' || echo '$(srcdir)/'`NullGui.cpp

kde_gnash-NullGui.obj: NullGui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kde_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kde_gnash-NullGui.obj -MD -MP -MF $(DEPDIR)/kde_gnash-NullGui.Tpo -c -o kde_gnash-NullGui.obj `if test -f 'NullGui.cpp'; then $(CYGPATH_W) 'NullGui.cpp'; else $(CYGPATH_W) '$(srcdir)/NullGui.cpp'; fi`
	$(am__mv) $(DEPDIR)/kde_gnash-NullGui.Tpo $(DEPDIR)/kde_gnash-NullGui.Po
#	source='NullGui.cpp' object='kde_gnash-NullGui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kde_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kde_gnash-NullGui.obj `if test -f 'NullGui.cpp'; then $(CYGPATH_W) 'NullGui.cpp'; else $(CYGPATH_W) '$(srcdir)/NullGui.cpp'; fi`

kde_gnash-gui_kde.o: gui_kde.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kde_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kde_gnash-gui_kde.o -MD -MP -MF $(DEPDIR)/kde_gnash-gui_kde.Tpo -c -o kde_gnash-gui_kde.o `test -f 'gui_kde.cpp' || echo '$(srcdir)/'`gui_kde.cpp
	$(am__mv) $(DEPDIR)/kde_gnash-gui_kde.Tpo $(DEPDIR)/kde_gnash-gui_kde.Po
#	source='gui_kde.cpp' object='kde_gnash-gui_kde.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kde_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kde_gnash-gui_kde.o `test -f 'gui_kde.cpp' || echo '$(srcdir)/'`gui_kde.cpp

kde_gnash-gui_kde.obj: gui_kde.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kde_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kde_gnash-gui_kde.obj -MD -MP -MF $(DEPDIR)/kde_gnash-gui_kde.Tpo -c -o kde_gnash-gui_kde.obj `if test -f 'gui_kde.cpp'; then $(CYGPATH_W) 'gui_kde.cpp'; else $(CYGPATH_W) '$(srcdir)/gui_kde.cpp'; fi`
	$(am__mv) $(DEPDIR)/kde_gnash-gui_kde.Tpo $(DEPDIR)/kde_gnash-gui_kde.Po
#	source='gui_kde.cpp' object='kde_gnash-gui_kde.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kde_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kde_gnash-gui_kde.obj `if test -f 'gui_kde.cpp'; then $(CYGPATH_W) 'gui_kde.cpp'; else $(CYGPATH_W) '$(srcdir)/gui_kde.cpp'; fi`

kde_gnash-kde_glue_opengl.o: kde_glue_opengl.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kde_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kde_gnash-kde_glue_opengl.o -MD -MP -MF $(DEPDIR)/kde_gnash-kde_glue_opengl.Tpo -c -o kde_gnash-kde_glue_opengl.o `test -f 'kde_glue_opengl.cpp' || echo '$(srcdir)/'`kde_glue_opengl.cpp
	$(am__mv) $(DEPDIR)/kde_gnash-kde_glue_opengl.Tpo $(DEPDIR)/kde_gnash-kde_glue_opengl.Po
#	source='kde_glue_opengl.cpp' object='kde_gnash-kde_glue_opengl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kde_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kde_gnash-kde_glue_opengl.o `test -f 'kde_glue_opengl.cpp' || echo '$(srcdir)/'`kde_glue_opengl.cpp

kde_gnash-kde_glue_opengl.obj: kde_glue_opengl.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kde_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kde_gnash-kde_glue_opengl.obj -MD -MP -MF $(DEPDIR)/kde_gnash-kde_glue_opengl.Tpo -c -o kde_gnash-kde_glue_opengl.obj `if test -f 'kde_glue_opengl.cpp'; then $(CYGPATH_W) 'kde_glue_opengl.cpp'; else $(CYGPATH_W) '$(srcdir)/kde_glue_opengl.cpp'; fi`
	$(am__mv) $(DEPDIR)/kde_gnash-kde_glue_opengl.Tpo $(DEPDIR)/kde_gnash-kde_glue_opengl.Po
#	source='kde_glue_opengl.cpp' object='kde_gnash-kde_glue_opengl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kde_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kde_gnash-kde_glue_opengl.obj `if test -f 'kde_glue_opengl.cpp'; then $(CYGPATH_W) 'kde_glue_opengl.cpp'; else $(CYGPATH_W) '$(srcdir)/kde_glue_opengl.cpp'; fi`

kde_gnash-kde.o: kde.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kde_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kde_gnash-kde.o -MD -MP -MF $(DEPDIR)/kde_gnash-kde.Tpo -c -o kde_gnash-kde.o `test -f 'kde.cpp' || echo '$(srcdir)/'`kde.cpp
	$(am__mv) $(DEPDIR)/kde_gnash-kde.Tpo $(DEPDIR)/kde_gnash-kde.Po
#	source='kde.cpp' object='kde_gnash-kde.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kde_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kde_gnash-kde.o `test -f 'kde.cpp' || echo '$(srcdir)/'`kde.cpp

kde_gnash-kde.obj: kde.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kde_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kde_gnash-kde.obj -MD -MP -MF $(DEPDIR)/kde_gnash-kde.Tpo -c -o kde_gnash-kde.obj `if test -f 'kde.cpp'; then $(CYGPATH_W) 'kde.cpp'; else $(CYGPATH_W) '$(srcdir)/kde.cpp'; fi`
	$(am__mv) $(DEPDIR)/kde_gnash-kde.Tpo $(DEPDIR)/kde_gnash-kde.Po
#	source='kde.cpp' object='kde_gnash-kde.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kde_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kde_gnash-kde.obj `if test -f 'kde.cpp'; then $(CYGPATH_W) 'kde.cpp'; else $(CYGPATH_W) '$(srcdir)/kde.cpp'; fi`

kde_gnash-kde_glue_agg.o: kde_glue_agg.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kde_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kde_gnash-kde_glue_agg.o -MD -MP -MF $(DEPDIR)/kde_gnash-kde_glue_agg.Tpo -c -o kde_gnash-kde_glue_agg.o `test -f 'kde_glue_agg.cpp' || echo '$(srcdir)/'`kde_glue_agg.cpp
	$(am__mv) $(DEPDIR)/kde_gnash-kde_glue_agg.Tpo $(DEPDIR)/kde_gnash-kde_glue_agg.Po
#	source='kde_glue_agg.cpp' object='kde_gnash-kde_glue_agg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kde_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kde_gnash-kde_glue_agg.o `test -f 'kde_glue_agg.cpp' || echo '$(srcdir)/'`kde_glue_agg.cpp

kde_gnash-kde_glue_agg.obj: kde_glue_agg.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kde_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kde_gnash-kde_glue_agg.obj -MD -MP -MF $(DEPDIR)/kde_gnash-kde_glue_agg.Tpo -c -o kde_gnash-kde_glue_agg.obj `if test -f 'kde_glue_agg.cpp'; then $(CYGPATH_W) 'kde_glue_agg.cpp'; else $(CYGPATH_W) '$(srcdir)/kde_glue_agg.cpp'; fi`
	$(am__mv) $(DEPDIR)/kde_gnash-kde_glue_agg.Tpo $(DEPDIR)/kde_gnash-kde_glue_agg.Po
#	source='kde_glue_agg.cpp' object='kde_gnash-kde_glue_agg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kde_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kde_gnash-kde_glue_agg.obj `if test -f 'kde_glue_agg.cpp'; then $(CYGPATH_W) 'kde_glue_agg.cpp'; else $(CYGPATH_W) '$(srcdir)/kde_glue_agg.cpp'; fi`

qtopia_gnash-gnash.o: gnash.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qtopia_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qtopia_gnash-gnash.o -MD -MP -MF $(DEPDIR)/qtopia_gnash-gnash.Tpo -c -o qtopia_gnash-gnash.o `test -f 'gnash.cpp' || echo '$(srcdir)/'`gnash.cpp
	$(am__mv) $(DEPDIR)/qtopia_gnash-gnash.Tpo $(DEPDIR)/qtopia_gnash-gnash.Po
#	source='gnash.cpp' object='qtopia_gnash-gnash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qtopia_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qtopia_gnash-gnash.o `test -f 'gnash.cpp' || echo '$(srcdir)/'`gnash.cpp

qtopia_gnash-gnash.obj: gnash.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qtopia_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qtopia_gnash-gnash.obj -MD -MP -MF $(DEPDIR)/qtopia_gnash-gnash.Tpo -c -o qtopia_gnash-gnash.obj `if test -f 'gnash.cpp'; then $(CYGPATH_W) 'gnash.cpp'; else $(CYGPATH_W) '$(srcdir)/gnash.cpp'; fi`
	$(am__mv) $(DEPDIR)/qtopia_gnash-gnash.Tpo $(DEPDIR)/qtopia_gnash-gnash.Po
#	source='gnash.cpp' object='qtopia_gnash-gnash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qtopia_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qtopia_gnash-gnash.obj `if test -f 'gnash.cpp'; then $(CYGPATH_W) 'gnash.cpp'; else $(CYGPATH_W) '$(srcdir)/gnash.cpp'; fi`

qtopia_gnash-gui.o: gui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qtopia_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qtopia_gnash-gui.o -MD -MP -MF $(DEPDIR)/qtopia_gnash-gui.Tpo -c -o qtopia_gnash-gui.o `test -f 'gui.cpp' || echo '$(srcdir)/'`gui.cpp
	$(am__mv) $(DEPDIR)/qtopia_gnash-gui.Tpo $(DEPDIR)/qtopia_gnash-gui.Po
#	source='gui.cpp' object='qtopia_gnash-gui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qtopia_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qtopia_gnash-gui.o `test -f 'gui.cpp' || echo '$(srcdir)/'`gui.cpp

qtopia_gnash-gui.obj: gui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qtopia_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qtopia_gnash-gui.obj -MD -MP -MF $(DEPDIR)/qtopia_gnash-gui.Tpo -c -o qtopia_gnash-gui.obj `if test -f 'gui.cpp'; then $(CYGPATH_W) 'gui.cpp'; else $(CYGPATH_W) '$(srcdir)/gui.cpp'; fi`
	$(am__mv) $(DEPDIR)/qtopia_gnash-gui.Tpo $(DEPDIR)/qtopia_gnash-gui.Po
#	source='gui.cpp' object='qtopia_gnash-gui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qtopia_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qtopia_gnash-gui.obj `if test -f 'gui.cpp'; then $(CYGPATH_W) 'gui.cpp'; else $(CYGPATH_W) '$(srcdir)/gui.cpp'; fi`

qtopia_gnash-Player.o: Player.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qtopia_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qtopia_gnash-Player.o -MD -MP -MF $(DEPDIR)/qtopia_gnash-Player.Tpo -c -o qtopia_gnash-Player.o `test -f 'Player.cpp' || echo '$(srcdir)/'`Player.cpp
	$(am__mv) $(DEPDIR)/qtopia_gnash-Player.Tpo $(DEPDIR)/qtopia_gnash-Player.Po
#	source='Player.cpp' object='qtopia_gnash-Player.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qtopia_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qtopia_gnash-Player.o `test -f 'Player.cpp' || echo '$(srcdir)/'`Player.cpp

qtopia_gnash-Player.obj: Player.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qtopia_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qtopia_gnash-Player.obj -MD -MP -MF $(DEPDIR)/qtopia_gnash-Player.Tpo -c -o qtopia_gnash-Player.obj `if test -f 'Player.cpp'; then $(CYGPATH_W) 'Player.cpp'; else $(CYGPATH_W) '$(srcdir)/Player.cpp'; fi`
	$(am__mv) $(DEPDIR)/qtopia_gnash-Player.Tpo $(DEPDIR)/qtopia_gnash-Player.Po
#	source='Player.cpp' object='qtopia_gnash-Player.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qtopia_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qtopia_gnash-Player.obj `if test -f 'Player.cpp'; then $(CYGPATH_W) 'Player.cpp'; else $(CYGPATH_W) '$(srcdir)/Player.cpp'; fi`

qtopia_gnash-NullGui.o: NullGui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qtopia_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qtopia_gnash-NullGui.o -MD -MP -MF $(DEPDIR)/qtopia_gnash-NullGui.Tpo -c -o qtopia_gnash-NullGui.o `test -f 'NullGui.cpp' || echo '$(srcdir)/'`NullGui.cpp
	$(am__mv) $(DEPDIR)/qtopia_gnash-NullGui.Tpo $(DEPDIR)/qtopia_gnash-NullGui.Po
#	source='NullGui.cpp' object='qtopia_gnash-NullGui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qtopia_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qtopia_gnash-NullGui.o `test -f 'NullGui.cpp' || echo '$(srcdir)/'`NullGui.cpp

qtopia_gnash-NullGui.obj: NullGui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qtopia_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qtopia_gnash-NullGui.obj -MD -MP -MF $(DEPDIR)/qtopia_gnash-NullGui.Tpo -c -o qtopia_gnash-NullGui.obj `if test -f 'NullGui.cpp'; then $(CYGPATH_W) 'NullGui.cpp'; else $(CYGPATH_W) '$(srcdir)/NullGui.cpp'; fi`
	$(am__mv) $(DEPDIR)/qtopia_gnash-NullGui.Tpo $(DEPDIR)/qtopia_gnash-NullGui.Po
#	source='NullGui.cpp' object='qtopia_gnash-NullGui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qtopia_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qtopia_gnash-NullGui.obj `if test -f 'NullGui.cpp'; then $(CYGPATH_W) 'NullGui.cpp'; else $(CYGPATH_W) '$(srcdir)/NullGui.cpp'; fi`

qtopia_gnash-gui_kde.o: gui_kde.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qtopia_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qtopia_gnash-gui_kde.o -MD -MP -MF $(DEPDIR)/qtopia_gnash-gui_kde.Tpo -c -o qtopia_gnash-gui_kde.o `test -f 'gui_kde.cpp' || echo '$(srcdir)/'`gui_kde.cpp
	$(am__mv) $(DEPDIR)/qtopia_gnash-gui_kde.Tpo $(DEPDIR)/qtopia_gnash-gui_kde.Po
#	source='gui_kde.cpp' object='qtopia_gnash-gui_kde.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qtopia_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qtopia_gnash-gui_kde.o `test -f 'gui_kde.cpp' || echo '$(srcdir)/'`gui_kde.cpp

qtopia_gnash-gui_kde.obj: gui_kde.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qtopia_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qtopia_gnash-gui_kde.obj -MD -MP -MF $(DEPDIR)/qtopia_gnash-gui_kde.Tpo -c -o qtopia_gnash-gui_kde.obj `if test -f 'gui_kde.cpp'; then $(CYGPATH_W) 'gui_kde.cpp'; else $(CYGPATH_W) '$(srcdir)/gui_kde.cpp'; fi`
	$(am__mv) $(DEPDIR)/qtopia_gnash-gui_kde.Tpo $(DEPDIR)/qtopia_gnash-gui_kde.Po
#	source='gui_kde.cpp' object='qtopia_gnash-gui_kde.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qtopia_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qtopia_gnash-gui_kde.obj `if test -f 'gui_kde.cpp'; then $(CYGPATH_W) 'gui_kde.cpp'; else $(CYGPATH_W) '$(srcdir)/gui_kde.cpp'; fi`

qtopia_gnash-kde_glue_opengl.o: kde_glue_opengl.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qtopia_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qtopia_gnash-kde_glue_opengl.o -MD -MP -MF $(DEPDIR)/qtopia_gnash-kde_glue_opengl.Tpo -c -o qtopia_gnash-kde_glue_opengl.o `test -f 'kde_glue_opengl.cpp' || echo '$(srcdir)/'`kde_glue_opengl.cpp
	$(am__mv) $(DEPDIR)/qtopia_gnash-kde_glue_opengl.Tpo $(DEPDIR)/qtopia_gnash-kde_glue_opengl.Po
#	source='kde_glue_opengl.cpp' object='qtopia_gnash-kde_glue_opengl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qtopia_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qtopia_gnash-kde_glue_opengl.o `test -f 'kde_glue_opengl.cpp' || echo '$(srcdir)/'`kde_glue_opengl.cpp

qtopia_gnash-kde_glue_opengl.obj: kde_glue_opengl.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qtopia_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qtopia_gnash-kde_glue_opengl.obj -MD -MP -MF $(DEPDIR)/qtopia_gnash-kde_glue_opengl.Tpo -c -o qtopia_gnash-kde_glue_opengl.obj `if test -f 'kde_glue_opengl.cpp'; then $(CYGPATH_W) 'kde_glue_opengl.cpp'; else $(CYGPATH_W) '$(srcdir)/kde_glue_opengl.cpp'; fi`
	$(am__mv) $(DEPDIR)/qtopia_gnash-kde_glue_opengl.Tpo $(DEPDIR)/qtopia_gnash-kde_glue_opengl.Po
#	source='kde_glue_opengl.cpp' object='qtopia_gnash-kde_glue_opengl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qtopia_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qtopia_gnash-kde_glue_opengl.obj `if test -f 'kde_glue_opengl.cpp'; then $(CYGPATH_W) 'kde_glue_opengl.cpp'; else $(CYGPATH_W) '$(srcdir)/kde_glue_opengl.cpp'; fi`

qtopia_gnash-kde.o: kde.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qtopia_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qtopia_gnash-kde.o -MD -MP -MF $(DEPDIR)/qtopia_gnash-kde.Tpo -c -o qtopia_gnash-kde.o `test -f 'kde.cpp' || echo '$(srcdir)/'`kde.cpp
	$(am__mv) $(DEPDIR)/qtopia_gnash-kde.Tpo $(DEPDIR)/qtopia_gnash-kde.Po
#	source='kde.cpp' object='qtopia_gnash-kde.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qtopia_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qtopia_gnash-kde.o `test -f 'kde.cpp' || echo '$(srcdir)/'`kde.cpp

qtopia_gnash-kde.obj: kde.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qtopia_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qtopia_gnash-kde.obj -MD -MP -MF $(DEPDIR)/qtopia_gnash-kde.Tpo -c -o qtopia_gnash-kde.obj `if test -f 'kde.cpp'; then $(CYGPATH_W) 'kde.cpp'; else $(CYGPATH_W) '$(srcdir)/kde.cpp'; fi`
	$(am__mv) $(DEPDIR)/qtopia_gnash-kde.Tpo $(DEPDIR)/qtopia_gnash-kde.Po
#	source='kde.cpp' object='qtopia_gnash-kde.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qtopia_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qtopia_gnash-kde.obj `if test -f 'kde.cpp'; then $(CYGPATH_W) 'kde.cpp'; else $(CYGPATH_W) '$(srcdir)/kde.cpp'; fi`

qtopia_gnash-kde_glue_agg.o: kde_glue_agg.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qtopia_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qtopia_gnash-kde_glue_agg.o -MD -MP -MF $(DEPDIR)/qtopia_gnash-kde_glue_agg.Tpo -c -o qtopia_gnash-kde_glue_agg.o `test -f 'kde_glue_agg.cpp' || echo '$(srcdir)/'`kde_glue_agg.cpp
	$(am__mv) $(DEPDIR)/qtopia_gnash-kde_glue_agg.Tpo $(DEPDIR)/qtopia_gnash-kde_glue_agg.Po
#	source='kde_glue_agg.cpp' object='qtopia_gnash-kde_glue_agg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qtopia_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qtopia_gnash-kde_glue_agg.o `test -f 'kde_glue_agg.cpp' || echo '$(srcdir)/'`kde_glue_agg.cpp

qtopia_gnash-kde_glue_agg.obj: kde_glue_agg.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qtopia_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qtopia_gnash-kde_glue_agg.obj -MD -MP -MF $(DEPDIR)/qtopia_gnash-kde_glue_agg.Tpo -c -o qtopia_gnash-kde_glue_agg.obj `if test -f 'kde_glue_agg.cpp'; then $(CYGPATH_W) 'kde_glue_agg.cpp'; else $(CYGPATH_W) '$(srcdir)/kde_glue_agg.cpp'; fi`
	$(am__mv) $(DEPDIR)/qtopia_gnash-kde_glue_agg.Tpo $(DEPDIR)/qtopia_gnash-kde_glue_agg.Po
#	source='kde_glue_agg.cpp' object='qtopia_gnash-kde_glue_agg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qtopia_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qtopia_gnash-kde_glue_agg.obj `if test -f 'kde_glue_agg.cpp'; then $(CYGPATH_W) 'kde_glue_agg.cpp'; else $(CYGPATH_W) '$(srcdir)/kde_glue_agg.cpp'; fi`

riscos_gnash-gnash.o: gnash.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(riscos_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT riscos_gnash-gnash.o -MD -MP -MF $(DEPDIR)/riscos_gnash-gnash.Tpo -c -o riscos_gnash-gnash.o `test -f 'gnash.cpp' || echo '$(srcdir)/'`gnash.cpp
	$(am__mv) $(DEPDIR)/riscos_gnash-gnash.Tpo $(DEPDIR)/riscos_gnash-gnash.Po
#	source='gnash.cpp' object='riscos_gnash-gnash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(riscos_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o riscos_gnash-gnash.o `test -f 'gnash.cpp' || echo '$(srcdir)/'`gnash.cpp

riscos_gnash-gnash.obj: gnash.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(riscos_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT riscos_gnash-gnash.obj -MD -MP -MF $(DEPDIR)/riscos_gnash-gnash.Tpo -c -o riscos_gnash-gnash.obj `if test -f 'gnash.cpp'; then $(CYGPATH_W) 'gnash.cpp'; else $(CYGPATH_W) '$(srcdir)/gnash.cpp'; fi`
	$(am__mv) $(DEPDIR)/riscos_gnash-gnash.Tpo $(DEPDIR)/riscos_gnash-gnash.Po
#	source='gnash.cpp' object='riscos_gnash-gnash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(riscos_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o riscos_gnash-gnash.obj `if test -f 'gnash.cpp'; then $(CYGPATH_W) 'gnash.cpp'; else $(CYGPATH_W) '$(srcdir)/gnash.cpp'; fi`

riscos_gnash-gui.o: gui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(riscos_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT riscos_gnash-gui.o -MD -MP -MF $(DEPDIR)/riscos_gnash-gui.Tpo -c -o riscos_gnash-gui.o `test -f 'gui.cpp' || echo '$(srcdir)/'`gui.cpp
	$(am__mv) $(DEPDIR)/riscos_gnash-gui.Tpo $(DEPDIR)/riscos_gnash-gui.Po
#	source='gui.cpp' object='riscos_gnash-gui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(riscos_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o riscos_gnash-gui.o `test -f 'gui.cpp' || echo '$(srcdir)/'`gui.cpp

riscos_gnash-gui.obj: gui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(riscos_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT riscos_gnash-gui.obj -MD -MP -MF $(DEPDIR)/riscos_gnash-gui.Tpo -c -o riscos_gnash-gui.obj `if test -f 'gui.cpp'; then $(CYGPATH_W) 'gui.cpp'; else $(CYGPATH_W) '$(srcdir)/gui.cpp'; fi`
	$(am__mv) $(DEPDIR)/riscos_gnash-gui.Tpo $(DEPDIR)/riscos_gnash-gui.Po
#	source='gui.cpp' object='riscos_gnash-gui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(riscos_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o riscos_gnash-gui.obj `if test -f 'gui.cpp'; then $(CYGPATH_W) 'gui.cpp'; else $(CYGPATH_W) '$(srcdir)/gui.cpp'; fi`

riscos_gnash-Player.o: Player.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(riscos_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT riscos_gnash-Player.o -MD -MP -MF $(DEPDIR)/riscos_gnash-Player.Tpo -c -o riscos_gnash-Player.o `test -f 'Player.cpp' || echo '$(srcdir)/'`Player.cpp
	$(am__mv) $(DEPDIR)/riscos_gnash-Player.Tpo $(DEPDIR)/riscos_gnash-Player.Po
#	source='Player.cpp' object='riscos_gnash-Player.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(riscos_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o riscos_gnash-Player.o `test -f 'Player.cpp' || echo '$(srcdir)/'`Player.cpp

riscos_gnash-Player.obj: Player.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(riscos_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT riscos_gnash-Player.obj -MD -MP -MF $(DEPDIR)/riscos_gnash-Player.Tpo -c -o riscos_gnash-Player.obj `if test -f 'Player.cpp'; then $(CYGPATH_W) 'Player.cpp'; else $(CYGPATH_W) '$(srcdir)/Player.cpp'; fi`
	$(am__mv) $(DEPDIR)/riscos_gnash-Player.Tpo $(DEPDIR)/riscos_gnash-Player.Po
#	source='Player.cpp' object='riscos_gnash-Player.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(riscos_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o riscos_gnash-Player.obj `if test -f 'Player.cpp'; then $(CYGPATH_W) 'Player.cpp'; else $(CYGPATH_W) '$(srcdir)/Player.cpp'; fi`

riscos_gnash-NullGui.o: NullGui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(riscos_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT riscos_gnash-NullGui.o -MD -MP -MF $(DEPDIR)/riscos_gnash-NullGui.Tpo -c -o riscos_gnash-NullGui.o `test -f 'NullGui.cpp' || echo '$(srcdir)/'`NullGui.cpp
	$(am__mv) $(DEPDIR)/riscos_gnash-NullGui.Tpo $(DEPDIR)/riscos_gnash-NullGui.Po
#	source='NullGui.cpp' object='riscos_gnash-NullGui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(riscos_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o riscos_gnash-NullGui.o `test -f 'NullGui.cpp' || echo '$(srcdir)/'`NullGui.cpp

riscos_gnash-NullGui.obj: NullGui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(riscos_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT riscos_gnash-NullGui.obj -MD -MP -MF $(DEPDIR)/riscos_gnash-NullGui.Tpo -c -o riscos_gnash-NullGui.obj `if test -f 'NullGui.cpp'; then $(CYGPATH_W) 'NullGui.cpp'; else $(CYGPATH_W) '$(srcdir)/NullGui.cpp'; fi`
	$(am__mv) $(DEPDIR)/riscos_gnash-NullGui.Tpo $(DEPDIR)/riscos_gnash-NullGui.Po
#	source='NullGui.cpp' object='riscos_gnash-NullGui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(riscos_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o riscos_gnash-NullGui.obj `if test -f 'NullGui.cpp'; then $(CYGPATH_W) 'NullGui.cpp'; else $(CYGPATH_W) '$(srcdir)/NullGui.cpp'; fi`

riscos_gnash-gui_riscos.o: gui_riscos.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(riscos_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT riscos_gnash-gui_riscos.o -MD -MP -MF $(DEPDIR)/riscos_gnash-gui_riscos.Tpo -c -o riscos_gnash-gui_riscos.o `test -f 'gui_riscos.cpp' || echo '$(srcdir)/'`gui_riscos.cpp
	$(am__mv) $(DEPDIR)/riscos_gnash-gui_riscos.Tpo $(DEPDIR)/riscos_gnash-gui_riscos.Po
#	source='gui_riscos.cpp' object='riscos_gnash-gui_riscos.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(riscos_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o riscos_gnash-gui_riscos.o `test -f 'gui_riscos.cpp' || echo '$(srcdir)/'`gui_riscos.cpp

riscos_gnash-gui_riscos.obj: gui_riscos.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(riscos_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT riscos_gnash-gui_riscos.obj -MD -MP -MF $(DEPDIR)/riscos_gnash-gui_riscos.Tpo -c -o riscos_gnash-gui_riscos.obj `if test -f 'gui_riscos.cpp'; then $(CYGPATH_W) 'gui_riscos.cpp'; else $(CYGPATH_W) '$(srcdir)/gui_riscos.cpp'; fi`
	$(am__mv) $(DEPDIR)/riscos_gnash-gui_riscos.Tpo $(DEPDIR)/riscos_gnash-gui_riscos.Po
#	source='gui_riscos.cpp' object='riscos_gnash-gui_riscos.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(riscos_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o riscos_gnash-gui_riscos.obj `if test -f 'gui_riscos.cpp'; then $(CYGPATH_W) 'gui_riscos.cpp'; else $(CYGPATH_W) '$(srcdir)/gui_riscos.cpp'; fi`

riscos_gnash-riscos.o: riscos.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(riscos_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT riscos_gnash-riscos.o -MD -MP -MF $(DEPDIR)/riscos_gnash-riscos.Tpo -c -o riscos_gnash-riscos.o `test -f 'riscos.cpp' || echo '$(srcdir)/'`riscos.cpp
	$(am__mv) $(DEPDIR)/riscos_gnash-riscos.Tpo $(DEPDIR)/riscos_gnash-riscos.Po
#	source='riscos.cpp' object='riscos_gnash-riscos.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(riscos_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o riscos_gnash-riscos.o `test -f 'riscos.cpp' || echo '$(srcdir)/'`riscos.cpp

riscos_gnash-riscos.obj: riscos.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(riscos_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT riscos_gnash-riscos.obj -MD -MP -MF $(DEPDIR)/riscos_gnash-riscos.Tpo -c -o riscos_gnash-riscos.obj `if test -f 'riscos.cpp'; then $(CYGPATH_W) 'riscos.cpp'; else $(CYGPATH_W) '$(srcdir)/riscos.cpp'; fi`
	$(am__mv) $(DEPDIR)/riscos_gnash-riscos.Tpo $(DEPDIR)/riscos_gnash-riscos.Po
#	source='riscos.cpp' object='riscos_gnash-riscos.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(riscos_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o riscos_gnash-riscos.obj `if test -f 'riscos.cpp'; then $(CYGPATH_W) 'riscos.cpp'; else $(CYGPATH_W) '$(srcdir)/riscos.cpp'; fi`

riscos_gnash-riscos_glue_agg.o: riscos_glue_agg.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(riscos_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT riscos_gnash-riscos_glue_agg.o -MD -MP -MF $(DEPDIR)/riscos_gnash-riscos_glue_agg.Tpo -c -o riscos_gnash-riscos_glue_agg.o `test -f 'riscos_glue_agg.cpp' || echo '$(srcdir)/'`riscos_glue_agg.cpp
	$(am__mv) $(DEPDIR)/riscos_gnash-riscos_glue_agg.Tpo $(DEPDIR)/riscos_gnash-riscos_glue_agg.Po
#	source='riscos_glue_agg.cpp' object='riscos_gnash-riscos_glue_agg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(riscos_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o riscos_gnash-riscos_glue_agg.o `test -f 'riscos_glue_agg.cpp' || echo '$(srcdir)/'`riscos_glue_agg.cpp

riscos_gnash-riscos_glue_agg.obj: riscos_glue_agg.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(riscos_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT riscos_gnash-riscos_glue_agg.obj -MD -MP -MF $(DEPDIR)/riscos_gnash-riscos_glue_agg.Tpo -c -o riscos_gnash-riscos_glue_agg.obj `if test -f 'riscos_glue_agg.cpp'; then $(CYGPATH_W) 'riscos_glue_agg.cpp'; else $(CYGPATH_W) '$(srcdir)/riscos_glue_agg.cpp'; fi`
	$(am__mv) $(DEPDIR)/riscos_gnash-riscos_glue_agg.Tpo $(DEPDIR)/riscos_gnash-riscos_glue_agg.Po
#	source='riscos_glue_agg.cpp' object='riscos_gnash-riscos_glue_agg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(riscos_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o riscos_gnash-riscos_glue_agg.obj `if test -f 'riscos_glue_agg.cpp'; then $(CYGPATH_W) 'riscos_glue_agg.cpp'; else $(CYGPATH_W) '$(srcdir)/riscos_glue_agg.cpp'; fi`

sdl_gnash-gnash.o: gnash.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sdl_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sdl_gnash-gnash.o -MD -MP -MF $(DEPDIR)/sdl_gnash-gnash.Tpo -c -o sdl_gnash-gnash.o `test -f 'gnash.cpp' || echo '$(srcdir)/'`gnash.cpp
	$(am__mv) $(DEPDIR)/sdl_gnash-gnash.Tpo $(DEPDIR)/sdl_gnash-gnash.Po
#	source='gnash.cpp' object='sdl_gnash-gnash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sdl_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sdl_gnash-gnash.o `test -f 'gnash.cpp' || echo '$(srcdir)/'`gnash.cpp

sdl_gnash-gnash.obj: gnash.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sdl_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sdl_gnash-gnash.obj -MD -MP -MF $(DEPDIR)/sdl_gnash-gnash.Tpo -c -o sdl_gnash-gnash.obj `if test -f 'gnash.cpp'; then $(CYGPATH_W) 'gnash.cpp'; else $(CYGPATH_W) '$(srcdir)/gnash.cpp'; fi`
	$(am__mv) $(DEPDIR)/sdl_gnash-gnash.Tpo $(DEPDIR)/sdl_gnash-gnash.Po
#	source='gnash.cpp' object='sdl_gnash-gnash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sdl_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sdl_gnash-gnash.obj `if test -f 'gnash.cpp'; then $(CYGPATH_W) 'gnash.cpp'; else $(CYGPATH_W) '$(srcdir)/gnash.cpp'; fi`

sdl_gnash-gui.o: gui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sdl_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sdl_gnash-gui.o -MD -MP -MF $(DEPDIR)/sdl_gnash-gui.Tpo -c -o sdl_gnash-gui.o `test -f 'gui.cpp' || echo '$(srcdir)/'`gui.cpp
	$(am__mv) $(DEPDIR)/sdl_gnash-gui.Tpo $(DEPDIR)/sdl_gnash-gui.Po
#	source='gui.cpp' object='sdl_gnash-gui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sdl_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sdl_gnash-gui.o `test -f 'gui.cpp' || echo '$(srcdir)/'`gui.cpp

sdl_gnash-gui.obj: gui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sdl_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sdl_gnash-gui.obj -MD -MP -MF $(DEPDIR)/sdl_gnash-gui.Tpo -c -o sdl_gnash-gui.obj `if test -f 'gui.cpp'; then $(CYGPATH_W) 'gui.cpp'; else $(CYGPATH_W) '$(srcdir)/gui.cpp'; fi`
	$(am__mv) $(DEPDIR)/sdl_gnash-gui.Tpo $(DEPDIR)/sdl_gnash-gui.Po
#	source='gui.cpp' object='sdl_gnash-gui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sdl_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sdl_gnash-gui.obj `if test -f 'gui.cpp'; then $(CYGPATH_W) 'gui.cpp'; else $(CYGPATH_W) '$(srcdir)/gui.cpp'; fi`

sdl_gnash-Player.o: Player.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sdl_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sdl_gnash-Player.o -MD -MP -MF $(DEPDIR)/sdl_gnash-Player.Tpo -c -o sdl_gnash-Player.o `test -f 'Player.cpp' || echo '$(srcdir)/'`Player.cpp
	$(am__mv) $(DEPDIR)/sdl_gnash-Player.Tpo $(DEPDIR)/sdl_gnash-Player.Po
#	source='Player.cpp' object='sdl_gnash-Player.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sdl_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sdl_gnash-Player.o `test -f 'Player.cpp' || echo '$(srcdir)/'`Player.cpp

sdl_gnash-Player.obj: Player.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sdl_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sdl_gnash-Player.obj -MD -MP -MF $(DEPDIR)/sdl_gnash-Player.Tpo -c -o sdl_gnash-Player.obj `if test -f 'Player.cpp'; then $(CYGPATH_W) 'Player.cpp'; else $(CYGPATH_W) '$(srcdir)/Player.cpp'; fi`
	$(am__mv) $(DEPDIR)/sdl_gnash-Player.Tpo $(DEPDIR)/sdl_gnash-Player.Po
#	source='Player.cpp' object='sdl_gnash-Player.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sdl_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sdl_gnash-Player.obj `if test -f 'Player.cpp'; then $(CYGPATH_W) 'Player.cpp'; else $(CYGPATH_W) '$(srcdir)/Player.cpp'; fi`

sdl_gnash-NullGui.o: NullGui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sdl_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sdl_gnash-NullGui.o -MD -MP -MF $(DEPDIR)/sdl_gnash-NullGui.Tpo -c -o sdl_gnash-NullGui.o `test -f 'NullGui.cpp' || echo '$(srcdir)/'`NullGui.cpp
	$(am__mv) $(DEPDIR)/sdl_gnash-NullGui.Tpo $(DEPDIR)/sdl_gnash-NullGui.Po
#	source='NullGui.cpp' object='sdl_gnash-NullGui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sdl_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sdl_gnash-NullGui.o `test -f 'NullGui.cpp' || echo '$(srcdir)/'`NullGui.cpp

sdl_gnash-NullGui.obj: NullGui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sdl_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sdl_gnash-NullGui.obj -MD -MP -MF $(DEPDIR)/sdl_gnash-NullGui.Tpo -c -o sdl_gnash-NullGui.obj `if test -f 'NullGui.cpp'; then $(CYGPATH_W) 'NullGui.cpp'; else $(CYGPATH_W) '$(srcdir)/NullGui.cpp'; fi`
	$(am__mv) $(DEPDIR)/sdl_gnash-NullGui.Tpo $(DEPDIR)/sdl_gnash-NullGui.Po
#	source='NullGui.cpp' object='sdl_gnash-NullGui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sdl_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sdl_gnash-NullGui.obj `if test -f 'NullGui.cpp'; then $(CYGPATH_W) 'NullGui.cpp'; else $(CYGPATH_W) '$(srcdir)/NullGui.cpp'; fi`

sdl_gnash-gui_sdl.o: gui_sdl.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sdl_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sdl_gnash-gui_sdl.o -MD -MP -MF $(DEPDIR)/sdl_gnash-gui_sdl.Tpo -c -o sdl_gnash-gui_sdl.o `test -f 'gui_sdl.cpp' || echo '$(srcdir)/'`gui_sdl.cpp
	$(am__mv) $(DEPDIR)/sdl_gnash-gui_sdl.Tpo $(DEPDIR)/sdl_gnash-gui_sdl.Po
#	source='gui_sdl.cpp' object='sdl_gnash-gui_sdl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sdl_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sdl_gnash-gui_sdl.o `test -f 'gui_sdl.cpp' || echo '$(srcdir)/'`gui_sdl.cpp

sdl_gnash-gui_sdl.obj: gui_sdl.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sdl_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sdl_gnash-gui_sdl.obj -MD -MP -MF $(DEPDIR)/sdl_gnash-gui_sdl.Tpo -c -o sdl_gnash-gui_sdl.obj `if test -f 'gui_sdl.cpp'; then $(CYGPATH_W) 'gui_sdl.cpp'; else $(CYGPATH_W) '$(srcdir)/gui_sdl.cpp'; fi`
	$(am__mv) $(DEPDIR)/sdl_gnash-gui_sdl.Tpo $(DEPDIR)/sdl_gnash-gui_sdl.Po
#	source='gui_sdl.cpp' object='sdl_gnash-gui_sdl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sdl_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sdl_gnash-gui_sdl.obj `if test -f 'gui_sdl.cpp'; then $(CYGPATH_W) 'gui_sdl.cpp'; else $(CYGPATH_W) '$(srcdir)/gui_sdl.cpp'; fi`

sdl_gnash-sdl.o: sdl.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sdl_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sdl_gnash-sdl.o -MD -MP -MF $(DEPDIR)/sdl_gnash-sdl.Tpo -c -o sdl_gnash-sdl.o `test -f 'sdl.cpp' || echo '$(srcdir)/'`sdl.cpp
	$(am__mv) $(DEPDIR)/sdl_gnash-sdl.Tpo $(DEPDIR)/sdl_gnash-sdl.Po
#	source='sdl.cpp' object='sdl_gnash-sdl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sdl_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sdl_gnash-sdl.o `test -f 'sdl.cpp' || echo '$(srcdir)/'`sdl.cpp

sdl_gnash-sdl.obj: sdl.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sdl_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sdl_gnash-sdl.obj -MD -MP -MF $(DEPDIR)/sdl_gnash-sdl.Tpo -c -o sdl_gnash-sdl.obj `if test -f 'sdl.cpp'; then $(CYGPATH_W) 'sdl.cpp'; else $(CYGPATH_W) '$(srcdir)/sdl.cpp'; fi`
	$(am__mv) $(DEPDIR)/sdl_gnash-sdl.Tpo $(DEPDIR)/sdl_gnash-sdl.Po
#	source='sdl.cpp' object='sdl_gnash-sdl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sdl_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sdl_gnash-sdl.obj `if test -f 'sdl.cpp'; then $(CYGPATH_W) 'sdl.cpp'; else $(CYGPATH_W) '$(srcdir)/sdl.cpp'; fi`

sdl_gnash-sdl_ogl_glue.o: sdl_ogl_glue.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sdl_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sdl_gnash-sdl_ogl_glue.o -MD -MP -MF $(DEPDIR)/sdl_gnash-sdl_ogl_glue.Tpo -c -o sdl_gnash-sdl_ogl_glue.o `test -f 'sdl_ogl_glue.cpp' || echo '$(srcdir)/'`sdl_ogl_glue.cpp
	$(am__mv) $(DEPDIR)/sdl_gnash-sdl_ogl_glue.Tpo $(DEPDIR)/sdl_gnash-sdl_ogl_glue.Po
#	source='sdl_ogl_glue.cpp' object='sdl_gnash-sdl_ogl_glue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sdl_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sdl_gnash-sdl_ogl_glue.o `test -f 'sdl_ogl_glue.cpp' || echo '$(srcdir)/'`sdl_ogl_glue.cpp

sdl_gnash-sdl_ogl_glue.obj: sdl_ogl_glue.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sdl_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sdl_gnash-sdl_ogl_glue.obj -MD -MP -MF $(DEPDIR)/sdl_gnash-sdl_ogl_glue.Tpo -c -o sdl_gnash-sdl_ogl_glue.obj `if test -f 'sdl_ogl_glue.cpp'; then $(CYGPATH_W) 'sdl_ogl_glue.cpp'; else $(CYGPATH_W) '$(srcdir)/sdl_ogl_glue.cpp'; fi`
	$(am__mv) $(DEPDIR)/sdl_gnash-sdl_ogl_glue.Tpo $(DEPDIR)/sdl_gnash-sdl_ogl_glue.Po
#	source='sdl_ogl_glue.cpp' object='sdl_gnash-sdl_ogl_glue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sdl_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sdl_gnash-sdl_ogl_glue.obj `if test -f 'sdl_ogl_glue.cpp'; then $(CYGPATH_W) 'sdl_ogl_glue.cpp'; else $(CYGPATH_W) '$(srcdir)/sdl_ogl_glue.cpp'; fi`

sdl_gnash-sdl_agg_glue.o: sdl_agg_glue.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sdl_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sdl_gnash-sdl_agg_glue.o -MD -MP -MF $(DEPDIR)/sdl_gnash-sdl_agg_glue.Tpo -c -o sdl_gnash-sdl_agg_glue.o `test -f 'sdl_agg_glue.cpp' || echo '$(srcdir)/'`sdl_agg_glue.cpp
	$(am__mv) $(DEPDIR)/sdl_gnash-sdl_agg_glue.Tpo $(DEPDIR)/sdl_gnash-sdl_agg_glue.Po
#	source='sdl_agg_glue.cpp' object='sdl_gnash-sdl_agg_glue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sdl_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sdl_gnash-sdl_agg_glue.o `test -f 'sdl_agg_glue.cpp' || echo '$(srcdir)/'`sdl_agg_glue.cpp

sdl_gnash-sdl_agg_glue.obj: sdl_agg_glue.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sdl_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sdl_gnash-sdl_agg_glue.obj -MD -MP -MF $(DEPDIR)/sdl_gnash-sdl_agg_glue.Tpo -c -o sdl_gnash-sdl_agg_glue.obj `if test -f 'sdl_agg_glue.cpp'; then $(CYGPATH_W) 'sdl_agg_glue.cpp'; else $(CYGPATH_W) '$(srcdir)/sdl_agg_glue.cpp'; fi`
	$(am__mv) $(DEPDIR)/sdl_gnash-sdl_agg_glue.Tpo $(DEPDIR)/sdl_gnash-sdl_agg_glue.Po
#	source='sdl_agg_glue.cpp' object='sdl_gnash-sdl_agg_glue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sdl_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sdl_gnash-sdl_agg_glue.obj `if test -f 'sdl_agg_glue.cpp'; then $(CYGPATH_W) 'sdl_agg_glue.cpp'; else $(CYGPATH_W) '$(srcdir)/sdl_agg_glue.cpp'; fi`

sdl_gnash-sdl_cairo_glue.o: sdl_cairo_glue.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sdl_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sdl_gnash-sdl_cairo_glue.o -MD -MP -MF $(DEPDIR)/sdl_gnash-sdl_cairo_glue.Tpo -c -o sdl_gnash-sdl_cairo_glue.o `test -f 'sdl_cairo_glue.cpp' || echo '$(srcdir)/'`sdl_cairo_glue.cpp
	$(am__mv) $(DEPDIR)/sdl_gnash-sdl_cairo_glue.Tpo $(DEPDIR)/sdl_gnash-sdl_cairo_glue.Po
#	source='sdl_cairo_glue.cpp' object='sdl_gnash-sdl_cairo_glue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sdl_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sdl_gnash-sdl_cairo_glue.o `test -f 'sdl_cairo_glue.cpp' || echo '$(srcdir)/'`sdl_cairo_glue.cpp

sdl_gnash-sdl_cairo_glue.obj: sdl_cairo_glue.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sdl_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sdl_gnash-sdl_cairo_glue.obj -MD -MP -MF $(DEPDIR)/sdl_gnash-sdl_cairo_glue.Tpo -c -o sdl_gnash-sdl_cairo_glue.obj `if test -f 'sdl_cairo_glue.cpp'; then $(CYGPATH_W) 'sdl_cairo_glue.cpp'; else $(CYGPATH_W) '$(srcdir)/sdl_cairo_glue.cpp'; fi`
	$(am__mv) $(DEPDIR)/sdl_gnash-sdl_cairo_glue.Tpo $(DEPDIR)/sdl_gnash-sdl_cairo_glue.Po
#	source='sdl_cairo_glue.cpp' object='sdl_gnash-sdl_cairo_glue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sdl_gnash_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sdl_gnash-sdl_cairo_glue.obj `if test -f 'sdl_cairo_glue.cpp'; then $(CYGPATH_W) 'sdl_cairo_glue.cpp'; else $(CYGPATH_W) '$(srcdir)/sdl_cairo_glue.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-dist_imagesDATA: $(dist_images_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(imagesdir)" || $(MKDIR_P) "$(DESTDIR)$(imagesdir)"
	@list='$(dist_images_DATA)'; test -n "$(imagesdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(imagesdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(imagesdir)" || exit $$?; \
	done

uninstall-dist_imagesDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_images_DATA)'; test -n "$(imagesdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(imagesdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(imagesdir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(SCRIPTS) $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(pkglibdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(imagesdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstLTLIBRARIES clean-pkglibLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-dist_imagesDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-binSCRIPTS \
	install-pkglibLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-binSCRIPTS \
	uninstall-dist_imagesDATA uninstall-pkglibLTLIBRARIES

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool clean-noinstLTLIBRARIES \
	clean-pkglibLTLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-binSCRIPTS install-data \
	install-data-am install-dist_imagesDATA install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-pkglibLTLIBRARIES \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-binSCRIPTS uninstall-dist_imagesDATA \
	uninstall-pkglibLTLIBRARIES


gnash: gnash.in
	cp $< $@
	chmod +x $@
# if BUILD_AGG_RENDERER
#	aqua_gnash_CPPFLAGS += $(AGG_CFLAGS)
# 	aqua_gnash_LDADD += $(top_builddir)/backend/libgnashagg.la \
#	$(AQUA_LIBS) $(AGG_LIBS)
# 	aqua_gnash_SOURCES += aqua_agg_glue.cpp aqua_agg_glue.h \
# 	aqua.cpp aquasup.h aqua_glue.h
# endif

# i486 means UML target, else assume REMOTE_IP refers to ARM
# Sign the bundle
#ifeq ($(ALP_SECURITY),1)
#$(SIGN_TARGET): $(CERTIFICATE) $(KEY)
#	@echo [$(TARGET_NAME)] Sign $@
#	$(DO_ECHO)$(SIGN) $(SRC_BND_DIR) $^ $(PASS) $(TARGET_NAME)
#endif

# alp-ip:
# 	if test ! -f /tmp/alp.ip; then \
# 	  if test "`uname -m`" = "i486" -a "`uname -m`" = "i686" ; then \
# 	    echo "$(UML_IP)" | cut -d ' ' -f1 > /tmp/alp.ip ; \
# 	  else \
# 	    echo "$(REMOTE_IP)" | cut -d ' ' -f1 > /tmp/alp.ip ; \
# 	  fi ; \
# 	fi

# alp-bundle: libgnashalp.la
# 	$(mkinstalldirs) $(ALP_NAMESPACE)/rsc
# 	echo  $(srcdir)/Manifest.xml $(ALP_NAMESPACE)/
# 	cp -f $(srcdir)/Manifest.xml $(ALP_NAMESPACE)/
# 	@if test -f libgnash.so; then \
# 	  cp -vf libgnashalp.so $(ALP_NAMESPACE)/; \
# 	else \
# 	  cp -vf .libs/libgnashalp.so $(ALP_NAMESPACE)/; \
# 	fi
# 	cp -f $(top_srcdir)/gui/images/GnashGTiny.png $(ALP_NAMESPACE)/rsc/
# 	cp -f $(top_srcdir)/gui/images/gravity.swf $(ALP_NAMESPACE)/rsc/

# bar: alp-bundle # signed $(BUNDLE_TARGETS) $(SIGN_TARGET) 
# 	$(BARTENDER) pack $(ALP_NAMESPACE) $(ALP_NAMESPACE).bar
# #	cp $(BAR_TARGET) $(BAR_DIR)

# # install-alp: alp-ip alp-bundle install-files
# # 	echo "I think I'm installing"
# # 	(echo "install $(ALP_NAMESPACE).hello.bar `ls -la $(ALP_NAMESPACE).hello.bar | cut -d ' ' -f 6,6` 0 0 0755" ; cat $(ALP_NAMESPACE).bar ) | $(NETCAT_REMOTE)
# # 	@echo; echo "Registering new bar file with target..."
# # 	@echo 'package install $(ALP_NAMESPACE).bar' | $(NETCAT_REMOTE)
# # 	@echo " "

# # (echo "install /tmp/$(ALP_NAMESPACE).hello.bar `/scratchbox/tools/bin/ls -la buil
# # d/alp-simulator/$(ALP_NAMESPACE).hello.bar | /scratchbox/tools/bin/cut --delim=' 
# # ' --fields=6,6` 0 0 0755" ; /scratchbox/tools/bin/cat build/alp-simulator/com.ac
# # cess.apps.hello.bar ) | netcat -q 10 `cat /tmp/alp.ip` 5038
# install-alp: bar install-files # launcher uninstall
# 	@echo "Installing new bar file..."
# 	size=`ls -la $(ALP_NAMESPACE).bar | cut --delim=' ' --fields=6,6`; \
# 	(echo "install $(ALP_NAMESPACE).bar $$size 0 0 0755" ; cat $(ALP_NAMESPACE).bar ) | $(NETCAT_REMOTE)
# 	@echo; echo "Registering new bar file with target..."
# 	@echo 'package install /tmp/$(ALP_NAMESPACE).bar' | $(NETCAT_REMOTE)
# 	@echo " "

#launch: 
#	@echo 'package run bar:$(ALP_NAMESPACE)' | $(NETCAT_REMOTE)

# Note: bundle delete requires rdbgd version 11
# uninstall-alp:
# 	@echo 'package delete bar:$(ALP_NAMESPACE)' | $(NETCAT_REMOTE)
# 	-if test -e $(DEST_BND_DIR)/Manifest.xml ; then \
# 	  rm -Rf $(DEST_BND_DIR) ; \
# 	fi
#############
# install-files - Install built files into current rootfs
#           (DO NOT USE if target is running; does not interact with target)
#############

# install-files: alp-bundle
# 	$(mkinstalldirs) $(DEST_BND_ROOT)/$(ALP_NAMESPACE)
# # 	-if [ -e $(DEST_BND_DIR)/Manifest.xml ] ; then \
# # 	  echo " " ; \
# # 	  echo "Bundle already exists! Removing old bundle..." ; \
# # 	  rm -Rf $(DEST_BND_DIR) ; \
# # 	fi
# 	@echo "Installing new bundle files..."
# 	cp -Rf $(ALP_NAMESPACE) $(DEST_BND_ROOT)

# #############
# # uninstall-files - Uninstall built files from current rootfs
# #           (DO NOT USE if target is running; does not interact with target)
# #############

# uninstall-files:
# 	@echo " "
# 	-if [ -e $(DEST_BND_DIR)/Manifest.xml ] ; then \
# 	  echo "Removing old bundle... (NOTE: target should NOT be running!)" ; \
# 	  rm -Rf $(DEST_BND_DIR) ; \
# 	else \
# 	  echo "Manifest.xml not found in $(DEST_BND_DIR)" ; \
# 	  echo "If the directory exists, you'll need to remove it manually." ; \
# 	fi
# 	@echo " "

# ###########
# # uninstall - uninstall app from remote target (using "bundle delete")
# #           (depends on netcat instead of rdbgd since it works w/o target)
# ###########

# uninstall-alp: uninstall-files
# 	@# Note: bundle delete requires rdbgd version 11
# 	@echo " "
# 	@echo "Removing old bundle..."
# 	@echo "(If this returns an error, the target is probably not running.)"
# 	@echo "(In that case, the bundle should be gone when you next boot the target.)"
# 	@echo " "
# 	-@echo 'package delete bar:$(ALP_NAMESPACE)' | $(NETCAT_REMOTE)
# 	@echo " "
# 	@# explicitly remove the bundle directory in case the rdbgd command fails.

# #
# # Build the GTK/HILDON gui
# #
# if BUILD_HILDON_GUI
# bin_PROGRAMS += hildon-gnash
# hildon_gnash_SOURCES = $(GUI_SRCS) gui_gtk.cpp
# hildon_gnash_CPPFLAGS = -DGUI_GTK -DGUI_HILDON -DGUI_CONFIG=\"HILDON\" \
# 	$(AM_CPPFLAGS) $(GTK_CFLAGS) $(HILDON_CFLAGS)
# hildon_gnash_LDFLAGS = $(LIBLTDL) -export-dynamic $(AM_LDFLAGS)
# #gtk_gnash_DEPENDENCIES = .configline

# if BUILD_OGL_RENDERER
# hildon_gnash_CPPFLAGS += $(OPENGL_CFLAGS)
# hildon_gnash_SOURCES += gtk_glue_gtkglext.cpp gtk_glue_gtkglext.h \
# 		gtk.cpp gtksup.h gtk_glue.h
# hildon_gnash_LDADD = $(top_builddir)/backend/libgnashogl.la \
# 		$(GNASH_LIBS) $(GTK_LIBS) $(OPENGL_LIBS) $(HILDON_LIBS)
# endif				# BUILD_OGL_RENDERER
# if BUILD_AGG_RENDERER
# hildon_gnash_CPPFLAGS += $(AGG_CFLAGS) $(HILDON_CFLAGS)
# hildon_gnash_SOURCES += gtk_glue_agg.cpp gtk_glue_agg.h \
# 		gtk.cpp gtksup.h gtk_glue.h
# hildon_gnash_LDADD = $(top_builddir)/backend/libgnashagg.la \
# 		$(GNASH_LIBS) $(GTK_LIBS) $(AGG_LIBS) $(HILDON_LIBS)

# endif				# BUILD_AGG_RENDERER
# if BUILD_CAIRO_RENDERER
# hildon_gnash_CPPFLAGS += $(CAIRO_CFLAGS)
# hildon_gnash_SOURCES += gtk_glue_cairo.cpp gtk_glue_cairo.h \
# 		gtk.cpp gtksup.h gtk_glue.h
# hildon_gnash_LDADD = $(top_builddir)/backend/libgnashcairo.la \
# 		$(GNASH_LIBS) $(GTK_LIBS) $(CAIRO_LIBS) $(HILDON_LIBS)
# endif				# BUILD_CAIRO_RENDERER
# endif				# BUILD_GTK_HILDON

bundle: Info.plist
	@echo " Building: $(bundle_name)" 
	rm -rf $(bundle_name)/Contents
	mkdir -p $(bundle_name)/Contents/MacOS
	mkdir -p $(bundle_name)/Contents/Resources
	echo "APPL????" > $(bundle_name)/Contents/PkgInfo
	cp Info.plist $(bundle_name)/Contents/Info.plist
	cp -f .libs/aqua-gnash $(bundle_name)/Contents/MacOS/Gnash
	cp -f images/GnashG.icns $(bundle_name)/Contents/Resources/

klash.moc: $(srcdir)/kdesup.h
	@if test x"$(MOC)" != x; then \
	  echo "Generating MOC file..."; \
	  $(MOC) $(srcdir)/kdesup.h -o klash.moc; \
	else  \
	  echo "WARNING: Install QT's moc tool! Linking to default MOC file"; \
	  ln -sf $(srcdir)/klash.moc.in klash.moc; \
	fi

.configline: ../config.log
	-@rm -f .configline
	@head ../config.log | grep " .*/configure " | sed -e 's:^  . .*configure ::' > .configline

#noinst_PROGRAMS = guitest # klash flak
#guitest_SOURCES = guitest.cpp #fltk.cpp #fltksup.h fltksupp.h gnash.cpp gtk.cpp 
#	gtksup.h gui.cpp gui.h menu.cpp menu.h sdl.cpp sdlsup.h [21~sdlsupp.h
#guitest_LDADD = $(gnash_LDADD)

# Rebuild with GCC 4.x Mudflap support
mudflap:
	@echo "Rebuilding with GCC Mudflap support"
	$(MAKE) CXXFLAGS="$(CXXFLAGS) -fmudflap" LDFLAGS="$(LDFLAGS) -lmudflap"

clean-hook:
	-rm -f core.* $(CLEANFILES)

# if DYNAMIC_GUI
# install-pluginsLTLIBRARIES: $(plugins_LTLIBRARIES)
# 	test -d "$(DESTDIR)$(plugindir)" || $(mkinstalldirs) "$(DESTDIR)$(plugindir)"
# 	for i in $(plugins_LTLIBRARIES); do \
# 	  $(LIBTOOL) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$i "$(DESTDIR)$(plugindir)/$$i" ; \
# 	done
# endif

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
