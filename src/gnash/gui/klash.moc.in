/****************************************************************************
** gnash::qwidget meta object code from reading C++ file 'kdesup.h'
**
** Created: Thu Nov 22 19:07:28 2007
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#undef QT_NO_COMPAT
#include "kdesup.h"
#include <qmetaobject.h>
#include <qapplication.h>

#include <private/qucomextra_p.h>
#if !defined(Q_MOC_OUTPUT_REVISION) || (Q_MOC_OUTPUT_REVISION != 26)
#error "This file was generated using the moc from 3.3.7. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

const char *gnash::qwidget::className() const
{
    return "gnash::qwidget";
}

QMetaObject *gnash::qwidget::metaObj = 0;
static QMetaObjectCleanUp cleanUp_gnash__qwidget( "gnash::qwidget", &gnash::qwidget::staticMetaObject );

#ifndef QT_NO_TRANSLATION
QString gnash::qwidget::tr( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "gnash::qwidget", s, c, QApplication::DefaultCodec );
    else
	return QString::fromLatin1( s );
}
#ifndef QT_NO_TRANSLATION_UTF8
QString gnash::qwidget::trUtf8( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "gnash::qwidget", s, c, QApplication::UnicodeUTF8 );
    else
	return QString::fromUtf8( s );
}
#endif // QT_NO_TRANSLATION_UTF8

#endif // QT_NO_TRANSLATION

QMetaObject* gnash::qwidget::staticMetaObject()
{
    if ( metaObj )
	return metaObj;
    QMetaObject* parentObject = WIDGETCLASS::staticMetaObject();
    static const QUMethod slot_0 = {"menuitem_restart_callback", 0, 0 };
    static const QUMethod slot_1 = {"menuitem_quit_callback", 0, 0 };
    static const QUMethod slot_2 = {"menuitem_play_callback", 0, 0 };
    static const QUMethod slot_3 = {"menuitem_pause_callback", 0, 0 };
    static const QUMethod slot_4 = {"menuitem_stop_callback", 0, 0 };
    static const QUMethod slot_5 = {"menuitem_step_forward_callback", 0, 0 };
    static const QUMethod slot_6 = {"menuitem_step_backward_callback", 0, 0 };
    static const QUMethod slot_7 = {"menuitem_jump_forward_callback", 0, 0 };
    static const QUMethod slot_8 = {"menuitem_jump_backward_callback", 0, 0 };
    static const QMetaData slot_tbl[] = {
	{ "menuitem_restart_callback()", &slot_0, QMetaData::Public },
	{ "menuitem_quit_callback()", &slot_1, QMetaData::Public },
	{ "menuitem_play_callback()", &slot_2, QMetaData::Public },
	{ "menuitem_pause_callback()", &slot_3, QMetaData::Public },
	{ "menuitem_stop_callback()", &slot_4, QMetaData::Public },
	{ "menuitem_step_forward_callback()", &slot_5, QMetaData::Public },
	{ "menuitem_step_backward_callback()", &slot_6, QMetaData::Public },
	{ "menuitem_jump_forward_callback()", &slot_7, QMetaData::Public },
	{ "menuitem_jump_backward_callback()", &slot_8, QMetaData::Public }
    };
    metaObj = QMetaObject::new_metaobject(
	"gnash::qwidget", parentObject,
	slot_tbl, 9,
	0, 0,
#ifndef QT_NO_PROPERTIES
	0, 0,
	0, 0,
#endif // QT_NO_PROPERTIES
	0, 0 );
    cleanUp_gnash__qwidget.setMetaObject( metaObj );
    return metaObj;
}

void* gnash::qwidget::qt_cast( const char* clname )
{
    if ( !qstrcmp( clname, "gnash::qwidget" ) )
	return this;
    return WIDGETCLASS::qt_cast( clname );
}

bool gnash::qwidget::qt_invoke( int _id, QUObject* _o )
{
    switch ( _id - staticMetaObject()->slotOffset() ) {
    case 0: menuitem_restart_callback(); break;
    case 1: menuitem_quit_callback(); break;
    case 2: menuitem_play_callback(); break;
    case 3: menuitem_pause_callback(); break;
    case 4: menuitem_stop_callback(); break;
    case 5: menuitem_step_forward_callback(); break;
    case 6: menuitem_step_backward_callback(); break;
    case 7: menuitem_jump_forward_callback(); break;
    case 8: menuitem_jump_backward_callback(); break;
    default:
	return WIDGETCLASS::qt_invoke( _id, _o );
    }
    return TRUE;
}

bool gnash::qwidget::qt_emit( int _id, QUObject* _o )
{
    return WIDGETCLASS::qt_emit(_id,_o);
}
#ifndef QT_NO_PROPERTIES

bool gnash::qwidget::qt_property( int id, int f, QVariant* v)
{
    return WIDGETCLASS::qt_property( id, f, v);
}

bool gnash::qwidget::qt_static_property( QObject* , int , int , QVariant* ){ return FALSE; }
#endif // QT_NO_PROPERTIES
